{"version":3,"file":"static/js/342.a4fcbf4c.chunk.js","mappings":"0dAYe,SAASA,EAAT,GAAwH,IAA3FC,EAA0F,EAA1FA,MAA0F,IAAnFC,MAAAA,OAAmF,MAA3E,GAA2E,EAAvEC,EAAuE,EAAvEA,KAAMC,EAAiE,EAAjEA,MAAOC,EAA0D,EAA1DA,WAAYC,EAA8C,EAA9CA,YAAaC,EAAiC,EAAjCA,MACnG,OAAO,UAACC,EAAA,GAAD,gBAAsBP,MAAOA,GAAWM,GAAxC,eACL,SAACE,EAAA,EAAD,UAAeP,KACf,SAACQ,EAAA,EAAD,CAAcC,uBAAwB,CAAEC,MAAO,CAAEC,WAAYR,EAAaD,EAAMU,WAAWC,iBAAmBX,EAAMU,WAAWE,oBAA/H,SACGb,IAEFG,GAAeA,KALIL,EAOvB,C,qbCUD,SAASgB,EAAT,GACyC,IADuDC,EACxD,EADwDA,2BAA4BC,EACpF,EADoFA,qBAAsBC,EAC1G,EAD0GA,gBAAiBC,EAC3H,EAD2HA,QAASC,EACpI,EADoIA,SAAUC,EAC9I,EAD8IA,MAAUhB,GACxJ,YAChCH,GAAQoB,EAAAA,EAAAA,KAKRC,GAAUC,EAAAA,EAAAA,UAAQ,kBAAMR,EAA2BS,KAAI,gBAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,QAAR,MAAuB,CAAED,IAAAA,EAAKL,MAAOF,EAAQO,GAAMC,QAAAA,EAAnD,GAArC,GAAqG,CAACX,EAA4BG,IAC1J,OAAO,SAACS,EAAA,GAAD,QACLC,eAAa,EACbC,UAAQ,EACRC,sBAAoB,EACpBR,QAASA,EACTxB,MAAOkB,EAAqBQ,KAAI,SAAAC,GAAG,MAAK,CAAEA,IAAKA,EAAKL,MAAOF,EAAQO,GAAhC,IACnCM,SAVmB,SAACC,EAAGlC,GACvBmB,EAAgBnB,EAAM0B,KAAI,SAAAS,GAAC,OAAIA,EAAER,GAAN,IAC5B,EASCS,eAAgB,SAACC,GAAD,OAAYA,EAAOf,KAAnB,EAChBgB,qBAAsB,SAACD,EAAQrC,GAAT,OAAmBqC,EAAOV,MAAQ3B,EAAM2B,GAAxC,EACtBY,YAAa,SAACC,GAAD,OAAY,SAACC,EAAA,GAAD,kBACnBD,GADmB,IAEvBlB,MAAOA,EACPoB,QAAQ,SACRC,gBAAiB,CAAEhC,MAAO,CAAEiC,MAAOzC,EAAM0C,QAAQ3C,KAAK4C,UACtDF,MAAO1B,EAAqB6B,OAAS,UAAY,UACjDC,KAAK,WANM,EAQbC,aAAc,SAAC3C,EAAO+B,GAAR,OACZ,SAACtC,EAAD,CAEEC,MAAOqC,EAAOV,IACd1B,MAAOoB,EAASgB,EAAOV,KACvBzB,KAAMmC,EAAOf,MACbnB,MAAOA,EACPC,WAAYc,EAAqBgC,SAASb,EAAOV,KACjDrB,MAAOA,GANF+B,EAAOV,IAFF,EAWdwB,WAAY,SAACC,EAAUC,GAAX,OAA2BD,EAAS1B,KAAI,SAAC1B,EAAOsD,GAC1D,IAAMC,EAAUC,EAAAA,GAAAA,MAAwB,SAAAC,GAAG,OAAIzD,EAAM2B,MAAN,UAAiB8B,EAAjB,QAAJ,IACrCb,EAAQW,QAAoBG,EAClC,OAAO,mBAACC,EAAA,GAAD,kBAAUN,EAAY,CAAEC,MAAAA,KAAxB,IAAkC3B,IAAK3B,EAAM2B,IAAKiC,KAAMvC,EAASrB,EAAM2B,KAAML,MAAOtB,EAAMsB,MAAOsB,MAAOA,IAChH,GAJW,GAKRtC,GAEP,CAMM,SAASuD,EAAT,GAAmH,IAA3EC,EAA0E,EAA1EA,WAAYC,EAA8D,EAA9DA,cAAkBzD,GAA4C,YACjH0D,GAAiBC,EAAAA,EAAAA,IAAW,kBAAMC,EAAAA,EAAAA,MAAN,GAA4B,IACtDC,GAAMC,EAAAA,EAAAA,GAAe,CAAC,WAAY,sBAAlCD,EACR,IAAKH,EAAgB,OAAO,KAE5B,IAAMK,EAA6BC,OAAOC,QAAQL,EAAAA,EAAAA,kBAAgCF,IAC/EQ,SAAQ,+BAAEC,EAAF,iBAAyB/C,KAAI,SAAAgD,GAAG,MAAK,CAAE/C,IAAK+C,EAAK9C,SAAU6C,EAA3B,GAAhC,IACRE,KAAKC,GAER,OAAO,SAAC5D,GAAD,QACLC,2BAA4BoD,EAC5BnD,qBAAsB4C,EACtB3C,gBAAiB4C,EACjB3C,QAAS,SAACO,GAAD,OAAyBqC,EAAerC,GAAKkD,OAA7C,EACTxD,SAAU,SAACM,GAAD,OAAyBqC,EAAerC,GAAKmD,OAA7C,EACVxD,MAAO6C,EAAE,oCACTY,QAAS,SAAC1C,GAAD,mCAAYA,EAAOT,eAAnB,aAAY,EAAgBoD,kBAA5B,QAA0C,EAA1C,EACTC,YAAa,SAACzC,GAAD,OAA2CA,EAAO0C,QAAS,UAACC,EAAA,EAAD,CAAyBC,UAAWC,EAAAA,EAApC,WACtE,UAACC,EAAA,EAAD,CAA6CC,GAAI,CAAEC,IAAK,QAAxD,UACGhD,EAAO0C,MADV,KACiB,SAAC,IAAD,CAAcO,OAAQjD,EAAO0C,UAD9C,UAAuB1C,EAAO0C,MAA9B,WAGC1C,EAAOkD,WAJyElD,EAAO0C,MAA7E,GAMT5E,GAEP,CAMM,SAASqF,EAAT,GAAiI,IAApFC,EAAmF,EAAnFA,aAAcC,EAAqE,EAArEA,gBAAoBvF,GAAiD,YAC7H6D,GAAMC,EAAAA,EAAAA,GAAe,YAArBD,EACR,OAAO,SAACnD,GAAD,QACLC,2BAA4B6E,EAAAA,EAAAA,KAAoB,SAAAnE,GAAG,MAAK,CAAEA,IAAAA,EAAP,IACnDT,qBAAsB0E,EACtBzE,gBAAiB0E,EACjBzE,QAAS,SAACO,GAAD,OAAsBoE,EAAAA,GAAAA,UAAiBpE,EAAvC,EACTN,SAAU,SAACM,GAAD,OAAsBqE,EAAAA,EAASrE,EAA/B,EACVL,MAAO6C,EAAE,iCACL7D,GAEP,CAMM,SAAS2F,EAAT,GAA6H,IAAjFC,EAAgF,EAAhFA,YAAaC,EAAmE,EAAnEA,eAAmB7F,GAAgD,YACzH6D,GAAMC,EAAAA,EAAAA,GAAe,YAArBD,EACR,OAAO,SAACnD,GAAD,QACLC,2BAA4BmF,EAAAA,EAAAA,KAAmB,SAAAzE,GAAG,MAAK,CAAEA,IAAAA,EAAP,IAClDT,qBAAsBgF,EACtB/E,gBAAiBgF,EACjB/E,QAAS,SAACO,GAAD,OAAqBoE,EAAAA,GAAAA,UAAiBpE,EAAtC,EACTN,SAAU,SAACM,GAAD,OAAqBqE,EAAAA,EAASrE,EAA9B,EACVL,MAAO6C,EAAE,gCACL7D,GAEP,CAoBD,SAAS+F,EAAT,GAC0C,IADwDpF,EACzD,EADyDA,2BAA4BqF,EACrF,EADqFA,oBAAqBC,EAC1G,EAD0GA,eAAgBnF,EAC1H,EAD0HA,QAASC,EACnI,EADmIA,SAAUC,EAC7I,EAD6IA,MAC7I,IADoJkF,QAAAA,OACpJ,MAD8J,kBAAM,CAAN,EAC9J,MAD2KC,YAAAA,OAC3K,aADgMC,YAAAA,OAChM,MAD8M,GAC9M,EADuOpG,GACvO,EADkNqG,aAClN,aACjCxG,GAAQoB,EAAAA,EAAAA,KAERC,GAAUC,EAAAA,EAAAA,UAAQ,kBACrBgF,EACG,CAAC,CAAE9E,IAAK,GAASL,MAAOoF,IACxB,IACFE,OAAO3F,EAA2BS,KAAI,gBAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,QAAR,MACtC,CAAED,IAAAA,EAAKL,MAAOF,EAAQO,GAAMC,QAAAA,EADU,IAJlB,GAMjB,CAACX,EAA4BG,EAASsF,EAAaD,IAE1D,OAAO,SAAC5E,EAAA,GAAD,QACLC,eAAa,EACbN,QAASA,EACTqF,UAAWP,OAAsB5C,EAAY,GAC7C1D,MAAO,CAAE2B,IAAK2E,EAAqBhF,MAAOF,EAAQkF,IAClDrE,SAAU,SAAC6E,EAAOC,EAAUC,GAAlB,OAA6C,WAAfF,EAAM9D,MAAgC,UAAXgE,IAAuBT,EAAeQ,EAAWA,EAASpF,IAAM,GAAzH,EACVS,eAAgB,SAACC,GAAD,OAAYA,EAAOf,MAAQe,EAAOf,MAAQoF,CAA1C,EAChBpE,qBAAsB,SAACD,EAAQrC,GAAT,OAAmBqC,EAAOV,MAAQ3B,EAAM2B,GAAxC,EACtBsF,kBAAmB,SAAA5E,GAAM,OAAImE,EAAQnE,EAAOV,IAAnB,EACzBY,YAAa,SAACjC,GAAD,OAAW,SAAC,KAAD,kBAClBA,GADkB,IAEtBgB,MAAOA,EACP4F,eAAgB7F,EAASiF,GACzBa,WAAUb,IAJC,EAMbrD,aAAc,SAAC3C,EAAO+B,GAAR,OACZ,SAACtC,EAAD,CAEEC,MAAOqC,EAAOV,IACd1B,MAAOoB,EAASgB,EAAOV,KACvBzB,KAAMmC,EAAOf,MACbnB,MAAOA,EACPC,WAAYkG,IAAwBjE,EAAOV,IAC3CrB,MAAOA,GANF+B,EAAOV,IAFF,GAWVrB,GAEP,CAWM,SAAS8G,EAAT,GAA+H,IAAtFC,EAAqF,EAArFA,UAAWC,EAA0E,EAA1EA,aAA0E,IAA5DhG,MAAAA,OAA4D,MAApD,GAAoD,EAA7ChB,GAA6C,YAC7H0D,GAAiBC,EAAAA,EAAAA,IAAW,kBAAMC,EAAAA,EAAAA,MAAN,GAA4B,IACtDC,GAAMC,EAAAA,EAAAA,GAAe,CAAC,WAAY,sBAAlCD,EAER,GADA7C,EAAQA,GAAgB6C,EAAE,oCACrBH,EAAgB,OAAO,KAE5B,IAAMK,EAA6BC,OAAOC,QAAQL,EAAAA,EAAAA,kBAAgCF,IAC/EQ,SAAQ,+BAAEC,EAAF,iBAAyB/C,KAAI,SAAAgD,GAAG,MAAK,CAAE/C,IAAK+C,EAAK9C,SAAU6C,EAA3B,GAAhC,IACRE,KAAKC,GAER,OAAO,SAACyB,GAAD,QACLpF,2BAA4BoD,EAC5BiC,oBAAqBe,EACrBd,eAAgBe,EAChBlG,QAAS,SAACO,GAAD,OAA8BA,GAAOqC,EAAerC,GAAKkD,OAAzD,EACTxD,SAAU,SAACM,GAAD,OAA8BA,EAAMqC,EAAerC,GAAKmD,SAAU,uBAAlE,EACVxD,MAAOA,EACPyD,QAAS,SAAC1C,GAAD,mCAAYA,EAAOT,eAAnB,aAAY,EAAgBoD,kBAA5B,QAA0C,EAA1C,EACTC,YAAa,SAACzC,GAAD,OAA2CA,EAAO0C,QAAS,UAACC,EAAA,EAAD,CAAyBC,UAAWC,EAAAA,EAApC,WACtE,UAACC,EAAA,EAAD,CAA6CC,GAAI,CAAEC,IAAK,QAAxD,UACGhD,EAAO0C,MADV,KACiB,SAAC,IAAD,CAAcO,OAAQjD,EAAO0C,UAD9C,UAAuB1C,EAAO0C,MAA9B,WAGC1C,EAAOkD,WAJyElD,EAAO0C,MAA7E,GAMT5E,GAEP,CAED,SAASsE,EAAoB2C,EAAqDC,GAChF,GAAID,EAAE3F,QAAU4F,EAAE5F,QAChB,OAAQ,EAEV,GAAI2F,EAAE3F,QAAU4F,EAAE5F,QAChB,OAAO,EAGT,IAAM6F,EAAQC,EAAAA,EAAAA,EAAA,4BAA4BH,EAAE5F,MACtCgG,EAAQD,EAAAA,EAAAA,EAAA,4BAA4BF,EAAE7F,MAC5C,OAAI8F,EAAQE,GACF,EAENF,EAAQE,EACH,EAGF,CACR,C,yIC1Pc,SAASC,EAAT,GASX,IAT0CC,EAS3C,EAT2CA,SAAUC,EASrD,EATqDA,UAAWC,EAShE,EATgEA,OAAQC,EASxE,EATwEA,QAASC,EASjF,EATiFA,QASjF,IAT0FC,KAAAA,OAS1F,aATwGC,SAAAA,OASxG,aAT0HC,cAAAA,OAS1H,SACD,GAAkCC,EAAAA,EAAAA,UAASR,GAA3C,eAAOS,EAAP,KAAkBC,EAAlB,KACA,GAAoCF,EAAAA,EAAAA,UAASP,GAA7C,eAAOU,EAAP,KAAmBC,EAAnB,KACMC,GAAYC,EAAAA,EAAAA,cAChB,SAACC,EAAY5I,GACX,GAAoB,iBAATA,EAAmB,MAAM,IAAI6I,UACxC,cAAe7I,EAAf,GAAO8I,EAAP,KAAUC,EAAV,KACAR,EAAaO,GACbL,EAAcM,EACf,GACD,CAACR,EAAcE,IAIjB,OAHAO,EAAAA,EAAAA,YAAU,kBAAMT,EAAaV,EAAnB,GAA8B,CAACU,EAAcV,KAEvDmB,EAAAA,EAAAA,YAAU,kBAAMP,EAAcX,EAApB,GAAgC,CAACW,EAAeX,KACnD,UAAC,IAAD,CAAMvC,GAAI,CAAE0D,MAAO,OAAQC,QAAS,OAAQC,WAAY,SAAUC,QAASlB,EAAO,mBAAqB,qBAAvG,WACL,SAAC,KAAD,CACElI,MAAOsI,EACPrG,SAAU,SAAAoH,GAAG,OAAItB,GAAOuB,EAAAA,EAAAA,IAAMD,EAAK,EAAGvB,GAAzB,EACbvC,GAAI,CAAEgE,GAAI,EAAGC,GAAIpB,EAAgB,OAAI1E,EAAWuF,MAAOb,EAAgB,IAAM,IAC7EqB,WAAY,CAAElE,GAAI,CAAEmE,UAAWtB,EAAgB,QAAU,WACzDlB,eAAgBkB,EAAgB,eAAY1E,EAC5CyE,SAAUA,KAEZ,SAAC,KAAD,CAAQ5C,GAAI,CAAE0D,MAAO,IAAKU,SAAU,EAAGC,GAAI,GACzCC,aAAc,iBAAM,qBAAN,EACd7J,MAAO,CAACsI,EAAWE,GACnBvG,SAAUyG,EACVoB,kBAAmB,SAAClB,EAAG5I,GAAJ,OAAciI,EAAQjI,EAAM,GAAIA,EAAM,GAAtC,EACnB+J,kBAAkB,OAClBC,IAAK,EAAGC,IAAK,GAAIC,KAAM,EAAGC,OAAK,EAC/BhC,SAAUA,KAEZ,SAAC,KAAD,CACEnI,MAAOwI,EACPvG,SAAU,SAAAoH,GAAG,OAAIrB,GAAQsB,EAAAA,EAAAA,IAAMD,EAAKxB,EAAU,IAAjC,EACbtC,GAAI,CAAEgE,GAAI,EAAGN,MAAO,IACpBQ,WAAY,CAAElE,GAAI,CAAEmE,UAAW,WAC/BvB,SAAUA,MAGf,C,6FCnDc,SAASiC,EAAT,GAA0H,IAA9FC,EAA6F,EAA7FA,OAAQC,EAAqF,EAArFA,MAAOC,EAA8E,EAA9EA,OACxD,OAAO,UAAC,IAAD,CAAKrB,QAAQ,OAAOsB,IAAK,EAAGC,EAAG,EAAGtB,WAAW,SAA7C,UACJkB,GACD,SAAC,IAAD,CAAY3H,QAAQ,YAAY6C,GAAI,CAAEoE,SAAU,GAAhD,SAAsDW,IACrDC,IAAU,SAAC,IAAD,CAAY7H,QAAQ,UAApB,SAA+B6H,MAE7C,C,uTCMc,SAASG,EAAT,GAA4F,IAA7DC,EAA4D,EAA5DA,YAA4D,IAA/CxC,SAAAA,OAA+C,SACxG,OAA+C,IAA3C7D,OAAOsG,KAAKD,EAAYE,QAAQ9H,QAAgB,SAAU4H,GACrD,SAACG,EAAD,CAA2BH,YAAaA,EAAaxC,SAAUA,IAC7D,SAAUwC,GACZ,SAACI,EAAD,CAA8BJ,YAAaA,EAAaxC,SAAUA,KAElE,SAAC6C,EAAD,CAA6BL,YAAaA,EAAaxC,SAAUA,GAE3E,CAKD,SAAS2C,EAAT,GAA+F,IAA1DH,EAAyD,EAAzDA,YAAaxC,EAA4C,EAA5CA,SAChD,GAAyC8C,EAAAA,EAAAA,YAAWC,EAAAA,GAA5CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,kBACXC,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACFE,GAAiB5C,EAAAA,EAAAA,cAAY,SAACxG,GAClC,IAAMqJ,GAAoBC,EAAAA,EAAAA,IAAUN,EAAUR,aAC1CxI,GACFuJ,EAAAA,EAAAA,IAAkBF,EAAmBb,EAAYgB,KAAMxJ,IAEvDyJ,EAAAA,EAAAA,IAAeJ,EAAmBb,EAAYgB,MAEhDP,EAAkB,CAAET,YAAaa,GAClC,GAAE,CAACb,EAAaQ,EAAWC,IAEtBS,EAAmBR,EAAKS,IAAInB,EAAY3K,OAAOA,MACrD,UAAuBsE,OAAOC,QAAQoG,EAAYE,QAAQ,GAA1D,GAAOkB,EAAP,KACMC,EAAQC,EADd,KAC+BC,MACzBC,EAAWC,EAAYzB,EAAYuB,MAEzC,OAAO,UAACG,EAAA,EAAD,CAAQC,WAAS,EAACC,KAAK,QAAQhH,GAAI,CAAEiH,aAAc,GAAK5J,MAAOiJ,EAAmB,UAAY,UAAWY,QAAS,kBAAMlB,EAAeM,OAAmBnI,EAAYqI,EAApD,EAA+D5D,SAAUA,EAAUuE,UAAWb,GAAmB,SAACc,EAAA,EAAD,KAAe,SAACC,EAAA,EAAD,IAAlP,UACJT,EADI,IACOH,IAEf,CAKD,SAASjB,EAAT,GAAqG,IAA7DJ,EAA4D,EAA5DA,YAAaxC,EAA+C,EAA/CA,SACnD,GAAyC8C,EAAAA,EAAAA,YAAWC,EAAAA,GAA5CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,kBACXC,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACFE,GAAiB5C,EAAAA,EAAAA,cAAY,SAACxG,GAClC,IAAMqJ,GAAoBC,EAAAA,EAAAA,IAAUN,EAAUR,aAC1CxI,GACFuJ,EAAAA,EAAAA,IAAkBF,EAAmBb,EAAYgB,KAAMxJ,IAEvDyJ,EAAAA,EAAAA,IAAeJ,EAAmBb,EAAYgB,MAEhDP,EAAkB,CAAET,YAAaa,GAClC,GAAE,CAACb,EAAaQ,EAAWC,IAEtBS,EAAmBR,EAAKS,IAAInB,EAAY3K,OAAOA,MAC/C6M,EAAQhB,EAAmBlB,EAAYE,OAAOgB,QAAoBnI,EAClEsI,EAAQa,EAAQZ,EAAcY,EAAMX,OAAQ,SAACY,EAAA,EAAD,CAASlK,MAAM,YAAf,wBAC5CuJ,EAAWC,EAAYzB,EAAYuB,MAEzC,OAAO,UAACa,EAAA,EAAD,CAAgBT,WAAS,EAACC,KAAK,QAAQhH,GAAI,CAAEiH,aAAc,GAAK5J,MAAOiJ,EAAmB,UAAY,UAAWvB,OAAO,4BAAO6B,EAAP,IAAkBH,KAAe7D,SAAUA,EAAnK,WACL,SAAC5H,EAAA,EAAD,CAAUkM,QAAS,kBAAMlB,GAAN,EAAwBnI,UAAWyJ,EAAO1E,UAAW0E,EAAxE,UACE,4CAEF,SAACG,EAAA,EAAD,IACC1I,OAAOC,QAAQoG,EAAYE,QAAQnJ,KAAI,+BAAEqK,EAAF,KAAYkB,EAAZ,YACtC,SAAC1M,EAAA,EAAD,CAAyBkM,QAAS,kBAAMlB,EAAeQ,EAArB,EAAgC3I,SAAUyI,IAAqBE,EAAU5D,SAAU0D,IAAqBE,EAA1I,SAAsJkB,EAAGf,MAA1IH,EADuB,MAG3C,CAKD,SAASf,EAAT,GAAmG,IAA5DL,EAA2D,EAA3DA,YAAaxC,EAA8C,EAA9CA,SAClD,GAAyC8C,EAAAA,EAAAA,YAAWC,EAAAA,GAA5CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,kBACXC,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACFE,GAAiB5C,EAAAA,EAAAA,cAAY,SAACgD,EAAyBxJ,GAC3D,IAAMqJ,GAAoBC,EAAAA,EAAAA,IAAUN,EAAUR,aAC1CxI,GACFuJ,EAAAA,EAAAA,IAAkBF,EAAmBG,EAAMxJ,IAE3CyJ,EAAAA,EAAAA,IAAeJ,EAAmBG,GAEpCP,EAAkB,CAAET,YAAaa,GAClC,GAAE,CAACL,EAAWC,IAEf,OAAO,SAAC8B,EAAA,EAAD,CAAaZ,WAAS,EAACa,YAAY,WAAWC,kBAAgB,EAACxK,MAAM,YAArE,SACJ0B,OAAOC,QAAQoG,EAAYE,QAAQnJ,KAAI,YAAqB,IAAD,eAAlBqK,EAAkB,KAARkB,EAAQ,KACpDpB,EAAmBR,EAAKS,IAAImB,EAAGjN,OAAOA,MACtCI,EAAayL,IAAqBE,EACxC,OAAO,SAACM,EAAA,EAAD,CACLzJ,MAAOxC,EAAa,UAAY,UAChC+H,SAAUA,EACVmE,WAAS,EAETG,QAAS,kBAAMlB,EAAe0B,EAAGtB,KAAME,OAAmBnI,EAAYqI,EAA7D,EACTQ,KAAK,QACLG,UAAWtM,GAAa,SAACuM,EAAA,EAAD,KAAe,SAACC,EAAA,EAAD,IACvCrH,GAAI,CAAEiH,aAAc,GARf,SAUJJ,EAAYa,EAAGf,OANXH,EAQR,KAEJ,CAED,SAASsB,EAAUC,GACjB,MAAwB,kBAATA,CAChB,CAGD,SAASrB,EAAcsB,GACrB,IAAKA,EAAW,MAAO,GAEvB,IAAIC,EAAmC,UACnCC,EAAYF,EAOhB,OANIA,GAAaF,EAAUE,IACrBA,EAAUjN,MAAMsC,QAClB4K,EAAaD,EAAUjN,MAAMsC,MAC7B6K,GAAY,0BAAOF,EAAUjN,MAAMoF,aAGhC,SAACoH,EAAA,EAAD,CAASvH,GAAI,CAAEmI,GAAI,IAAO9K,MAAO4K,EAAjC,SAA8CC,GACtD,CAGD,SAASrB,EAAYD,GACnB,GAAIkB,EAAUlB,GAAW,CACvB,IAAMxK,EAAMwK,EAAS7L,MAAMqN,MACrBC,EAAKzB,EAAS7L,MAAMsN,GACpBC,EAAS1B,EAAS7L,MAAMuN,OAC9B,OAAO,SAACC,EAAA,EAAD,CAAWF,GAAIA,EAAID,MAAOhM,EAAKkM,OAAQA,EAAQE,UAAQ,GAC/D,CACD,OAAO5B,CACR,CClIc,SAAS6B,EAAT,GAA6G,IAEtHC,EAFuCtD,EAA8E,EAA9EA,YAA8E,IAAjEuD,WAAAA,OAAiE,aAA7CC,SAAAA,OAA6C,SACjH9C,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KAER,GAAI,SAAUV,EAAa,CAAC,IAAD,EACnByD,EAAU/C,EAAKS,IAAInB,EAAY3K,OAAOA,MAC5CiO,EAASG,IAAO,UAAIzD,EAAYE,OAAOuD,UAAvB,aAAI,EAA6BH,OAClD,MACCA,EAAS3J,OAAOuJ,OAAOlD,EAAYE,QAAQrG,SAAQ,SAAAqI,GAEjD,OADiBxB,EAAKS,IAAIe,EAAM7M,OAAOA,MACrB6M,EAAMoB,OAAS,EAClC,IAEH,OAAO,UAACI,EAAA,EAAD,aACHC,EAAAA,EAAAA,IAAWJ,EAAYvD,KAAgB,SAAC4D,EAAD,CAAeC,OAAQ7D,EAAY6D,OAAQL,SAAUA,KAC9F,SAACM,EAAA,EAAD,CAAalJ,GAAI,CAAEkF,EAAG,EAAG,eAAgB,CAAEiE,GAAI,IAA/C,UACE,SAAChE,EAAD,CAAqBC,YAAaA,MAEnCsD,IAAU,SAAC,KAAD,CAAeA,OAAQA,MAErC,C,eCjBc,SAASU,EAAT,GAAkH,IAAvFC,EAAsF,EAAtFA,SAAUC,EAA4E,EAA5EA,aAA4E,IAA9DV,SAAAA,OAA8D,aAA5CD,WAAAA,OAA4C,SACtH7C,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACR,IAAKuD,EAAS7L,OAAQ,OAAO,KAC7B,IAAM+L,EAAkBF,EAASlN,KAAI,SAACqN,EAAGC,GAEvC,OAAID,EAAEE,UAAY5D,EAAKS,IAAIiD,EAAEE,SAASjP,OAElC6O,IAAiBE,EAAEG,SAF6B,MAG7C,SAACC,EAAD,CAAgBC,QAASL,EAAWZ,SAAUA,EAAUD,WAAYA,GAAnCc,EACzC,IAAEK,QAAO,SAAAN,GAAC,OAAIA,CAAJ,IACX,OAAKD,EAAgB/L,QACd,SAACsC,EAAA,EAAD,CAAK6D,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,EAAhD,SAAoDsE,IADvB,IAErC,CAED,SAASK,EAAT,GAA8L,IAApKC,EAAmK,EAAnKA,QAAmK,IAA1JjB,SAAAA,OAA0J,aAAxID,WAAAA,OAAwI,SAC3L,MAAI,WAAYkB,GACP,SAACG,EAAD,CAAsBH,QAASA,EAASjB,SAAUA,EAAUD,WAAYA,IACtE,WAAYkB,GACd,SAACpB,EAAD,CAAoBrD,YAAayE,EAASjB,SAAUA,EAAUD,WAAYA,KAE1E,SAACsB,EAAD,CAAoBJ,QAASA,GAEvC,CAED,SAASG,EAAT,GAAoL,IAApJH,EAAmJ,EAAnJA,QAASjB,EAA0I,EAA1IA,SAAUD,EAAgI,EAAhIA,WACjD,OAAO,UAACG,EAAA,EAAD,aACHC,EAAAA,EAAAA,IAAWJ,EAAYkB,IAAYA,EAAQZ,SAC3C,SAACD,EAAD,CAAeC,OAAQY,EAAQZ,OAAQL,SAAUA,EAAUsB,YAAuC,IAA1BL,EAAQnB,OAAOlL,UAEzF,SAAC,KAAD,CAAekL,OAAQmB,EAAQnB,WAElC,CAED,SAASuB,EAAT,GAAsE,IAAxCJ,EAAuC,EAAvCA,QACpB/D,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACR,OAAO,0BACJiD,EAAAA,EAAAA,IAAWc,EAAQlP,KAAMmL,IAE7B,CAEM,SAASkD,EAAT,GAA6K,IAApJC,EAAmJ,EAAnJA,OAAQL,EAA2I,EAA3IA,SAAUsB,EAAiI,EAAjIA,YACxCpE,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACFzH,EAAwB4K,EAAxB5K,KAAM0G,EAAkBkE,EAAlBlE,MAAOC,EAAWiE,EAAXjE,OACnB3G,GAAO0K,EAAAA,EAAAA,IAAW1K,EAAMyH,GACxB,IAAMqE,GAAevB,IAAYG,EAAAA,EAAAA,IAAWE,EAAOkB,YAAarE,GAC1DsE,EAAexB,EAAW7D,GAAQ,4BAAOA,EAAP,KAAc,SAACsF,EAAA,EAAD,CAAatF,OAAO,SAACuF,EAAA,EAAD,UAAaH,SACvF,OAAO,iCACL,SAACtF,EAAA,EAAD,CAAkBC,OAAQzG,EAAM0G,MAAOqF,EAAcpF,OAAQA,KAC3DkF,IAAe,SAACzC,EAAA,EAAD,MAEpB,C,8LC3Dc,SAAS8C,EAAT,GAAsM,IAA/KC,EAA8K,EAA9KA,MAAOC,EAAuK,EAAvKA,UAAW/H,EAA4J,EAA5JA,QAA4J,IAAnJgI,OAAAA,OAAmJ,SAC1M9L,GAAMC,EAAAA,EAAAA,GAAe,MAArBD,EACF+L,EAAqBD,EAASE,EAAAA,GAAuBC,EAAAA,GACrDC,GAAW1H,EAAAA,EAAAA,cAAY,WAAwB,IAAvBoH,EAAsB,uDAAN,EAC5CA,GAAQzG,EAAAA,EAAAA,IAAMyG,EAAO,EAAGE,EAASK,EAAAA,GAAcC,EAAAA,IAC/C,IAAMP,EAAYE,EAAmBM,WAAU,SAAAC,GAAO,OAAIV,GAASU,CAAb,IACtDxI,EAAQ,CAAE8H,MAAAA,EAAOC,UAAAA,GAClB,GAAE,CAAC/H,EAASiI,EAAoBD,IAC3BS,GAAe/H,EAAAA,EAAAA,cAAY,WAC/B,IAAMgI,EAAiBT,EAAmBM,WAAU,SAAAC,GAAO,OAAc,KAAVV,GAAgBA,IAAUU,CAA9B,IACzBxI,EAA9B+H,IAAcW,EAAwB,CAAEX,UAAYA,EAAY,GACvD,CAAEA,UAAWW,GAC3B,GAAE,CAAC1I,EAASiI,EAAoBF,EAAWD,IAC5C,OAAO,UAAC,IAAD,CAAaxK,GAAI,CAAE6D,QAAS,SAAAjF,GAAC,OAAIA,EAAEtB,QAAQ+N,YAAYC,IAA1B,GAA7B,WACL,SAAC,KAAD,WACE,SAAC,KAAD,CAAmB5O,SAAUoO,EAAUrQ,MAAO+P,EAC5C7I,eAAe,OACfuC,WAAY,CAAEO,IAAK,EAAGC,IAAK,GAAI1E,GAAI,CAAEmE,UAAW,SAAUT,MAAO,QACjE1D,GAAI,CAAEuL,OAAQ,OAAQtH,GAAI,QAE9B,SAAC,IAAD,CAAQjE,GAAI,CAAEiE,GAAI,EAAGuH,WAAY,UAAY5I,WAAY8H,EAASe,EAAAA,GAAoBC,EAAAA,IAAgBlB,GAAQtD,QAASiE,EAAvH,UAAqI,mCAAWN,EAAAA,GAAkBJ,SAClK,SAAC,IAAD,CAAgB1F,MAAOnG,EAAE,eAAgBoB,GAAI,CAAEoE,SAAU,GAAzD,UACG,OAAKsG,EAASiB,EAAAA,GAAqBC,EAAAA,IAAkBzP,KAAI,YAAe,IAAD,eAAZ0P,EAAY,KAARC,EAAQ,KAChEjO,EAAWgO,IAAOrB,GAASsB,IAAOrB,EACxC,OAAO,SAAC,IAAD,CAA8B5M,SAAUA,EAAU+E,SAAU/E,EAAUqJ,QAAS,kBAAMxE,EAAQ,CAAE8H,MAAOqB,EAAIpB,UAAWqB,GAAtC,EAA/E,SACJD,IAAOlB,EAAmBmB,GAA1B,cAAuCD,GAAvC,cAAqDA,EAArD,YAA2DlB,EAAmBmB,KAD1E,UAAkBD,EAAlB,YAAwBC,GAGhC,QAGN,C,kHClCc,SAASC,EAAT,GAAgI,IAAlGC,EAAiG,EAAjGA,WAAYC,EAAqF,EAArFA,cAC/CrN,GAAMC,EAAAA,EAAAA,GAAe,MAArBD,EACR,OAAO,SAAC,IAAD,CAAgBmG,MAAOnG,EAAE,aAAc,CAAEnE,MAAOuR,IAAhD,SACJE,EAAAA,EAAAA,KAAkB,SAAAC,GAAC,OAClB,SAAC,IAAD,CAAkBjF,QAAS,kBAAM+E,EAAcE,EAApB,EAAwBtO,SAAUmO,IAAeG,EAAGvJ,SAAUoJ,IAAeG,EAAxG,SACGvN,EAAE,aAAc,CAAEnE,MAAO0R,KADbA,EADG,KAKvB,C,4ICXKC,GAAiBC,EAAAA,EAAAA,IAAOvF,EAAAA,EAAPuF,EAAe,gBAAGzR,EAAH,EAAGA,MAAH,MAAgB,CACpD,iBAAkB,CAChB0R,gBAAiB1R,EAAM0C,QAAQC,QAAQoF,KACvCtF,MAAOzC,EAAM0C,QAAQ3C,KAAK4R,WAHQ,IAOvB,SAASC,EAAT,GAAoE,IAA9CrM,EAA6C,EAA7CA,SAAuBpF,GAAsB,EAAnC6H,UAAmC,aAChF,OAAO,SAACwJ,GAAD,kBAAoBrR,GAApB,IAA2B6H,UAAQ,EAAnC,SACJzC,IAEJ,C,uTCWc,SAASsM,EAAT,GAA4I,IAA5GC,EAA2G,EAA3GA,KAA2G,IAArGjC,UAAAA,OAAqG,MAAzF,EAAyF,EAAtFkC,EAAsF,EAAtFA,OAAQC,EAA8E,EAA9EA,SAA8E,IAApE9C,OAAAA,OAAoE,MAA3D,kBAAM,CAAN,EAA2D,EAA/C+C,EAA+C,EAA/CA,iBACjGjO,GAAMC,EAAAA,EAAAA,GAAe,CAAC,cAAe,oBAArCD,EACFkO,GAAepO,EAAAA,EAAAA,IAAW,kBAAMqO,EAAAA,EAAAA,MAAN,GAA0B,IAC1D,GAAwCjK,EAAAA,EAAAA,UAA0B+J,EAAmB,CAACA,IAAJ,OAA4BG,EAAAA,KAA9G,eAAOC,EAAP,KAAqBC,EAArB,MAEAzJ,EAAAA,EAAAA,YAAU,kBAAMoJ,GAAoBK,EAAgB,CAACL,GAA3C,GAA+D,CAACA,IAE1E,OAAoC/J,EAAAA,EAAAA,UAAS,IAA7C,eAAOqK,EAAP,KAAmBC,EAAnB,KACMC,GAAqBC,EAAAA,EAAAA,kBAAiBH,GAEtCI,EAAgBT,EAAoBU,EAAAA,GAAAA,QAAqB,SAAAC,GAAI,OAAI3D,EAAOgD,EAAaW,GAAxB,IAChE3D,QAAO,SAAA2D,GAAI,OAAIR,EAAatP,SAASmP,EAAaW,GAAMC,WAA7C,IACX5D,QAAO,SAAA2D,GAAI,OAAKJ,GAAsBzO,EAAE,mBAAD,OAAoB6O,IAAQE,cAAchQ,SAAS0P,EAAmBM,cAAlG,IACXvO,MAAK,SAAC4C,EAAGC,GAAJ,OAAU6K,EAAa7K,GAAG/C,OAAS4N,EAAa9K,GAAG9C,MAAnD,IAH6B,GAKrC,OAAK4N,GAEE,SAAC,IAAD,CAAcc,KAAMlB,EAAMmB,QAASlB,EAAnC,UACL,UAAC,IAAD,YACE,SAAC,IAAD,CAAa3M,GAAI,CAAE8N,GAAI,GAAvB,UACE,UAAC,KAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACE,SAAC,KAAD,CAAMC,MAAI,EAAV,UACE,SAAC,IAAD,CAAcxT,MAAOwS,EAAcvQ,SAAUwQ,EAAiBtK,WAAYiK,EAAkB7F,KAAK,aAEnG,SAAC,KAAD,CAAMiH,MAAI,EAAC7J,SAAU,EAArB,UACE,SAAC,IAAD,CACE8J,WAAS,EACTlH,KAAK,QACLvM,MAAO0S,EACPzQ,SAAU,SAAC2G,GAAD,OAAyC+J,EAAc/J,EAAE8K,OAAO1T,MAAhE,EACVsB,MAAO6C,EAAE,cACToB,GAAI,CAAEuL,OAAQ,QACd6C,WAAY,CACVpO,GAAI,CAAEuL,OAAQ,cAIpB,SAAC,KAAD,CAAM0C,MAAI,EAAV,UACE,SAAC,IAAD,CAAa/G,QAASyF,YAI5B,SAAC,IAAD,KACA,SAAC,IAAD,WAAa,SAAC,KAAD,CAAMoB,WAAS,EAACC,QAAS,EAAzB,SACVT,EAAapR,KAAI,SAAAkS,GAAc,IAAD,EACvBC,EAAcxB,EAAauB,GACjC,OAAO,SAAC,KAAD,CAAMJ,MAAI,EAAiBM,GAAI,EAAGC,GAAI,EAAtC,UACL,SAAC,IAAD,CAAWxO,GAAI,CAAEuL,OAAQ,QAAzB,UACE,UAAC,IAAD,CAAgBrE,QAAS,WAAQyF,IAAUC,EAASyB,EAAY,EAAErO,GAAI,CAAE2D,QAAS,QAAjF,WACE,SAAC,IAAD,CAAK9D,UAAU,MAAM4O,IAAKH,EAAYI,OAAOjE,GAAYzK,GAAI,CAAE0D,MAAO,IAAK6H,OAAQ,QAAUoD,UAAS,gBAAWL,EAAYpP,OAAvB,WACtG,UAAC,IAAD,CAAKc,GAAI,CAAEoE,SAAU,EAAGJ,GAAI,GAA5B,WACE,SAAC,IAAD,CAAY7G,QAAQ,YAApB,SAAiCmR,EAAY3H,QAC7C,UAAC,IAAD,YAAY,SAAC,IAAD,CAAS8H,IAAG,UAAEG,EAAAA,EAAAA,mBAAF,aAAE,EAAqBN,EAAYZ,cAA3D,KAA2E,SAAC,IAAD,CAAcxN,MAAOoO,EAAYpP,OAAQ2P,SAAO,gBAN5GR,EAWxB,SAEH,SAAC,IAAD,KACA,SAAC,IAAD,CAAarO,GAAI,CAAE8N,GAAI,GAAvB,UACE,SAAC,IAAD,CAAagB,OAAK,EAAC5H,QAASyF,WA9CR,IAkD3B,C,4hBCjFc,SAASoC,IAAsB,IAAD,EACnCnQ,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACAoQ,GAAmBtJ,EAAAA,EAAAA,YAAWC,EAAAA,GAA9BqJ,eACR,GAAkClM,EAAAA,EAAAA,WAAS,GAA3C,eAAOmM,EAAP,KAAkBC,EAAlB,KACMC,GAAeC,EAAAA,EAAAA,KACrB,OAAO,iCACL,SAACC,EAAA,EAAD,CAAyB3C,KAAMuC,EAAWtC,OAAQ,kBAAMuC,GAAa,EAAnB,EAA2BtC,SAAUuC,KACvF,SAACrI,EAAA,EAAD,CAAQzJ,MAAM,OAAO6J,QAAS,kBAAMgI,GAAa,EAAnB,EAA0B/H,WAAW,SAACmI,EAAA,EAAD,CAAWb,IAAG,OAAEO,QAAF,IAAEA,OAAF,EAAEA,EAAgBO,eAAnG,0BAAuHP,QAAvH,IAAuHA,OAAvH,EAAuHA,EAAgBrI,YAAvI,QAA+I/H,EAAE,uBAEpJ,C,iKCKc,SAAS4Q,KACtB,IAAQC,GAAc/J,EAAAA,EAAAA,YAAWgK,EAAAA,GAAzBD,UACAE,GAAmBjK,EAAAA,EAAAA,YAAWgK,EAAAA,GAA9BC,eACFC,GAAiBxM,EAAAA,EAAAA,cAAY,yBAAMuM,QAAN,IAAMA,OAAN,EAAMA,OAAiBxR,OAAWA,EAAlC,GAA8C,CAACwR,IAClF,OAAO,SAACE,GAAA,EAAD,CAAcjC,OAAQ6B,EAAW5B,QAAS+B,EAA1C,UACL,UAAC9G,EAAA,EAAD,YACE,SAACgH,EAAA,EAAD,CAAY/K,MAAM,0BAA0BC,QAAQ,SAAC+K,EAAA,EAAD,CAAa7I,QAAS0I,OAC1E,SAAC1G,EAAA,EAAD,CAAalJ,GAAI,CAAEgQ,GAAI,GAAvB,UACE,SAACC,GAAD,UAIP,CAED,SAASA,KACP,IAAQnK,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACMoK,GAAgBxK,EAAAA,EAAAA,YAAWgK,EAAAA,GAAjC5J,KACFuD,GAAW8G,EAAAA,GAAAA,GAAkB,OAACD,QAAD,IAACA,EAAAA,EAAepK,GACnD,OAAO,SAAC,EAAAsK,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,CAAUnT,QAAQ,cAAcuG,MAAM,OAAO6H,OAAQ,MAAzE,UACL,SAACzL,EAAA,EAAD,CAAKE,GAAI,CAAEuQ,IAAK,EAAGC,IAAK,GAAxB,SACGnH,EAASlN,KAAI,+BAAEC,EAAF,KAAOqU,EAAP,YACZ,SAACC,GAAD,CAAuBC,UAAWF,EAAOG,WAAYxU,GAAnCA,EADN,OAInB,CACD,SAASsU,GAAT,GAA6G,IAAtFE,EAAqF,EAArFA,WAAYD,EAAyE,EAAzEA,UACzB7K,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACA+K,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACMX,GAAgBxK,EAAAA,EAAAA,YAAWgK,EAAAA,GAAjC5J,KACFmD,GAASvK,EAAAA,EAAAA,IAAW,kBAAMqS,EAAAA,GAAAA,GAAgB,OAACb,QAAD,IAACA,EAAAA,EAAepK,EAAM8K,EAAYC,EAAxD,GAAmE,CAACX,EAAapK,EAAM8K,IACjH,IAAK3H,EAAQ,OAAO,KACpB,GAAIlK,OAAOC,QAAQ2R,GAAWK,OAAM,gDAAoBC,OAApB,IAA8B,OAAO,KACzE,IAAQlM,EAAwBkE,EAAxBlE,MAAO1G,EAAiB4K,EAAjB5K,KAAM2G,EAAWiE,EAAXjE,OACrB,OAAO,UAACkM,EAAA,EAAD,CAAWlR,GAAI,CAAEwQ,GAAI,GAArB,WACL,SAAC3L,GAAA,EAAD,CAAkBC,OAAQzG,IAAQ,SAAC8S,GAAA,EAAD,CAASnK,KAAM,EAAGhH,GAAI,CAAEoR,GAAI,GAAK3C,IAAKpQ,IAAU0G,MAAOA,EAAOC,OAAQA,IAAU,SAACuC,EAAA,EAAD,UAAUvC,OAC5H,SAACyC,EAAA,EAAD,KACA,SAACyB,EAAA,EAAD,UACGnK,OAAOC,QAAQ2R,GAAWxU,KAAI,+BAAEC,EAAF,KAAOiV,EAAP,YAAkBA,EAAKJ,UAAW,SAACK,GAAD,CAA4BD,KAAMA,GAAXjV,EAAzD,QAGpC,CACD,SAASkV,GAAT,GAA4D,IAAD,EAA/BD,EAA+B,EAA/BA,KACZE,GAAgB7L,EAAAA,EAAAA,YAAWgK,EAAAA,GAAjC2B,KACR,GAAgCvO,EAAAA,EAAAA,WAAS,GAAzC,eAAO0O,EAAP,KAAiBC,EAAjB,KACMC,GAAetO,EAAAA,EAAAA,cAAY,SAACC,EAAyBsO,GAA1B,OAAkDF,EAAYE,EAA9D,GAA2E,IACtGC,GAAYC,EAAAA,EAAAA,UAMlB,OAJApO,EAAAA,EAAAA,YAAU,WACJ4N,IAASE,GAAaO,YAAW,iCAAMF,QAAN,IAAMA,GAAN,UAAMA,EAAWG,eAAjB,iBAAM,EAAoBC,sBAA1B,aAAM,SAAqC,CAAEC,SAAU,UAAvD,GAAoE,IAC1G,GAAE,CAACL,EAAWP,EAAME,KAEd,UAACW,EAAA,EAAD,CAAWlS,GAAI,CAAE6D,QAAS,oBAAsB2N,SAAUH,IAASE,GAAeC,EAAU9U,SAAUgV,EAAcS,IAAKP,EAAzH,WACL,UAACQ,EAAA,EAAD,CAAkBC,YAAY,SAACC,EAAA,EAAD,IAA9B,WACE,UAAChI,EAAA,EAAD,YAAY,SAAC,KAAD,CAAWjN,MAAOgU,EAAKkB,KAAKpV,QAA5B,SAAsCqD,GAAAA,GAAAA,IAAA,UAAW6Q,EAAKkB,KAAKnW,WAArB,QAA4B,MAA9E,KAA+F,6BAASoW,EAAAA,GAAAA,IAAYnB,EAAK5W,MAAO4W,EAAKoB,WACpIC,EAAAA,GAAAA,SAAyBrB,EAAKkB,KAAKpV,WAAmB,SAAC2C,EAAA,EAAD,CAAKE,GAAI,CAAE2D,QAAS,eAAgBwE,GAAI,OAAQoI,GAAI,GAApD,UACrD,SAACoC,GAAA,EAAD,CAAqBC,SAAUvB,EAAKkB,KAAKpV,QAA2B0V,QAASxB,EAAKkB,KAAKO,mBAG3F,SAACC,EAAA,EAAD,UACG1B,EAAK2B,SAAS7W,KAAI,SAAC8W,EAASxJ,GAAV,OAAgB,SAACa,EAAA,EAAD,UAAqB2I,GAAJxJ,EAAjC,QAGxB,C,wLCpED,IAXqB4C,EAAAA,GAAAA,KAAO,SAACtR,GACEA,EAArBmY,OAAR,IAAmBC,GAAnB,QAA6BpY,EAA7B,IACA,OAAO,SAACqY,GAAA,GAAD,WAAgBD,GACxB,GAHoB9G,EAGlB,gBAAGzR,EAAH,EAAGA,MAAH,MAAwB,CACzByY,UADC,EAAUH,OAC2B,iBAAjB,eACrBI,WAAY,OACZC,WAAa3Y,EAAc4Y,YAAYC,OAAO,YAAa,CACzDC,SAAW9Y,EAAc4Y,YAAYE,SAASC,WAJ/C,I,sKCSGC,IAAkBvH,EAAAA,GAAAA,IAAO1E,GAAAA,EAAP0E,CAAoB,CAC1C1I,QAAS,SAGI,SAASkQ,GAAT,GAAuK,IAAlJlN,EAAiJ,EAAjJA,KAAMxG,EAA2I,EAA3IA,SAAU1F,EAAiI,EAAjIA,MAAOqZ,EAA0H,EAA1HA,YAA0H,IAA7GC,aAAAA,OAA6G,MAA9F,EAA8F,EAA3FC,EAA2F,EAA3FA,cAA2F,IAA5EC,QAAAA,OAA4E,aAA3DrR,SAAAA,OAA2D,SAAzCsR,EAAyC,EAAzCA,QAAYC,GAA6B,cAEnL,OAAO,UAACP,IAAD,oBAAqBO,GAArB,cACJhU,GACD,SAACqM,GAAA,EAAD,CAAYxM,GAAI,CAAEgE,GAAI,GAAtB,SACG2C,KAEH,SAACyN,GAAA,GAAD,CAAqCpU,GAAI,CAAEqU,UAAW,OAAQjQ,SAAU,GAAxE,UACE,SAACgQ,GAAA,GAAD,CACEpU,GAAI,CAAEgE,GAAI,GACVE,WAAY,CACVlE,GAAI,CAAEmE,UAAW,UAEnBmQ,MAAOL,EACPH,YAAaA,EACbrZ,MAAOA,EACPiC,SAAUsX,EACVpR,SAAUA,EACV2R,aAAcN,EAAU,SAAM9V,OAGlC,SAAC2I,EAAA,EAAD,CAAQ9G,GAAI,CAAEwU,WAAY,GAAKxN,KAAK,QAAQ3J,MAAM,QAAQ6J,QAAS,kBAAMgN,EAAUA,IAAYF,EAAcD,EAA1C,EAAyDnR,SAAUA,GAAYnI,IAAUsZ,EAA5J,UACE,SAACU,GAAA,EAAD,SAGL,CChCM,SAASC,KACd,IAAQ5O,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACR,GAAgChD,EAAAA,EAAAA,WAAS,GAAzC,eAAO0O,EAAP,KAAiBmD,EAAjB,KACMC,GAASxR,EAAAA,EAAAA,cAAY,kBAAMuR,GAAanD,EAAnB,GAA8B,CAACmD,EAAanD,IACjEqD,EAAW/O,EAAKS,IAAIuO,GAAAA,GAAAA,MAAAA,OACpBC,EAAUjP,EAAKS,IAAIuO,GAAAA,GAAAA,MAAAA,QACnBE,EAAUlP,EAAKS,IAAIuO,GAAAA,GAAAA,MAAAA,QACzB,OAAO,UAAC5D,EAAA,EAAD,YACL,UAAChI,EAAA,EAAD,CAAalJ,GAAI,CAAE2D,QAAS,QAA5B,WACE,UAACsR,GAAA,GAAD,CAAMlH,WAAS,EAACC,QAAS,EAAG5J,SAAU,EAAGR,WAAW,SAApD,WACE,SAACqR,GAAA,GAAD,CAAMhH,MAAI,EAAV,UACE,SAAC7P,GAAA,EAAD,CAAM4I,KAAK,QAAQ3J,MAAM,UAAUtB,OAAO,4BAAOyE,GAAAA,GAAAA,IAAWqU,EAAStC,KAAKnW,KAAhC,KAAsC,4BAASyY,EAASpa,eAEnGwD,EAAAA,GAAAA,KAAuB,SAAAD,GAAO,OAAI,SAACiX,GAAA,GAAD,CAAMhH,MAAI,EAAV,UACjC,SAAC3D,EAAA,EAAD,WAA2B,SAAC4K,GAAD,CAAclX,QAASA,KAAjCA,IADgCA,EAApB,KAG/B,SAACiX,GAAA,GAAD,CAAMhH,MAAI,EAAV,UACE,UAAC3D,EAAA,EAAD,6BAA2BkI,EAAAA,GAAAA,IAAYuC,EAAQta,MAAOsa,EAAQtC,YAEhE,SAACwC,GAAA,GAAD,CAAMhH,MAAI,EAAV,UACE,UAAC3D,EAAA,EAAD,0BAAwBkI,EAAAA,GAAAA,IAAYwC,EAAQva,MAAOua,EAAQvC,eAG/D,SAAC,GAAD,CACES,OAAQ1B,EACRtK,QAAS0N,EACT,gBAAepD,EACf,aAAW,YACXxK,KAAK,QACLhH,GAAI,CAAEkF,EAAG,GANX,UAQE,SAACoN,EAAA,EAAD,UAGJ,SAAC6C,GAAA,EAAD,CAAUC,GAAI5D,EAAU6D,QAAQ,OAAOC,eAAa,EAApD,UACE,SAACpM,EAAA,EAAD,CAAalJ,GAAI,CAAEgQ,GAAI,GAAvB,UACE,SAACuF,GAAD,UAIP,CAEM,SAASL,GAAT,GAAoE,IAA5ClX,EAA2C,EAA3CA,QAEvBqT,GADW3L,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACUS,IAAIuO,GAAAA,GAAAA,MAAA,UAAe9W,EAAf,WAEhBwX,GADUC,SAASpE,EAAK5W,QACL,4BAAQgG,GAAAA,EAASzC,GAAjB,cACvB,4BAAQyC,GAAAA,EAASzC,GAAjB,QAA8B,6BAASwU,EAAAA,GAAAA,IAAYnB,EAAK5W,MAAO4W,EAAKoB,WACtE,OAAO,SAAC,KAAD,CAAWpV,MAAOW,EAAlB,SAA4BwX,GACpC,CAEM,SAASD,GAAT,GAA6E,IAAD,UAArDG,QAAAA,OAAqD,MAA3C,CAAEC,GAAI,GAAInH,GAAI,GAA6B,EACjF,GAA4D9I,EAAAA,EAAAA,YAAWC,EAAAA,GAAlDiQ,EAArB,EAAQhQ,UAAagQ,cAAiB/P,EAAtC,EAAsCA,kBAC9BC,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KAGF+P,EAAI,UAAGD,EAAcE,kBAAjB,QAA+BhQ,EAAKS,IAAIuO,GAAAA,GAAAA,KAAWra,MACvDsa,EAAO,UAAGa,EAAcG,oBAAjB,QAAiC,EACxCf,EAAO,UAAGY,EAAcI,oBAAjB,QAAiC,EAC9C,OAAO,UAACf,GAAA,GAAD,CAAMlH,WAAS,EAACC,QAAS,EAAzB,WACL,SAACiH,GAAA,IAAD,kBAAMhH,MAAI,GAAKyH,GAAf,cACE,SAAC5O,EAAA,EAAD,CAAQC,WAAS,EAAC/G,GAAI,CAAEuL,OAAQ,QAAUvE,KAAK,QAAQnH,UAAU,IAAIxC,MAAM,UAAU4Y,KAAK,2EAA2E9H,OAAO,SAAS+H,IAAI,aAAzL,0FAIF,SAACjB,GAAA,IAAD,kBAAMhH,MAAI,GAAKyH,GAAf,cACE,SAAC7B,GAAD,CACE7T,GAAI,CAAE6D,QAAS,SAAAjF,GAAC,OAAIA,EAAEtB,QAAQ6Y,aAAa7K,IAA3B,EAAiC5H,MAAO,QACxDiD,MAAM,uBAAInG,GAAAA,GAAAA,IAAW,gBACrB/F,MAAOob,EACP/B,YAAatT,GAAAA,GAAAA,OAAc,cAC3BuT,aAAcjO,EAAKS,IAAIuO,GAAAA,GAAAA,KAAWra,MAClCuZ,cAAe,SAAAvZ,GAAK,OAAIoL,EAAkB,CAAEpI,KAAM,gBAAiB2Y,QAAS,aAAc3b,MAAAA,GAAtE,EACpByZ,QAAS,kBAAMrO,EAAkB,CAAEpI,KAAM,gBAAiB2Y,QAAS,aAAc3b,WAAO0D,GAA/E,OAGZF,EAAAA,GAAAA,KAAuB,SAAAoY,GACtB,IAAMD,EAAO,UAAMC,EAAN,cACPvS,EAAM8R,EAAcQ,GACpBE,EAAkBxS,IAAQyS,OAAOC,UACvC,OAAO,SAACvB,GAAA,IAAD,kBAAMhH,MAAI,GAAkByH,GAA5B,cACL,SAAC7B,GAAD,CACE7T,GAAI,CAAE6D,QAAS,SAAAjF,GAAC,OAAIA,EAAEtB,QAAQ6Y,aAAa7K,IAA3B,EAAiC5H,MAAO,QACxDiD,MAAM,SAAC,KAAD,CAAWtJ,MAAOgZ,EAAlB,UAA0B,uBAAI7V,GAAAA,GAAAA,IAAW4V,OAC/C3b,MAAOqJ,EAAOwS,EAAkBG,IAAW3S,EAAO,GAClDgQ,YAAawC,EAAkB,UAAY9V,GAAAA,GAAAA,OAAc4V,GACzDrC,aAhCW,GAiCXC,cAAe,SAAAvZ,GAAK,OAAIoL,EAAkB,CAAEpI,KAAM,gBAAiB2Y,QAAAA,EAAS3b,MAAAA,GAAxD,EACpBmI,SAAU0T,EACVrC,SAAO,EART,UAUE,SAACnN,EAAA,EAAD,CAAQzJ,MAAOgZ,EAAQnP,QAAS,kBAAMrB,EAAkB,CAAEpI,KAAM,gBAAiB2Y,QAAAA,EAAS3b,MAAO6b,EArCtF,GAqCqHC,OAAOC,WAAvG,EAAqHrP,UAAWmP,GAAkB,SAAClP,GAAA,EAAD,KAAe,SAACC,GAAA,EAAD,IAAjM,0BAXmBgP,EAgBxB,KACD,SAACpB,GAAA,IAAD,kBAAMhH,MAAI,GAAKyH,GAAf,cACE,SAAC7B,GAAD,CACE7T,GAAI,CAAE6D,QAAS,SAAAjF,GAAC,OAAIA,EAAEtB,QAAQ6Y,aAAa7K,IAA3B,EAAiC5H,MAAO,QACxDiD,MAAM,uBAAInG,GAAAA,GAAAA,IAAW,kBACrB/F,MAAOsa,EACPjB,YAAatT,GAAAA,GAAAA,OAAc,gBAC3BuT,aAAc,EACdC,cAAe,SAAAvZ,GAAK,OAAIoL,EAAkB,CAAEpI,KAAM,gBAAiB2Y,QAAS,eAAgB3b,MAAAA,GAAxE,EACpBwZ,SAAO,QAGX,SAACgB,GAAA,IAAD,kBAAMhH,MAAI,GAAKyH,GAAf,cACE,SAAC7B,GAAD,CACE7T,GAAI,CAAE6D,QAAS,SAAAjF,GAAC,OAAIA,EAAEtB,QAAQ6Y,aAAa7K,IAA3B,EAAiC5H,MAAO,QACxDiD,MAAM,uBAAInG,GAAAA,GAAAA,IAAW,kBACrB/F,MAAOua,EACPlB,YAAatT,GAAAA,GAAAA,OAAc,gBAC3BuT,aAAc,EACdC,cAAe,SAAAvZ,GAAK,OAAIoL,EAAkB,CAAEpI,KAAM,gBAAiB2Y,QAAS,eAAgB3b,MAAAA,GAAxE,EACpBwZ,SAAO,QAGX,SAACgB,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,GAAf,UACE,mMAGL,C,+BCrHKe,GAAO,CACXf,GAAI,EAAGnH,GAAI,EAAGD,GAAI,GAGL,SAASoI,GAAT,GAAuC,IAAlB/I,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAChCjP,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACR,OAAO,SAACiR,GAAA,EAAD,CAAcjC,KAAMA,EAAMC,QAASA,EAAnC,UACL,UAAC/E,EAAA,EAAD,YACE,SAACgH,EAAA,EAAD,CAAY/K,MAAOnG,EAAF,sCAAqBoG,QAAQ,SAAC+K,EAAA,EAAD,CAAa7I,QAAS2G,OACpE,SAAC3E,EAAA,EAAD,CAAalJ,GAAI,CAAEgQ,GAAI,GAAvB,UACE,UAAC4G,GAAA,EAAD,CAAO5I,QAAS,EAAhB,WACE,SAAC6I,GAAD,KACA,SAACnC,GAAD,KACA,SAACoC,GAAD,aAIT,CACD,IAAMzR,IAAI,QAAO0R,GAAAA,IACXC,GAAc,SAAC3T,GAAD,OAAoB,SAAC4R,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,EAAf,SAAmBtS,GAAvC,EACpB,SAASwT,KACP,OAAyDnR,EAAAA,EAAAA,YAAWC,EAAAA,GAA/CsR,EAArB,EAAQrR,UAAaqR,WAAcpR,EAAnC,EAAmCA,kBAC7BqR,GAAY9T,EAAAA,EAAAA,cAAY,SAAC6T,GAAD,OAAgBpR,EAAkB,CAAEoR,WAAAA,GAApC,GAAmD,CAACpR,IAClF,OAAO,SAACqL,EAAA,EAAD,WACL,SAAChI,EAAA,EAAD,CAAalJ,GAAI,CAAE2D,QAAS,QAA5B,UACE,SAACsR,GAAA,GAAD,CAAMlH,WAAS,EAACoJ,QAAST,GAAM1W,GAAI,CAAEgQ,GAAI,GAAKhC,QAAS,EAAvD,UACE,SAACoJ,GAAA,EAAD,CAAgBC,SAAUhS,GAAMiS,YAAaL,EAAYM,eAAgBL,EAAWF,YAAaA,UAIxG,CAED,IACMQ,GAAc,CAAC,SAAU,YAAa,WAAY,YAAa,SAC/DC,GAAgB,UAFD,CAAC,KAAM,MAAO,OAEQD,IAAarb,KAAI,SAAAub,GAAC,OAAI5C,GAAAA,GAAAA,MAAY4C,EAAhB,IACvDC,GAAY,CAAI,OAAQ,MAAO,MAAO,KAAM,OAAQ,OAAxC,OAAkDH,IAE9DI,GAAa,mBACdC,GAAAA,KADc,QAEdC,GAAAA,IAFc,CAGjB,UAAW,WAAY,UAAW,WAG9BC,GAAehB,GAAAA,GAAAA,QAA0B,SAAAW,GAAC,OAAKC,GAAaha,SAAS+Z,KAAcE,GAAcja,SAAS+Z,EAAhE,IAGhD,SAASM,GAAT,GAAmG,IAArEC,EAAoE,EAApEA,MAAOC,EAA6D,EAA7DA,MACnC,GAA0BxS,EAAAA,EAAAA,YAAWK,EAAAA,GAA7BD,EAAR,EAAQA,KAAMqS,EAAd,EAAcA,QACd,OAAO,UAACC,GAAA,GAAD,WACJH,EAAM9b,KAAI,SAAAkc,GAAE,eAAI,SAAC,MAAD,CAAkBxY,UAAWyY,GAAAA,GAA6BjH,KAAMvL,EAAKS,IAAI8R,GAAKE,SAAQ,OAAEJ,QAAF,IAAEA,GAAF,UAAEA,EAAS5R,IAAI8R,UAAf,aAAE,EAAkB5d,OAA1G,UAA4C4d,EAAG9F,YAA/C,aAA4C,EAASnW,IAAzD,IACZ8b,IAEJ,CAED,SAASpB,KACP,IAAQ9H,GAAmBtJ,EAAAA,EAAAA,YAAWC,EAAAA,GAA9BqJ,eACAlJ,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACF0S,EAAc1S,EAAKS,IAAIuO,GAAAA,GAAAA,SACvB2D,EAAUzJ,EAAe0J,WACzBC,EAAU3J,EAAe2J,UAEzBC,GAAqB1c,EAAAA,EAAAA,UAAQ,WACjC,IAAM+b,EAAQL,GAAczb,KAAI,SAAAub,GAAC,OAAI5C,GAAAA,GAAAA,MAAY4C,EAAhB,IAC3BmB,GAA4B,QAAIC,EAAAA,GAAahP,QAAO,SAAA4N,GAAC,OAAIA,IAAMe,CAAV,IAG3D,OAFIE,GAASE,EAAKxX,OAAO,CAAC,aAEnB4W,EAAMnO,QAAO,SAAAiP,GAAC,SAAOjT,EAAKS,IAAIwS,GAAGte,OAASoe,EAAKG,MAAK,SAAA3V,GAAC,2BAAI0V,EAAExG,YAAN,iBAAI,EAAQnW,WAAZ,iBAAI,EAAauB,gBAAjB,aAAI,SAAwB0F,EAA5B,IAAvC,GACtB,GAAE,CAACyC,EAAM2S,EAASE,IAGbM,GAAoB/c,EAAAA,EAAAA,UAAQ,kBAAM6b,GAAa5b,KAAI,SAAAub,GAAC,OAAI5C,GAAAA,GAAAA,MAAY4C,EAAhB,IAAoB5N,QAAO,SAAAiP,GAAC,OAAIjT,EAAKS,IAAIwS,GAAGte,KAAhB,GAApD,GAA4E,CAACqL,IAE/G,OAAO,SAACoL,EAAA,EAAD,WAAW,SAAChI,EAAA,EAAD,WAChB,UAAC+L,GAAA,GAAD,CAAMlH,WAAS,EAACoJ,QAAST,GAAM1I,QAAS,EAAxC,WACE,SAACiH,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,EAAf,UACE,SAACuD,GAAD,CAAiBnU,MAAM,aAAvB,UACE,SAACiT,GAAD,CAAoBC,MAAOR,GACzBS,MAAOM,IAAe,UAACF,GAAA,GAAD,CAAUtY,GAAI,CAAE2D,QAAS,OAAQwV,eAAgB,iBAAjD,WACpB,6BAAM,oCAAN,KAAsB,UAAC,KAAD,CAAW9b,MAAOmb,EAAYjG,KAAKpV,QAAnC,UAA6Cqb,EAAYjG,KAAKnW,KAAOqE,GAAAA,EAAS+X,EAAYjG,KAAKnW,KAA/F,IAAsGoc,EAAYjG,KAAKnW,KAAOoE,GAAAA,GAAAA,IAAWgY,EAAYjG,KAAKnW,YAChL,2BAAQoW,EAAAA,GAAAA,IAAYgG,EAAY/d,MAAO+d,EAAY/F,kBAK3D,SAACwC,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,EAAf,UACE,SAACuD,GAAD,CAAiBnU,MAAM,cAAvB,UACE,SAACiT,GAAD,CAAoBC,MAAOW,UAG5BK,EAAkBzb,SAAU,SAACyX,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,EAAf,UAC7B,SAACuD,GAAD,CAAiBnU,MAAM,aAAvB,UACE,SAACiT,GAAD,CAAoBC,MAAOgB,cAKpC,CACD,SAASC,GAAT,GAA+C,IAApBnU,EAAmB,EAAnBA,MAAO5E,EAAY,EAAZA,SAChC,OAAO,UAAC2I,EAAA,EAAD,YACL,SAACI,EAAA,EAAD,CAAalJ,GAAI,CAAE8N,GAAI,GAAvB,UACE,SAAC,KAAD,CAAKnK,QAAQ,OAAOwV,eAAe,gBAAnC,UACE,SAAC7O,EAAA,EAAD,CAAYnN,QAAQ,YAApB,SAAiC4H,QAGpC5E,IAEJ,C,oJC5HYiZ,IAA4BC,EAAAA,EAAAA,oBAAclb,G,0ICiWtCmb,IAAAA,IAAAA,EAAAA,GAAAA,KAAAA,KAoBAC,IA3WV,SAASC,GAASvB,EAAkBwB,EAAmBC,EAAuBC,EAAgBC,EAA4BC,GAU/H,IATA,IAAIC,EAASD,EAEPE,EACQ,CAAEC,gBAAgB,GAD1BD,EAEW,CAAEC,gBAAgB,GAF7BD,EAGY,CAAEE,UAAU,GAHxBF,EAIM,CAAEG,YAAY,EAAMC,eAAe,EAAMH,gBAAgB,GAEjEI,EAAQ,EACLrb,OAAOuJ,OAAOwR,GAAQd,MAAK,SAAAqB,GAAC,OAAIA,CAAJ,KAAUD,IAAU,IAAI,CACzD,GAAIN,EAAOI,WAAY,QACdJ,EAAOI,WACd,IAAMI,EAAUJ,GAAWR,EAAMC,EAAQC,GACrCF,IAASY,IACXZ,EAAOY,EACPR,GAAM,oBAAQA,GAAWC,GAE5B,CACD,GAAID,EAAOK,cAAe,QACjBL,EAAOK,cACd,IAAMG,EAAUH,GAAclC,EAAOyB,EAAMD,GACvCC,IAASY,IACXZ,EAAOY,EACPR,GAAM,oBAAQA,GAAWC,GAE5B,CACD,GAAID,EAAOE,eAAgB,QAClBF,EAAOE,eACd,IAAMO,EAAWP,GAAe/B,EAAOyB,GACnCzB,IAAUsC,IACZtC,EAAQsC,EACRT,GAAM,oBAAQA,GAAWC,GAE5B,CACD,GAAID,EAAOG,SAAU,QACZH,EAAOG,SACd,MAA2CA,GAAShC,EAAOyB,GAA5Ca,EAAf,EAAQtC,MAAuBqC,EAA/B,EAAyBZ,KACrBzB,IAAUsC,GAAYb,IAASY,IACjCrC,EAAQsC,EACRb,EAAOY,EACPR,GAAM,oBAAQA,GAAWC,GAE5B,CACF,CACD,MAAO,CAAE9B,MAAAA,EAAOyB,KAAAA,EACjB,CAED,SAASO,GAAShC,EAAkByB,GAAmG,IAA5Ec,EAA2E,wDAC9HC,EAAc,IAAIC,IAAgBC,EAAiB,IAAID,IAE7D,SAASE,EAAMvJ,EAAewJ,GACxBA,EAAUJ,EAAYK,IAAIzJ,GACzBA,EAAK0J,SAASC,SAAQ,SAAAC,GACzB,IAAMC,EAAKD,EACXR,EAAYU,IAAID,IAAOP,EAAeG,IAAII,EAC3C,GACF,CAED,IAAME,EAAU,IAAIV,IA6BpB,IA3BAW,EAAAA,GAAAA,IAAapD,GAAO,SAAAtb,GAAQ,IAAE,SAAA2e,GAC5B,IAAMC,EAAYD,EAAEC,UACpB,OAAQA,GACN,IAAK,OACH,GAAe,WAAXD,EAAE7d,MAAmC,QAAd6d,EAAElV,KAAK,IAA2B,QAAXkV,EAAEE,KAClD,MAAM,IAAIC,MAAJ,4BAA+BF,EAA/B,yBAAyDD,EAAElV,KAA3D,iCACRgV,EAAQN,IAAIQ,EAAElV,KAAK,IACnBwU,EAAMU,GAAG,GACT,MACF,IAAK,MAAOV,EAAMU,EAAGA,EAAEP,SAAS/J,OAAM,SAAAkK,GAAE,OAAIT,EAAYU,IAAID,EAApB,KAA2B,MACnE,IAAK,MACH,IAAMQ,EAAWJ,EAAEP,SAASjR,QAAO,SAAAoR,GAAE,MAAqB,UAAjBA,EAAGK,SAAP,IACrCX,EAAMU,EAAuB,IAApBI,EAASle,QAAqC,IAApBke,EAASle,QAAgBid,EAAYU,IAAIO,EAAS,KACrF,MAEF,IAAK,QACH,GAAuB,kBAAZJ,EAAE7gB,YAAkC0D,IAAZmd,EAAE7gB,MACnC,MAAM,IAAIghB,MAAJ,yBAA4BH,EAAE7gB,MAA9B,sBACRmgB,EAAMU,GAAc,GAAO,MAC7B,IAAK,MAAO,IAAK,YAAa,IAAK,WACnC,IAAK,MAAO,IAAK,MAAOV,EAAMU,GAAG,GAAQ,MACzC,IAAK,OAAQ,IAAK,YAAa,IAAK,SAAU,IAAK,QAAS,IAAK,OAAQ,IAAK,QAC5E,MAAM,IAAIG,MAAJ,4BAA+BF,EAA/B,sCACR,SAASI,EAAAA,GAAAA,IAAkBJ,GAE9B,KAEG,QAAIZ,GAAgB3J,OAAM,gBAAGuK,EAAH,EAAGA,UAAH,MAAiC,SAAdA,GAAsC,UAAdA,CAA3C,KAC5Bxc,OAAOsG,KAAKqU,EAAKkC,MAAMpe,SAAW4d,EAAQpU,KAC1C,MAAO,CAAEiR,MAAAA,EAAOyB,KAAAA,GAElB,IAAI3H,GAAW,EACf,SAAS8J,IACP,KAAOT,EAAQD,IAAR,YAAiBpJ,MACxB,MAAM,GAAN,OAAUA,EACX,CAEDkG,EAAM+C,SAAQ,SAAA3J,GAAI,OAAIoJ,EAAYU,IAAI9J,IAASsJ,EAAeG,IAAIzJ,EAAhD,IAClB,IAAMyK,GAAS,QAAInB,GAAgB7Q,QAAO,SAAAwR,GAAC,MAAoB,UAAhBA,EAAEC,SAAN,IACrCQ,EAAY,IAAIC,IAAIF,EAAO3f,KAAI,SAAAkV,GAAI,MAAI,CAACA,EAC3CmJ,GAAkC,SAAnBnJ,EAAKkK,WAAyC,QAAjBlK,EAAKjL,KAAK,IAAvD,qBAES6V,EAAAA,GAAAA,IAAW,CAAC,MAAD,UAAWJ,QAF/B,IAEiDL,KAAM,QADnDnK,EAFmC,KAMzC,SAAS6K,EAAYC,GACnB,IAAM7T,GAAS8T,EAAAA,GAAAA,KAAa,QAAIL,EAAU1W,QAAS,CACjDgX,KAAKC,EAAAA,GAAAA,IAAUH,GAAM,SAAC1hB,GAAD,OAAW8hB,EAAAA,GAAAA,IAAS9hB,EAApB,MACb,SAAAkC,GAAC,OAAI,CAAJ,IACX,OAAOoC,OAAOyd,aAAY,QAAIT,EAAUzT,UAAUnM,KAAI,SAACS,EAAG6M,GAAJ,MAAU,CAAC7M,EAAEwJ,KAAK,GAAKkC,EAAOmB,GAA4BhP,MAA1D,IACvD,CASD,IARA,IAAMgiB,EAAS,CACbxE,MATFA,GAAQyE,EAAAA,GAAAA,IAAYzE,GAAO,SAAAqD,GAAC,uBAAIS,EAAUxV,IAAI+U,UAAlB,QAAmCA,CAAnC,IAAsC,SAAAA,GAAC,OAAIA,CAAJ,IAS1D5B,KAAM,CACXkC,KAAMM,EAAYxC,EAAKkC,MACvBtT,QAAQqU,EAAAA,GAAAA,GAAaC,EAAAA,IAAa,SAAAC,GAAI,OACpCnD,EAAKpR,OAAOuU,GAAM1gB,KAAI,kBAA0B,CAAE2gB,GAA5B,EAAGA,GAA6B3d,IAAhC,EAAOA,IAA8BmJ,OAAQ4T,EAA7C,EAAY5T,QAAZ,GADc,MAIpCyU,EAAUhe,OAAOC,QAAQkd,EAAY,CAAC,IAC5C,MAAmBnd,OAAOuJ,OAAOmU,EAAO/C,KAAKpR,QAA7C,gBAAK,IAAL,EAAWoR,EAAI,KAAf,WAC2BA,GAD3B,IACE,2BACE,OADWpR,EACX,QADWA,OACX,WAA+ByU,GAA/B,+BACE,iBAAAtiB,MAAA,GADU2B,EACV,KADe4gB,EACf,KAAA1U,EAAOlM,IAAQ4gB,CAAS,CAD1B,2BAAA1B,GAAA,CAC0B,CAH9B,2BAAAA,GAAA,EAIA,OAAOmB,CACR,CAEM,SAASvC,GAAWR,EAAuBC,EAAgBC,GAA8C,IAAD,EACzGqD,GAAW,EACTC,IAAY,UAACtD,EAAUuD,eAAX,OAAC,EAAmB3f,QAChC4f,EAAa,IAAI1C,IAAI3b,OAAOC,QAAQ4a,GAAW9P,QAAO,gDAActM,MAAd,IAAsBrB,KAAI,sCAChFkhB,EAAc,IAAI3C,IAAI3b,OAAOC,QAAQ4a,GAAW9P,QAAO,+BAAKlN,GAAL,kBAAYA,EAAEe,SAAS,KAAOf,EAAEe,SAAS,EAAzC,IAA6CxB,KAAI,sCACxGmM,GAASqU,EAAAA,GAAAA,GAAaC,EAAAA,IAAa,SAAAC,GACvC,IAAMS,EAAO5D,EAAKpR,OAAOuU,GACnBU,EAAUD,EAAKxT,QAAO,SAAA0T,GAC1B,IAAIpD,EAAQ,EACZ,OAAOkD,EAAKtM,OAAM,SAAAmC,GAChB,IAAMsK,EAAe1e,OAAOC,QAAQmU,EAAM7K,QAAQ0I,OAAM,+BAAE0G,EAAF,kBAAiB8F,EAAIlV,OAAOoP,EAA5B,IAClDgG,EAAU3e,OAAOC,QAAQmU,EAAM7K,QAAQ0Q,MAAK,+BAAEtB,EAAF,iBAAgB8F,EAAIlV,OAAOoP,EAA3B,IAIlD,OAHI+F,IAAiBC,GAAWvK,EAAM2J,GAAKU,EAAIV,MAC3CI,IAAcE,EAAWjC,IAAIhI,EAAMhU,OAAUke,EAAYlC,IAAIqC,EAAIre,MAAUqe,EAAIre,MAAQgU,EAAMhU,MAC/Fib,IACKA,EAAQT,CAChB,GACF,IAED,OADI4D,EAAQ/f,SAAW8f,EAAK9f,SAAQyf,GAAW,GACxCM,CACR,IACD,OAAON,EAAW,CAAErB,KAAMlC,EAAKkC,KAAMtT,OAAAA,GAAWoR,CACjD,CAED,SAASS,GAAclC,EAAkByB,EAAuBD,GAG9D,IAFA,IAAMkE,EAAY5e,OAAOyd,YAAYzd,OAAOC,QAAQ0a,EAAKkC,MAAMzf,KAAI,+BAAEC,EAAF,KAAOie,EAAP,WAAc,CAACje,EAAK,CAAEqI,IAAK4V,EAAG3V,IAAK2V,GAAnC,KAC7DuD,EAAO,CAAElE,KAAAA,GAFmF,aAIhG,IAAMmE,GAAYlB,EAAAA,GAAAA,GAAaC,EAAAA,IAAa,SAAAC,GAAI,OAAIiB,GAAgBF,EAAKlE,KAAKpR,OAAOuU,GAArC,IAC1CkB,GAAiBpB,EAAAA,GAAAA,GAAaC,EAAAA,IAAa,SAAAxgB,GAAG,OAClD4hB,GAAYjf,OAAOC,QAAQ6e,GAAW1hB,KAAI,SAAA6F,GAAC,OAAIA,EAAE,KAAO5F,EAAMuhB,EAAY3b,EAAE,EAAjC,IAAqC8H,QAAO,SAAAuQ,GAAC,OAAIA,CAAJ,IADtC,IAGhD4C,GAAW,EACT3U,GAASqU,EAAAA,GAAAA,GAAaC,EAAAA,IAAa,SAAAC,GACvC,IAAMJ,EAASmB,EAAKlE,KAAKpR,OAAOuU,GAAM/S,QAAO,SAAA0T,GAC3C,IAAMS,EAAOD,GAAY,CAACF,GAAgB,CAACN,IAAOO,EAAelB,KAC3DqB,EAAWC,GAAiBlG,EAAOgG,GACzC,OAAOhG,EAAMjH,OAAM,SAACK,EAAM5H,GAAP,aAAayU,EAAS3X,IAAI8K,GAAO3M,MAApB,UAA4B+U,EAAQhQ,UAApC,SAA2CgN,IAAxD,GACpB,IAGD,OAFIgG,EAAOjf,SAAWogB,EAAKlE,KAAKpR,OAAOuU,GAAMrf,SAC3Cyf,GAAW,GACNR,CACR,IACD,IAAKQ,EAAU,cACfW,EAAKlE,KAAO,CAAEkC,KAAMgC,EAAKlE,KAAKkC,KAAMtT,OAAAA,EApB4D,IAGrF,kBAgBI,KAEhB,CACD,OAAOsV,EAAKlE,IACb,CACD,SAASM,GAAe/B,EAAkByB,GACxC,IAEM0E,EAAYD,GAAiBlG,EADrB+F,GAAY,CADRjf,OAAOyd,YAAYzd,OAAOC,QAAQ0a,EAAKkC,MAAMzf,KAAI,+BAAEC,EAAF,KAAOie,EAAP,WAAc,CAACje,EAAK,CAAEqI,IAAK4V,EAAG3V,IAAK2V,GAAnC,MAC1C,gBAAgBtb,OAAOuJ,OAAOoR,EAAKpR,QAAQnM,KAAI,SAAAmM,GAAM,OAAIwV,GAAgBxV,EAApB,QAG9E,OAAOoU,EAAAA,GAAAA,IAAYzE,GAAO,SAAAqD,GACxB,IAAQC,EAAcD,EAAdC,UACF8C,EAAgB/C,EAAEP,SAAS5e,KAAI,SAAAke,GAAC,OAAI+D,EAAU7X,IAAI8T,EAAlB,IACtC,OAAQkB,GACN,IAAK,YACH,cAAuC8C,EAAvC,GAAO5jB,EAAP,KAAc6jB,EAAd,KAAyBC,EAAzB,KAA+BC,EAA/B,KACA,GAAI/jB,EAAMgK,KAAO6Z,EAAU5Z,IAAK,OAAO4W,EAAEP,SAAS,GAC7C,GAAItgB,EAAMiK,IAAM4Z,EAAU7Z,IAAK,OAAO6W,EAAEP,SAAS,GACtD,GAAIwD,EAAK7Z,MAAQ6Z,EAAK9Z,KACpB+Z,EAAK9Z,MAAQ8Z,EAAK/Z,KAClB8Z,EAAK9Z,MAAQ+Z,EAAK/Z,KAAOgR,SAAS8I,EAAK9Z,KACvC,OAAO8X,EAAAA,GAAAA,IAASgC,EAAK7Z,KACvB,MAEF,IAAK,MACH,IAAM+Z,EAAcnD,EAAEP,SAASjR,QAAO,SAACnN,EAAG8M,GACxC,IAAMiV,EAAML,EAAc5U,GAC1B,OAAO4U,EAAcrN,OAAM,SAAC2N,EAAKC,GAAN,OAAYF,EAAIja,KAAOka,EAAIja,GAA3B,GAC5B,IACD,GAAI+Z,EAAYjhB,OAAS6gB,EAAc7gB,OAAQ,OAAOiH,GAAAA,GAAAA,WAAA,WAAOga,IAC7D,MAEF,IAAK,MACH,IAAMA,EAAcnD,EAAEP,SAASjR,QAAO,SAACnN,EAAG8M,GACxC,IAAMiV,EAAML,EAAc5U,GAC1B,OAAO4U,EAAcrN,OAAM,SAAA2N,GAAG,OAAID,EAAIha,KAAOia,EAAIla,GAAnB,GAC/B,IACD,GAAIga,EAAYjhB,OAAS6gB,EAAc7gB,OAAQ,OAAOkH,GAAAA,GAAAA,WAAA,WAAO+Z,IAIjE,OAAOnD,CACR,IAAE,SAAAA,GAAC,OAAIA,CAAJ,GACL,CACD,SAAS0C,GAAYa,GACnB,IAAMpC,EAAoB,CAAC,EAS3B,OARAoC,EAAO7D,SAAQ,SAAA8D,GACb/f,OAAOC,QAAQ8f,GAAO9D,SAAQ,YAAmB,IAAD,eAAhB5e,EAAgB,KAAX3B,EAAW,KAC1CgiB,EAAOrgB,IACTqgB,EAAOrgB,GAAKqI,KAAOhK,EAAMgK,IACzBgY,EAAOrgB,GAAKsI,KAAOjK,EAAMiK,KACpB+X,EAAOrgB,IAAP,WAAmB3B,EAC3B,GACF,IACMgiB,CACR,CACD,SAASqB,GAAgBpE,GACvB,IAAM+C,EAAoB,CAAC,EAe3B,OAdI/C,EAAKlc,SACPuB,OAAOsG,KAAKqU,EAAK,GAAGpR,QACjBwB,QAAO,SAAA1N,GAAG,OAAIsd,EAAK1I,OAAM,SAAAwM,GAAG,OAAIA,EAAIlV,OAAOlM,EAAf,GAAlB,IACV4e,SAAQ,SAAA5e,GAAG,OAAIqgB,EAAOrgB,GAAO,CAAEqI,IAAKiV,EAAK,GAAGpR,OAAOlM,GAAMsI,IAAKgV,EAAK,GAAGpR,OAAOlM,GAAlE,IACdsd,EAAKsB,SAAQ,YACX,IAD4B,IAAd1S,EAAa,EAAbA,OACd,MAA2BvJ,OAAOC,QAAQsJ,GAA1C,eAAmD,CAA9C,sBAAOlM,EAAP,KAAY3B,EAAZ,KACEgiB,EAAOrgB,IAENqgB,EAAOrgB,GAAKsI,IAAMjK,IAAOgiB,EAAOrgB,GAAKsI,IAAMjK,GAC3CgiB,EAAOrgB,GAAKqI,IAAMhK,IAAOgiB,EAAOrgB,GAAKqI,IAAMhK,IAH/BgiB,EAAOrgB,GAAO,CAAEqI,IAAK,EAAGC,IAAKjK,EAKhD,CACF,KAEIgiB,CACR,CACD,SAAS0B,GAAiBlG,EAAkB8G,GAC1C,IAAMD,EAAQ,IAAI9C,IAmDlB,OAjDAX,EAAAA,GAAAA,IAAapD,GAAO,SAAAtb,GAAQ,IAAE,SAAAqiB,GAAO,IAAD,EAI9BjN,EAHEuJ,EAAI0D,EACFzD,EAAcD,EAAdC,UACFR,EAAWO,EAAEP,SAAS5e,KAAI,SAAA+e,GAAE,OAAI4D,EAAMvY,IAAI2U,EAAd,IAElC,OAAQK,GACN,IAAK,OACH,GAAkB,QAAdD,EAAElV,KAAK,GACT,MAAM,IAAIqV,MAAJ,6BAAgCH,EAAElV,KAAlC,2BACR2L,EAAO,UAAGgN,EAAMzD,EAAElV,KAAK,WAAhB,QAAuB,CAAE3B,IAAK,EAAGC,IAAK,GAC7C,MACF,IAAK,QAASqN,EAAUkN,GAAc,CAAC3D,EAAE7gB,QAAS,MAClD,IAAK,YAAasX,EAAUkN,GAAc3D,EAAEgC,MAAO,MACnD,IAAK,MAAO,IAAK,MAAO,IAAK,MAC3BvL,EAAU,CACRtN,IAAKya,GAAAA,GAAc3D,GAAWR,EAAS5e,KAAI,SAAAke,GAAC,OAAIA,EAAE5V,GAAN,KAC5CC,IAAKwa,GAAAA,GAAc3D,GAAWR,EAAS5e,KAAI,SAAAke,GAAC,OAAIA,EAAE3V,GAAN,MAC3C,MACL,IAAK,MAAOqN,EAAU,CACpBtN,IAAKya,GAAAA,GAAc3D,GAAW,CAACR,EAAS,GAAGrW,MAC3CA,IAAKwa,GAAAA,GAAc3D,GAAW,CAACR,EAAS,GAAGtW,OAC1C,MACH,IAAK,MAAOsN,EAAUgJ,EAASoE,QAAO,SAAC3D,EAAMzJ,GAAP,OAAmBkN,GAAc,CACrEzD,EAAK/W,IAAMsN,EAAQtN,IAAK+W,EAAK/W,IAAMsN,EAAQrN,IAC3C8W,EAAK9W,IAAMqN,EAAQtN,IAAK+W,EAAK9W,IAAMqN,EAAQrN,KAFP,IAGjC,MACL,IAAK,YACqCqN,EAApCgJ,EAAS,GAAGtW,KAAOsW,EAAS,GAAGrW,IAAeqW,EAAS,GAClDA,EAAS,GAAGrW,IAAMqW,EAAS,GAAGtW,IAAesW,EAAS,GAChDkE,GAAc,GAAI,CAAClE,EAAS,GAAIA,EAAS,KACxD,MACF,IAAK,WACH,cAAeA,EAAf,GAAOV,EAAP,KAAU+E,EAAV,KAAyBC,EAAM,CAAE5a,IAAK4V,EAAE5V,IAAM2a,EAAE3a,IAAKC,IAAK2V,EAAE3V,IAAM0a,EAAE1a,KAElEqN,EADEsN,EAAI5a,KAAO,GAAK4a,EAAI3a,KAAO,EAClB2V,EAAE5V,KAAO,GAAK4V,EAAE3V,KAAO,EAAK,CAAED,IAAK6a,IAAK5a,IAAK4a,KAAQ,CAAE7a,KAAMgS,IAAU/R,IAAK+R,KAG7EwI,GAAc,CACtB5E,EAAE5V,IAAM4a,EAAI5a,IAAK4V,EAAE5V,IAAM4a,EAAI3a,IAC7B2V,EAAE3V,IAAM2a,EAAI5a,IAAK4V,EAAE3V,IAAM2a,EAAI3a,MAEjC,MAEF,IAAK,OAAQ,IAAK,SAAU,IAAK,QAC/B,MAAM,IAAI+W,MAAJ,sBAAyBF,EAAzB,UACR,SAASI,EAAAA,GAAAA,IAAkBJ,GAE7BuD,EAAM3f,IAAImc,EAAGvJ,EACd,IACM+M,CACR,CACD,SAASG,GAAc3W,GAAsE,IAA3CiX,EAA0C,uDAAZ,GACxE7a,EAAM8a,KAAK9a,IAAL,MAAA8a,MAAI,QAAQlX,GAAR,gBAAmBiX,EAASpjB,KAAI,SAAAke,GAAC,OAAIA,EAAE3V,GAAN,OAC3CD,EAAM+a,KAAK/a,IAAL,MAAA+a,MAAI,QAAQlX,GAAR,gBAAmBiX,EAASpjB,KAAI,SAAAke,GAAC,OAAIA,EAAE5V,GAAN,OACjD,MAAO,CAAEA,IAAAA,EAAKC,IAAAA,EACf,CAgBM,SAAS+a,GAAYC,EAAmBC,GAC7C,OAAOD,EAAOzgB,SAAQ,SAAAob,GAAC,OAAIA,CAAJ,IAAOjb,MAAK,SAAC4C,EAAGC,GAAJ,OAAUA,EAAExH,MAAQuH,EAAEvH,KAAtB,IAA6BmlB,MAAM,EAAGD,EAC1E,CACM,SAASE,GAAUC,GAGxB,IAFA,IAAIC,EAAQ,IACR1a,EAAO,IAAIqV,IAAIoF,EAAM7gB,SAAQ,SAAAob,GAAC,OAAItb,OAAOuJ,OAAO+R,GAAGle,KAAI,SAAAS,GAAC,OAAI4iB,KAAKQ,MAAMpjB,EAAEqjB,KAAQF,EAAzB,GAA1B,KAC3B1a,EAAK2B,KAFuC,MAGjD+Y,GAHmC,EAInC1a,EAAO,IAAIqV,KAAI,QAAIrV,GAAMlJ,KAAI,SAAAC,GAAG,OAAIojB,KAAKQ,MAAM5jB,EAJZ,EAIH,KAElC,IAPqD,EAO/CqgB,EAAmB,CAAC,EAP2B,WAQlCqD,GARkC,IAQrD,2BACE,QADSG,EACT,cAAoBlhB,OAAOuJ,OAAO2X,GAAlC,eAAyC,CAApC,IAAMC,EAAK,KACR7F,EAAImF,KAAKQ,MAAME,EAAMD,KAAQF,GAASA,IACvCtD,EAAOpC,IAAMoC,EAAOpC,GAAI5f,MAAQylB,EAAMzlB,SACzCgiB,EAAOpC,GAAK6F,EACf,CAbkD,+BAcrD,OAAOzD,CACR,CAOM,SAAUnD,GAAmB6G,EAAkCC,GAA/D,yFACCC,GAAU/D,EAAAA,GAAAA,IAAU8D,EAAS9X,QAAQ,SAAAA,GAAM,OAAI,IAAIoS,IAAIpS,EAAOnM,KAAI,SAAAS,GAAC,OAAIA,EAAEuC,GAAN,IAAxB,IAD5C,WAE6BghB,GAF7B,yDAEmBrW,EAFnB,qBAGE,sBAAO+S,EAAP,KAAavB,EAAb,KACGgF,EAAYD,EAAQxD,GAC1B,OAAQvB,EAAEiF,MACR,IAAK,WAAY,IAAI,QAAIjF,EAAEkF,MAAMxP,OAAM,SAAAxH,GAAC,OAAK8W,EAAUnF,IAAI3R,EAAnB,IAAwB,6BAAsB,MACtF,IAAK,UAAW,IAAI,QAAI8W,GAAWtP,OAAM,SAAAxH,GAAC,OAAI8R,EAAEkF,KAAKrF,IAAI3R,EAAf,IAAqB,6BAPhE,QAGqBzK,OAAOC,QAAQ8K,GAHpC,4JAWH,OAXG,UAWGA,EAXH,sHAAAwR,IAAA,0EAcA,SAASmF,GAAmB7G,GACjC,OAAO,IAAIc,IAAa,OAATd,QAAS,IAATA,GAAAA,EAAWjc,SAAS,GAC/Bic,EAAUjc,SAAS,GAAK,CAAC,EAAG,GAAK,CAAC,EAAG,EAAG,EAAG,GAClC,OAATic,QAAS,IAATA,GAAAA,EAAWjc,SAAS,GAAK,CAAC,EAAG,EAAG,EAAG,GAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7D,CAEM,SAAU4b,GAAWK,EAA4BwG,GAAjD,YAaIM,EAUAC,EAvBJ,YAuDKC,EAvDL,6EA8BL,IAyBUA,EAvDL,SAuDWC,GAvDX,sBAmEOD,EA6BAE,EAhGP,uEAgGOA,EAhGP,SAgGkBrX,GAhGlB,uGAiGKsX,EAAYC,EAASxjB,OAASiM,EAAGwX,EAA6B,GAAIC,EAA4B,GAAIC,EAA6B,GACjIC,EAAW,EAlGd,WAmGiBf,GAnGjB,0BAmGUlhB,EAnGV,QAoGOkiB,EAAaC,EAAcniB,GAAMib,EAAQmH,EAAOpiB,GACtD,IAAKkiB,EAAY,kBACbvC,EAAAA,GAAAA,IAAM,EAAGiC,GAAW/P,OAAM,SAAA4N,GAAC,OAAKyC,EAAWlG,IAAIf,EAAQwE,EAA5B,IAAiCuC,EAASK,KAAKriB,GACpEkiB,EAAWlG,IAAIf,IAIhB0E,EAAAA,GAAAA,IAAM,EAAGiC,GAAW/H,MAAK,SAAA4F,GAAC,OAAKyC,EAAWlG,IAAIf,EAAQwE,EAA5B,KAAiCqC,EAASO,KAAKriB,IAHhFiiB,IAAY,QAAIC,GAAYI,MAAK,SAAApH,GAAC,OAAIA,EAAID,CAAR,IAAkBA,EACpD8G,EAAQM,KAAKriB,GAzGhB,4OAAAmc,IAAA,0BA6GG8F,EAAWL,GA7Gd,sDA8GGtX,IAAMuX,EAASxjB,OA9GlB,iBA+GC,OA/GD,WA+GC,WAAWif,GA/GZ,6CAkHG2E,IAAaL,EAlHhB,4BAmHmBG,GAnHnB,2DAsHG,OAHS/hB,EAnHZ,QAoHGoiB,EAAOpiB,KACPsd,EAAOG,EAAAA,GAAYoE,EAASvX,KAAO,CAAE8W,KAAM,WAAYC,KAAM,IAAI9F,IAAI,CAACvb,KACtE,gBAAO2hB,EAAWrX,EAAI,GAAtB,SAtHH,QAuHG8X,EAAOpiB,KAvHV,wHAAAmc,IAAA,uEA2HqB2F,EAAaC,GA3HlC,0CA8HC,OAHS/hB,EA3HV,KA4HCoiB,EAAOpiB,KACPsd,EAAOG,EAAAA,GAAYoE,EAASvX,KAAO,CAAE8W,KAAM,WAAYC,KAAM,IAAI9F,IAAI,CAACvb,KACtE,gBAAO2hB,EAAWrX,EAAI,GAAtB,SA9HD,QA+HC8X,EAAOpiB,KA/HR,oCAkID,OADAsd,EAAOG,EAAAA,GAAYoE,EAASvX,KAAO,CAAE8W,KAAM,UAAWC,KAAM,IAAI9F,IAAJ,UAAYwG,EAAYC,EAAaF,KACjG,gBAAOH,EAAWrX,EAAI,GAAtB,SAlIC,2EAmEOmX,EAnEP,SAmEanX,GAnEb,oFAoEGA,IAAMiY,EAASlkB,OApElB,gBAqEQ,uBAAOsjB,EAAW,GAAlB,QArER,wDAuEiBT,GAvEjB,iIAuEUlhB,EAvEV,SAwEKwiB,EAAKxG,IAAIhc,GAxEd,+DAyEO3B,EAASkkB,EAASjY,GAAGjM,OAAQ6jB,EAAaC,EAAcniB,GAC1DyiB,EAAmB,GAEnBP,GAAeA,EAAWlG,IAAI3d,GA5EnC,sBA8EGokB,GAAmB,WAAC9C,EAAAA,GAAAA,IAAMthB,EAAS,EAAG,GAAGikB,MAAK,SAAAle,GAAC,OAAI8d,EAAWlG,IAAI5X,EAAnB,WAA5B,QAAsD,GAAK/F,GACvDqkB,GA/E1B,4DAuFC,OALAF,EAAK7G,IAAI3b,GACToiB,EAAOpiB,GAAOuiB,EAASjY,GAAGjM,OAC1BkkB,EAASjY,GAAGuR,SAAQ,SAAA4D,GAAC,OAAInC,EAAOG,EAAAA,GAAYgC,IAAM,CAAE2B,KAAM,WAAYC,KAAM,IAAI9F,IAAI,CAACvb,IAAhE,IACrB0iB,GAAkBD,EAElB,gBAAOhB,EAAMnX,EAAI,GAAjB,SAvFD,QAyFCoY,GAAkBD,EAClBL,EAAOpiB,GAAO,EACdwiB,EAAKG,OAAO3iB,GA3Fb,gUAAAmc,IAAA,4FAmEOsF,GAnEP,kBAgGOE,GAxCJa,EAA4B,IAAIjH,IAClCgH,EAAuB,GAAIV,EAAqB,GAzDjD,WA0DaH,GA1Db,IA0DH,2BAAWpX,EAAY,QACrBiY,EAASF,KAAK,IACJ,IAAN/X,EAASuX,EAASQ,KAAKE,EAASlkB,OAAS,GACxCkkB,EAASjY,GAAG+X,KAAKE,EAASlkB,OAAS,EA7DvC,2BAAA8d,GAAA,CAoIH,OArEAoG,EAAWA,EAAS5X,QAAO,SAAAlN,GAAC,OAAIA,EAAEY,MAAN,IAAc4B,MAAK,SAAC4C,EAAGC,GAAJ,OAAUA,EAAEzE,OAASwE,EAAExE,MAAvB,IAC3CqkB,EAAiBb,EAASxjB,OAoE9B,gBAAOojB,EAAM,GAAb,SApIG,yCAuBID,EAvBJ,SAuBiBE,EAAiBkB,GACrC,KAAIjD,EAAAA,GAAAA,IAAMiD,EAAY,EAAG,GAAG/I,MAAK,SAAAvP,GAAC,OAAiB,IAAboX,EAAMpX,EAAV,IAIlC,OAFAoX,GAAK,QAAOA,IACNkB,GAAa,EACZlB,EAAM1B,QAAO,SAACnd,EAAGC,GAAJ,OAAc,EAAJD,EAAQC,CAAlB,GAAqB,EAC1C,EAhBQye,EAbJ,SAamB3O,EAAmBuL,EAAmB0D,GAC5D,GAAuB,IAAnBjP,EAAQvU,OAAZ,CADgF,iBAMhE8f,GANgE,yBAMrE7T,EANqE,QAM1DiX,EAAe,GAAD,gBAAK3O,GAAL,CAActI,IAAI6T,EAAM0D,EAASlX,QAAO,SAAA8U,GAAC,OAAIA,IAAMnV,CAAV,IANG,EAMhF,2BAAsB,GAN0D,+BAOhFiX,EAAe,GAAD,gBAAK3O,GAAL,CAAcA,EAAQvU,SAAS,IAAIkd,IAAJ,mBAAY4C,GAAZ,CAAkBvL,EAAQvU,UAAzD,mBAAuEwjB,GAAvE,CAAiFjP,EAAQvU,SAFtG,MAHKwkB,EAAgB7G,IAAI6F,EAASxjB,SAC/BykB,EAAOT,KAAKzP,EAKjB,EArBI,kBAuDK6O,GA5CJP,GAXD,QAWe,IAAI3F,IAAI0F,IAAY4B,EAAkBvB,GAAmB7G,EAAUuD,SACnF8E,EAAqB,GAUzBvB,EAAe,CAAC,GAAI,IAAIhG,IAAI,CAAC,IAAK,CAAC,IAtB9B,WA8BIqH,GACP,IA/BG,EA+BGX,EAAgC,IAAIpF,IA/BvC,WAgCiBiG,GAhCjB,IAgCH,2BAA4B,CAAC,IAAD,EAAjBpB,EAAiB,QACpB/D,EAAK6D,EAAaE,EAAOkB,QACpB5jB,IAAP2e,GACJsE,EAASjiB,IAAI2d,GAAI,UAACsE,EAAS7a,IAAIuW,UAAd,QAAqB,IAAIpC,IAAImG,EAAMjB,MAAM,EAAGmC,IAAY/a,KAAO,GAAK,EACtF,CApCE,2BAAAsU,GAAA,kBAqC2B8F,EAASpiB,WArCpC,8CAqCS8d,EArCT,KAsCD,GAAkB,IAtCjB,KAsCoB,CACnB,IAAM+D,GAAK,QAAOoB,EAAOR,MAAK,SAAAZ,GAAK,OAAIF,EAAaE,EAAOkB,KAAejF,CAAvC,KACnC+D,EAAMkB,GAAa,EACnBE,EAASA,EAAOnY,QAAO,SAAA+W,GAAK,OAAIF,EAAaE,EAAOkB,KAAejF,CAAvC,IAC5BmF,EAAOT,KAAKX,EACb,CA3CA,EAqCH,2BAAmD,GArChD,2BAAAvF,GAAA,GA8BIyG,EAAY,EAAGA,GAAa,EAAGA,IAAc,EAA7CA,GAmBHG,EAAW,CAAE3B,KAAM,UAAoBC,KAAM,IAAI9F,KACjD+B,GAAwBE,EAAAA,GAAAA,GAAaC,EAAAA,IAAa,SAAAjgB,GAAC,OAAIulB,CAAJ,IAEnDX,GApDD,qBAoDejF,EAAAA,GAAAA,IAAU1C,GAAW,SAAAjd,GAAC,OAAI,CAAJ,MAAWggB,EAAAA,GAAAA,GAAa0D,GAAS,SAAA1jB,GAAC,OAAI,CAAJ,KACtE2kB,GAAgBhF,EAAAA,GAAAA,IAAU1C,EAAW6G,IArDtC,WAsIewB,GAtIf,2DAsIuB,OAAjBpB,EAtIN,QAsIuB,gBAAOD,EAAMC,GAAb,SAtIvB,wHAAAvF,IAAA,2E,4EC1WQ,SAAS6G,GAAT,GAAsG,IAAD,EAAzEC,EAAyE,EAAzEA,OAAQC,EAAiE,EAAjEA,UAAiE,IAAtD1Z,WAAAA,OAAsD,aAAlC2Z,iBAAAA,OAAkC,SAC5GC,GAAQ7jB,EAAAA,EAAAA,IAAW,kBAAMC,GAAAA,EAAAA,IAAkByjB,EAAxB,GAAiC,CAACA,IAC3D,IAAKG,EAAO,OAAO,KAEnB,IAAMC,EAAWF,EAAgB,UAAGC,EAAME,kBAAkBJ,UAA3B,aAAG,EAAoCvY,QAAO,SAAAD,GAAO,MAAI,WAAYA,CAAhB,IAA2B0Y,EAAME,kBAAkBJ,GACzI,OAAO,SAACviB,EAAA,EAAD,CAAK6D,QAAQ,OAAOoG,cAAc,SAAlC,SACJyY,GAAW,SAACpZ,GAAA,EAAD,CAAiBC,SAAUmZ,EAAU7Z,WAAYA,IAAiB,MAEjF,C,gHChBc,SAAS+Z,GAAgBC,GACtC,IAAQ9R,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACR,GAAwC/N,EAAAA,EAAAA,WAAS,kBAAM+N,EAAS+R,cAAcrc,IAAIoc,EAAjC,IAAjD,eAAOE,EAAP,KAAqBC,EAArB,KAOA,OANArf,EAAAA,EAAAA,YAAU,kBAAMqf,EAAgBjS,EAAS+R,cAAcrc,IAAIoc,GAAjD,GAAiE,CAAC9R,EAAU8R,KACtFlf,EAAAA,EAAAA,YAAU,kBACRoN,EAAS+R,cAAcG,OAAOJ,GAAc,SAACjL,EAAGvL,EAAGvP,GAAP,MAAmB,WAANuP,GAAkB2W,EAAgBlmB,EAA/C,GADpC,GAER,CAAC+lB,EAAcG,EAAiBjS,IAG3B,CAAEgS,aAAcA,EAA8BG,sBAFxB5f,EAAAA,EAAAA,cAAY,SAAC4B,GAAD,OAAuC2d,GAAgB9R,EAAS+R,cAAczjB,IAAIwjB,EAAc3d,EAAhG,GAAyG,CAAC2d,EAAc9R,IAGlK,CCcc,SAASoS,GAAT,GAAmE,IAAD,IAArCrgB,EAAqC,EAArCA,SAClChE,GAAMC,EAAAA,EAAAA,GAAe,CAAC,0BAA2B,UAAjDD,EACFskB,GAAcxd,EAAAA,EAAAA,YAAWK,EAAAA,GACvB8K,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACR,GAA6EnL,EAAAA,EAAAA,YAAWC,EAAAA,GAAxF,IAAQC,UAAkB+c,EAA1B,EAAqBvmB,IAAmBgJ,EAAxC,EAAwCA,YAAeS,EAAvD,EAAuDA,kBACvD,EAAoE6c,GAAgBC,GAA5DQ,EAAxB,EAAQN,aAAgBM,gBAAmBH,EAA3C,EAA2CA,qBAC3C,GAAwBlgB,EAAAA,EAAAA,WAAS,GAAjC,eAAO8K,EAAP,KAAawV,EAAb,KACMC,GAASjgB,EAAAA,EAAAA,cAAY,kBAAMggB,GAAQ,EAAd,GAAqB,CAACA,IAC3CvV,GAAUzK,EAAAA,EAAAA,cAAY,kBAAMggB,GAAQ,EAAd,GAAsB,CAACA,IAC7C3kB,GAAiBC,EAAAA,EAAAA,IAAW,kBAAMC,GAAAA,EAAAA,MAAN,GAA4B,IACxD2kB,GAAgBpnB,EAAAA,EAAAA,UAAQ,kBAAMuC,EAAiBM,OAAOC,QAAQL,GAAAA,EAAAA,kBAAgCF,IAAiB8kB,UAAUtkB,SAAQ,qCAAoB6K,QAAO,SAAA1N,GAAG,OAAKA,EAAIuB,SAAS,UAAlB,IAAgC,EAAvK,GAA2K,CAACc,IAE1M,GAA+B+kB,EAAAA,GAAAA,KAA/B,eAAOC,EAAP,KAAgBC,EAAhB,MACAjgB,EAAAA,EAAAA,YAAU,kBAAMoN,EAAS6I,KAAKiK,UAAUD,EAA9B,GAA4C,CAAC7S,EAAU6S,IAEjE,IAAME,GAAe1nB,EAAAA,EAAAA,UAAQ,WAC3B,IAAM0nB,EAA8D7kB,OAAOyd,YAAY8G,EAAcnnB,KAAI,SAAAub,GAAC,MAAI,CAACA,EAAG3Y,OAAOyd,YAAYI,EAAAA,GAAAA,KAAgB,SAAAiH,GAAE,MAAI,CAACA,EAAI,EAAT,KAA7C,KAE1G,OADAhT,EAAS6I,KAAKpR,OAAOnM,KAAI,SAAAqhB,GAAG,OAAIoG,EAAapG,EAAI4E,SAAWwB,EAAapG,EAAI4E,QAAS5E,EAAIsG,UAA9D,IACrBL,GAAWG,CACnB,GAAE,CAACH,EAAS5S,EAAUyS,IACjBS,IAAgB,UAACZ,EAAgBhG,eAAjB,OAAC,EAAyBxf,SAAS,IACnDqmB,IAAgB,UAACb,EAAgBhG,eAAjB,OAAC,EAAyBxf,SAAS,IAEzD,GAA+CzB,EAAAA,EAAAA,UAAQ,iBAAO,CAC5D+nB,OAAQX,EAAcxZ,QAAO,SAAA4N,GAAC,cAAI,UAACyL,EAAgBzL,UAAjB,OAAC,EAAoB/Z,SAAS,GAAlC,IAAsCH,OACpE0mB,OAAQZ,EAAcxZ,QAAO,SAAA4N,GAAC,cAAI,UAACyL,EAAgBzL,UAAjB,OAAC,EAAoB/Z,SAAS,GAAlC,IAAsCH,OACpE2mB,SAAUb,EAAcxZ,QAAO,SAAA4N,GAAC,uBAAIyL,EAAgBzL,UAApB,aAAI,EAAoB/Z,SAAS,EAAjC,IAAqCH,OACrE4mB,SAAUd,EAAcxZ,QAAO,SAAA4N,GAAC,uBAAIyL,EAAgBzL,UAApB,aAAI,EAAoB/Z,SAAS,EAAjC,IAAqCH,OAJhB,GAKnD,CAAC8lB,EAAeH,IALZc,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,SAAUC,EAAlC,EAAkCA,SAM5BC,IAAoBnoB,EAAAA,EAAAA,UAAQ,kBAC/B6C,OAAOsG,KAAKD,GAAc0E,QAAO,SAAA4N,GAAC,OACjC4M,EAAAA,GAAAA,SAAyB5M,IAA+D,IAAvC3Y,OAAOsG,KAAKD,EAAYsS,IAAIla,MAD5C,IAC0DA,MAF7D,GAG9B,CAAC4H,IACCmf,IAAqBroB,EAAAA,EAAAA,UAAQ,2BAAC,WAC/BgnB,GAD8B,IAEjCpd,KAAM,IAAI0e,GAAAA,GAAJ,oBAAgBtB,EAAYpd,KAAKA,KAAK,IAAtC,IAA0C2e,QAAQ9H,EAAAA,GAAAA,GAAa2H,EAAAA,IAAiB,SAAA3nB,GAAC,OAAI4f,EAAAA,GAAAA,IAAS,EAAb,WAAoBpe,IAF1E,GAG/B,CAAC+kB,IACCwB,IAAgBthB,EAAAA,EAAAA,cAAY,WAChC,IAAMuhB,EAAe5lB,OAAOyd,YAAYzd,OAAOC,QAAQoG,GAAa0E,QAAO,+BAAE4N,EAAF,iBAAa4M,EAAAA,GAAAA,SAAyB5M,EAAtC,KAC3E7R,EAAkB,CAAET,YAAauf,GAClC,GAAE,CAACvf,EAAaS,IACX+e,IAAkBxhB,EAAAA,EAAAA,cACtB,SAACyhB,GAAoC,IAApBC,IAAmB,yDAC5BC,GAAmB7e,EAAAA,GAAAA,IAAUid,GACnCG,EAActI,SAAQ,SAAAtD,GAAM,IAAD,EACrBoN,EAASC,EAAiBrN,GAAjB,6BAA2BqN,EAAiBrN,UAA5C,QAAkD,IAAlD,CAAuDmN,IAC3DE,EAAiBrN,KAAIqN,EAAiBrN,GAAKqN,EAAiBrN,GAAG5N,QAAO,SAAAiP,GAAC,OAAIA,IAAM8L,CAAV,IACjF,IACD7B,EAAqB,CAAEG,gBAAiB4B,GACzC,GACD,CAACzB,EAAeH,EAAiBH,IAGnC,OAAO,iCACL,UAAC9R,EAAA,EAAD,CAAWlR,GAAI,CAAE2D,QAAS,QAA1B,WACE,UAACuF,EAAA,EAAD,CAAalJ,GAAI,CAAEoE,SAAU,GAA7B,WACE,SAACkG,EAAA,EAAD,WACE,4BAAS1L,EAAT,+CAEF,UAACgY,GAAA,EAAD,CAAO5I,QAAS,EAAhB,WACE,UAAC1D,EAAA,EAAD,WAAa1L,EAAb,oDAAyC,UAAC2I,EAAA,EAAD,CAASlK,MAAOgnB,GAAoB,UAAY,YAAhD,UAA8DA,GAA9D,IAAkFzlB,EAAU,+BACrI,UAAC0L,EAAA,EAAD,WAAa1L,EAAb,uCAA4B,UAAC2I,EAAA,EAAD,CAASlK,MAAM,UAAf,UAA0B4mB,EAA1B,KAAkC,SAAC,KAAD,CAAiB5lB,KAAM2mB,GAAAA,IAAarW,UAAU,UAAhF,IAA4F/P,EAAU,6BAAqCulB,GAAY,QAASA,IAAY,UAAC5c,EAAA,EAAD,CAASlK,MAAM,YAAf,UAA4B8mB,EAA5B,KAAsC,SAAC,KAAD,CAAiB9lB,KAAM4mB,GAAAA,IAAOtW,UAAU,UAA9E,IAA0F/P,EAAU,gCAC5S,UAAC0L,EAAA,EAAD,WAAa1L,EAAb,uCAA4B,UAAC2I,EAAA,EAAD,CAASlK,MAAM,UAAf,UAA0B6mB,EAA1B,KAAkC,SAAC,KAAD,CAAiB7lB,KAAM2mB,GAAAA,IAAarW,UAAU,UAAhF,IAA4F/P,EAAU,6BAAqCwlB,GAAY,QAASA,IAAY,UAAC7c,EAAA,EAAD,CAASlK,MAAM,YAAf,UAA4B+mB,EAA5B,KAAsC,SAAC,KAAD,CAAiB/lB,KAAM4mB,GAAAA,IAAOtW,UAAU,UAA9E,IAA0F/P,EAAU,gCAC5S,UAAC0L,EAAA,EAAD,WAAa1L,EAAb,kDAAuC,UAAC2I,EAAA,EAAD,CAASlK,MAAO0mB,EAAgB,UAAY,YAA5C,WAAyD,SAAC,KAAD,CAAiB1lB,KAAM0lB,EAAgBiB,GAAAA,IAAcC,GAAAA,IAAOtW,UAAU,UAA/H,IAA2IoV,EAAgBnlB,EAAU,wBAA0B,kBACtO,UAAC0L,EAAA,EAAD,WAAa1L,EAAb,kDAAuC,UAAC2I,EAAA,EAAD,CAASlK,MAAO2mB,EAAgB,UAAY,YAA5C,WAAyD,SAAC,KAAD,CAAiB3lB,KAAM2lB,EAAgBgB,GAAAA,IAAcC,GAAAA,IAAOtW,UAAU,UAA/H,IAA2IqV,EAAgBplB,EAAU,wBAA0B,wBAI1O,SAACkI,EAAA,EAAD,CAAQI,QAASmc,EAAQzgB,SAAUA,EAAUvF,MAAM,OAAO2C,GAAI,CAAEiH,aAAc,GAA9E,UACE,SAACie,GAAA,EAAD,SAGHzmB,IAAkB,SAACoR,GAAA,EAAD,CAAcjC,KAAMA,EAAMC,QAASA,EAAnC,UAA6C,UAAC/E,EAAA,EAAD,YAC9D,UAACI,EAAA,EAAD,CAAalJ,GAAI,CAAE2D,QAAS,OAAQsB,IAAK,EAAGkU,eAAgB,iBAA5D,WACE,SAAC7O,EAAA,EAAD,CAAYnN,QAAQ,KAApB,SAA2ByB,EAA3B,6CACA,SAACmR,EAAA,EAAD,CAAa7I,QAAS2G,QAExB,SAACpG,EAAA,EAAD,KACA,UAACyB,EAAA,EAAD,YACE,SAACgI,EAAA,EAAD,CAAWlR,GAAI,CAAEwQ,GAAI,GAArB,UAA0B,UAACtH,EAAA,EAAD,YACxB,UAACpJ,EAAA,EAAD,CAAK6D,QAAQ,OAAOsB,IAAK,EAAzB,WACE,SAACqF,EAAA,EAAD,WAAY,4BAAS1L,EAAT,6DACZ,SAAC0L,EAAA,EAAD,CAAYtK,GAAI,CAAEoE,SAAU,GAA5B,UAAiC,UAACmD,EAAA,EAAD,CAASlK,MAAOgnB,GAAoB,UAAY,YAAhD,UAA8DA,GAA9D,IAAkFzlB,EAAU,+BAC7H,SAACkI,EAAA,EAAD,CAAQE,KAAK,QAAQE,QAASwd,GAAernB,MAAM,QAAQ8J,WAAW,SAACsN,GAAA,EAAD,IAAtE,SAAmF7V,EAAnF,8DAEF,SAAC0L,EAAA,EAAD,UAAa1L,EAAb,+DAEF,SAACsS,EAAA,EAAD,CAAWlR,GAAI,CAAEwQ,GAAI,GAArB,UAA0B,UAACtH,EAAA,EAAD,YACxB,SAACoB,EAAA,EAAD,CAAYtK,GAAI,CAAEoE,SAAU,GAA5B,UAAiC,6BAC/B,UAAC+gB,GAAA,EAAD,CAAOvmB,EAAGA,EAAGwmB,QAAQ,wCAArB,4BAA4E,UAAC,KAAD,CAAW/nB,MAAM,UAAjB,qBAAkC,SAAC,KAAD,CAAiBgB,KAAM2mB,GAAAA,IAAarW,UAAU,aAA5J,OAAqL,UAAC,KAAD,CAAWtR,MAAM,YAAYF,QAAQ,QAArC,sBAAqD,SAAC,KAAD,CAAiBkB,KAAM4mB,GAAAA,IAAOtW,UAAU,qBAEpR,SAACrE,EAAA,EAAD,WAAY,UAAC6a,GAAA,EAAD,CAAOvmB,EAAGA,EAAGwmB,QAAQ,wCAArB,4GAA2J,kCAA3J,oBAA6L,kCAA7L,6BACZ,SAAC9a,EAAA,EAAD,WAAY,UAAC6a,GAAA,EAAD,CAAOvmB,EAAGA,EAAGwmB,QAAQ,uCAArB,WAA4D,6BAAQ,UAAC,KAAD,CAAW/nB,MAAM,YAAYF,QAAQ,QAArC,uBAAsD,SAAC,KAAD,CAAiBkB,KAAM4mB,GAAAA,IAAOtW,UAAU,UAA9F,cAApE,iCAAoO,+BAAQ,SAAC,KAAD,CAAWtR,MAAM,YAAYF,QAAQ,QAArC,gBAAR,SAApO,SAAwT,+BAAQ,SAAC,KAAD,CAAWE,MAAM,YAAYF,QAAQ,QAArC,iBAAR,QAAxT,UACZ,SAACmN,EAAA,EAAD,WAAY,UAAC6a,GAAA,EAAD,CAAOvmB,EAAGA,EAAGwmB,QAAQ,uCAArB,WAA4D,6BAAQ,UAAC,KAAD,CAAW/nB,MAAM,YAAYF,QAAQ,QAArC,uBAAsD,SAAC,KAAD,CAAiBkB,KAAM4mB,GAAAA,IAAOtW,UAAU,UAA9F,cAApE,iCAAoO,+BAAQ,SAAC,KAAD,CAAWtR,MAAM,YAAYF,QAAQ,QAArC,kBAAR,OAApO,SAAwT,6BAAQ,SAAC,KAAD,CAAWE,MAAM,YAAYF,QAAQ,QAArC,qBAAhU,UACZ,SAACmN,EAAA,EAAD,WAAY,UAAC6a,GAAA,EAAD,CAAOvmB,EAAGA,EAAGwmB,QAAQ,wCAArB,WAA6D,6BAAQ,UAAC,KAAD,CAAW/nB,MAAM,YAAYF,QAAQ,QAArC,uBAAsD,SAAC,KAAD,CAAiBkB,KAAM4mB,GAAAA,IAAOtW,UAAU,UAA9F,kBAArE,6CAAqP,oCAAU,SAAC,KAAD,CAAWtR,MAAM,YAAYF,QAAQ,QAArC,oBAA/P,SAAyU,qCAAW,SAAC,KAAD,CAAWE,MAAM,YAAYF,QAAQ,QAArC,mBAApV,UACZ,SAACmN,EAAA,EAAD,WAAY,UAAC6a,GAAA,EAAD,CAAOvmB,EAAGA,EAAGwmB,QAAQ,wCAArB,WAA6D,6BAAQ,UAAC,KAAD,CAAW/nB,MAAM,YAAYF,QAAQ,QAArC,uBAAsD,SAAC,KAAD,CAAiBkB,KAAM4mB,GAAAA,IAAOtW,UAAU,UAA9F,kBAArE,0CAAkP,6BAAQ,SAAC,KAAD,CAAWtR,MAAM,YAAYF,QAAQ,QAArC,qBAA1P,eAEd,UAAC8X,GAAA,GAAD,CAAMlH,WAAS,EAACoJ,QAAS,CAAExB,GAAI,EAAGpH,GAAI,GAAKvO,GAAI,CAAEwQ,GAAI,GAAKxC,QAAS,EAAnE,WACE,SAACiH,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,EAAf,UACE,SAAC0P,GAAD,CAAwBC,OAAQ,EAAGC,SAAUtB,EAAQuB,WAAYrB,EAAUS,gBAAiBA,QAE9F,SAAC3P,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,EAAf,UACE,SAAC0P,GAAD,CAAwBC,OAAQ,EAAGC,SAAUrB,EAAQsB,WAAYpB,EAAUQ,gBAAiBA,QAE9F,SAAC3P,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,EAAf,UACE,SAACzE,EAAA,EAAD,WACE,UAAChI,EAAA,EAAD,YACE,SAACoB,EAAA,EAAD,CAAYmb,cAAY,EAAxB,UAAyB,6BAAQ,UAACN,GAAA,EAAD,CAAOvmB,EAAGA,EAAGwmB,QAAQ,2BAArB,WAAgD,UAAC,KAAD,CAAW/nB,MAAM,UAAjB,oBAAiC,SAAC,KAAD,CAAiBgB,KAAM2mB,GAAAA,IAAarW,UAAU,aAA/H,OAAwJ,UAAC,KAAD,CAAWtR,MAAM,YAAYF,QAAQ,QAArC,sBAAqD,SAAC,KAAD,CAAiBkB,KAAM4mB,GAAAA,IAAOtW,UAAU,aAArP,0BACjC,UAAC7O,EAAA,EAAD,CAAKE,GAAI,CAAE2D,QAAS,OAAQoG,cAAe,SAAU9E,IAAK,GAA1D,WACE,SAAC6B,EAAA,EAAD,CAAQC,WAAS,EAACG,QAAS,kBAAM8b,EAAqB,CAAEvlB,KAAM,kBAAmB2kB,OAAQ,UAAWsD,IAAK,GAA9E,EAAoFroB,MAAO0mB,EAAgB,UAAY,YAAa5c,UAAY4c,GAA2C,SAAC3c,GAAA,EAAD,KAA3B,SAACC,GAAA,EAAD,IAAyCse,SAAS,SAAC,KAAD,CAAiBtnB,KAAM0lB,EAAgBiB,GAAAA,IAAcC,GAAAA,IAAOtW,UAAU,UAAnT,SAAgU/P,EAAhU,gDACA,SAACkI,EAAA,EAAD,CAAQC,WAAS,EAACG,QAAS,kBAAM8b,EAAqB,CAAEvlB,KAAM,kBAAmB2kB,OAAQ,UAAWsD,IAAK,GAA9E,EAAoFroB,MAAO2mB,EAAgB,UAAY,YAAa7c,UAAY6c,GAA2C,SAAC5c,GAAA,EAAD,KAA3B,SAACC,GAAA,EAAD,IAAyCse,SAAS,SAAC,KAAD,CAAiBtnB,KAAM2lB,EAAgBgB,GAAAA,IAAcC,GAAAA,IAAOtW,UAAU,UAAnT,SAAgU/P,EAAhU,6DAMV,SAACqW,GAAA,GAAD,CAAMlH,WAAS,EAACC,QAAS,EAAGmJ,QAAS,CAAExB,GAAI,EAAGpH,GAAI,GAAlD,SACG+U,EAAcnnB,KAAI,SAAAimB,GACjB,OAAO,SAACwD,GAAD,CAA8BxD,OAAQA,EAAQG,MAAO9jB,EAAe2jB,GAASmC,mBAAoBA,GAAoBsB,UAAWjC,EAAaxB,IAAvHA,EAC9B,UAGL,SAAC3a,EAAA,EAAD,KACA,SAACyB,EAAA,EAAD,CAAalJ,GAAI,CAAE8N,GAAI,GAAvB,UACE,SAACiC,EAAA,EAAD,CAAajB,OAAK,EAAC5H,QAAS2G,aAInC,CACD,SAASwX,GAAT,GAA0M,IAAxKE,EAAuK,EAAvKA,SAAUC,EAA6J,EAA7JA,WAAYF,EAAiJ,EAAjJA,OAAQV,EAAyI,EAAzIA,gBACtDhmB,GAAMC,EAAAA,EAAAA,GAAe,CAAC,0BAA2B,UAAjDD,EACR,OAAO,SAACsS,EAAA,EAAD,WACL,UAAChI,EAAA,EAAD,YACE,UAACoB,EAAA,EAAD,CAAYmb,cAAY,EAAxB,WAAyB,4BAAS7mB,EAAE,SAAD,OAAU0mB,EAAV,UAAnC,KAAoE,UAAC/d,EAAA,EAAD,CAASlK,MAAM,UAAf,UAA0BkoB,EAA1B,KAAoC,SAAC,KAAD,CAAiBlnB,KAAM2mB,GAAAA,IAAarW,UAAU,UAAlF,IAA8F/P,EAAU,6BAAqC4mB,GAAc,QAASA,IAAc,UAACje,EAAA,EAAD,CAASlK,MAAM,YAAf,UAA4BmoB,EAA5B,KAAwC,SAAC,KAAD,CAAiBnnB,KAAM4mB,GAAAA,IAAOtW,UAAU,UAAhF,IAA4F/P,EAAU,gCAC5V,UAACkB,EAAA,EAAD,CAAKE,GAAI,CAAE2D,QAAS,OAAQoG,cAAe,SAAU9E,IAAK,GAA1D,WACE,SAAC6B,EAAA,EAAD,CAAQC,WAAS,EAACnE,UAAW4iB,EAAYte,QAAS,kBAAM0d,EAAgBU,GAAQ,EAA9B,EAAsCjoB,MAAM,UAAU8J,WAAW,SAAC,KAAD,CAAiB9I,KAAM2mB,GAAAA,IAAarW,UAAU,UAAjK,SAA8K/P,EAAE,wBAAD,OAAyB0mB,EAAzB,WAC/K,SAACxe,EAAA,EAAD,CAAQC,WAAS,EAACnE,UAAW2iB,EAAUre,QAAS,kBAAM0d,EAAgBU,GAAQ,EAA9B,EAAqCjoB,MAAM,YAAY8J,WAAW,SAAC,KAAD,CAAiB9I,KAAM4mB,GAAAA,IAAOtW,UAAU,UAA1J,SAAuK/P,EAAE,0BAAD,OAA2B0mB,EAA3B,iBAI/K,CACD,SAASM,GAAT,GAAsM,IAAD,MAA1KrD,EAA0K,EAA1KA,MAAOH,EAAmK,EAAnKA,OAAQmC,EAA2J,EAA3JA,mBAAoBsB,EAAuI,EAAvIA,UACpDjnB,GAAMC,EAAAA,EAAAA,GAAe,SAArBD,EAER,EAA+C8jB,IADFhd,EAAAA,EAAAA,YAAWC,EAAAA,GAAhDC,UAAaxJ,KACbymB,EAAR,EAAQA,aAAcG,EAAtB,EAAsBA,qBAChB8C,EAAe,iBAAGjD,QAAH,IAAGA,GAAH,UAAGA,EAAcM,uBAAjB,aAAG,EAAgCf,UAAnC,QAA8C,GAC7D8B,GAAU4B,EAAgBnoB,SAAS,GACnCooB,GAAQ7pB,EAAAA,EAAAA,UAAQ,kBAAM6C,OAAOuJ,OAAOud,GAAW1G,QAAO,SAAC6G,EAAKppB,GAAN,OAAYopB,GAAOppB,EAAI,EAAI,EAA3B,GAA+B,EAArE,GAAyE,CAACipB,IAG1FI,GAAe/pB,EAAAA,EAAAA,UAAQ,WAC3B,OAAKgoB,GAAU6B,EAAQ,EAAU,GAC1BhnB,OAAOsG,KAAKkd,EAAM2D,YAAYpc,QAAO,SAAAuY,GAAS,uBAAIE,EAAM2D,WAAW7D,UAArB,aAAI,EAA6BG,SAASxJ,MAAK,SAAAmN,GAAG,MAAI,WAAYA,CAAhB,GAAlD,GACtD,GAAE,CAAC5D,EAAM2D,WAAYhC,EAAQ6B,IACxB5B,EAAW2B,EAAgBnoB,SAAS,GACpCymB,EAAW0B,EAAgBnoB,SAAS,GAC1C,OAAIooB,EAAQ,EAAU,MACf,SAAC9Q,GAAA,GAAD,CAAMhH,MAAI,EAAc0H,GAAI,EAA5B,UACL,UAACzE,EAAA,EAAD,CAAWlR,GAAI,CAAEuL,OAAQ,QAAzB,WACE,UAACzL,EAAA,EAAD,CAAK6O,UAAS,eAAU4T,EAAMrjB,OAAO,GAAvB,QAAiCwE,MAAM,OAAO1D,GAAI,CAAE2D,QAAS,QAA3E,WACE,SAAC7D,EAAA,EAAD,CAAKD,UAAU,MAAM4O,IAAK8T,EAAM6D,WAAYpmB,GAAI,CAAEuL,OAAQ,IAAK7H,MAAO,OAAQW,IAAK,MACnF,UAACvE,EAAA,EAAD,CAAKE,GAAI,CAAEoE,SAAU,EAAGJ,GAAI,EAAGL,QAAS,OAAQoG,cAAe,SAAUoP,eAAgB,UAAzF,WACE,SAAC7O,EAAA,EAAD,CAAYnN,QAAQ,KAApB,mBAA0BolB,EAAM5b,YAAhC,QAAwC,MACxC,UAAC7G,EAAA,EAAD,CAAK6D,QAAQ,OAAOsB,IAAK,EAAzB,WACE,SAACqF,EAAA,EAAD,CAAYnN,QAAQ,YAApB,SAAiColB,EAAMrjB,OAAO/C,KAAI,SAACkM,EAAIoB,GAAL,OAAW,4BAAgBpB,EAAhB,KAAoB,SAAC,KAAD,CAAcnI,MAAO,IAAzC,IAAgDuJ,EAAK8Y,EAAMrjB,OAAO1B,OAAS,EAAK,KAAO,OAA5E6K,EAAtB,OAElD,SAACgC,GAAA,EAAD,CAAatF,OAAO,UAACjF,EAAA,EAAD,YAClB,SAACwK,EAAA,EAAD,WAAY,SAAC/C,EAAA,EAAD,CAASlK,MAAM,UAAf,SAA0BuB,EAA1B,iCACZ,SAAC0L,EAAA,EAAD,WAAY,SAAC/B,GAAA,EAAD,CAAWF,GAAE,mBAAc+Z,EAAd,QAA4Bha,MAAO,oBAC5D,UAACtI,EAAA,EAAD,CAAKumB,WAAY,EAAGrmB,GAAI,CAAEsmB,QAASR,EAAgBnoB,SAAS,GAAK,GAAM,GAAvE,WACE,SAAC2M,EAAA,EAAD,WAAY,SAAC/C,EAAA,EAAD,CAASlK,MAAM,UAAf,SAA0BuB,EAA1B,iCACZ,SAAC0L,EAAA,EAAD,WAAY,SAAC/B,GAAA,EAAD,CAAWF,GAAE,mBAAc+Z,EAAd,QAA4Bha,MAAO,+BAIlE,SAACtI,EAAA,EAAD,CAAKE,GAAI,CAAE2D,QAAS,OAAQsB,IAAK,GAAjC,SAAuClG,OAAOC,QAAQ6mB,GAAW1pB,KAAI,+BAAE2nB,EAAF,KAAW1J,EAAX,YAAsB,SAAC9P,EAAA,EAAD,CAA0BtK,GAAI,CAAEoE,SAAU,GAAKjH,QAAQ,YAAvD,UAAoE,UAACoK,EAAA,EAAD,CAASvH,GAAI,CAAE0D,MAAO,QAAUrG,MAAO+c,EAAQ,UAAY,YAA3D,WAAyEmM,EAAAA,GAAAA,IAAiBzC,GAAU1J,MAAvJ0J,EAAvC,aAGzE,UAACnc,GAAA,EAAD,CAAa3H,GAAI,CAAE,kBAAmB,CAAEiH,aAAc,IAAOF,WAAS,EAAtE,UACGgf,GAAS,IAAK,SAACjf,EAAA,EAAD,CAAQK,UAAWgd,GAAW,SAAC9c,GAAA,EAAD,KAA2B,SAACD,GAAA,EAAD,IAAcF,QAAS,kBAAM8b,EAAqB,CAAEvlB,KAAM,kBAAmB2kB,OAAAA,EAAQsD,IAAK,GAAnE,EAAyEroB,MAAO8mB,EAAW,YAAc,UAAWwB,SAAS,SAAC,KAAD,CAAiBtnB,KAAM8lB,EAAWc,GAAAA,IAAQD,GAAAA,IAAarW,UAAU,UAA9Q,SAA2R/P,EAA3R,8BACdmnB,GAAS,IAAK,SAACjf,EAAA,EAAD,CAAQK,UAAWid,GAAW,SAAC/c,GAAA,EAAD,KAA2B,SAACD,GAAA,EAAD,IAAcF,QAAS,kBAAM8b,EAAqB,CAAEvlB,KAAM,kBAAmB2kB,OAAAA,EAAQsD,IAAK,GAAnE,EAAyEroB,MAAO+mB,EAAW,YAAc,UAAWuB,SAAS,SAAC,KAAD,CAAiBtnB,KAAM+lB,EAAWa,GAAAA,IAAQD,GAAAA,IAAarW,UAAU,UAA9Q,SAA2R/P,EAA3R,mCAGdqnB,EAAazoB,SAAU,SAACuI,EAAA,WAAD,CAAsBtL,MAAO8pB,EAA7B,UACxB,SAACrb,EAAA,EAAD,CAAalJ,GAAI,CAAE2D,QAAS,OAAQoG,cAAe,SAAU9E,IAAK,GAAlE,SACGghB,EAAa9pB,KAAI,SAAAkmB,GAAS,OACzB,SAACF,GAAD,CAAkCC,OAAQA,EAAQC,UAAWmE,SAASnE,GAAsB1Z,YAAU,EAAC2Z,kBAAgB,GAAhGD,EADE,YA5BZD,EAmCxB,CCzND,IAAMqE,GAAS,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,IAClB,SAASC,GAAT,GAAuG,IAAD,IAArEC,wBAAAA,OAAqE,MAA3C,EAA2C,EAAxCC,EAAwC,EAAxCA,2BAA4BhkB,EAAY,EAAZA,SAC/FhE,GAAMC,EAAAA,EAAAA,GAAe,2BAArBD,EACR,OAAO,SAAC4I,GAAA,EAAD,CAAgBT,WAAS,EAAC1J,MAAOspB,EAA0B,UAAY,UAAW/jB,SAAUA,EACjGmC,MAAO4hB,EAA0B/nB,EAAE,6BAA8B,CAAEioB,IAAKF,IAA6B/nB,EAAE,6BADlG,SAEJ6nB,GAAOtqB,KAAI,SAAC0qB,GAAD,OAAS,SAAC7rB,GAAA,EAAD,CAAoBkM,QAAS,kBAAM0f,EAA2BC,EAAjC,EAA7B,SAAqEA,EAAMjoB,EAAE,6BAA8B,CAAEioB,IAAAA,IAASjoB,EAAE,8BAAzGioB,EAAxB,KAEf,CCHc,SAASC,KACtB,IAAqB7P,GAAiBvR,EAAAA,EAAAA,YAAWC,EAAAA,GAAzCC,UAAaqR,WACbnR,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACFihB,EAAiBhoB,OAAOsG,KAAK4R,GACnC,IAAK8P,EAAevpB,OAAQ,OAAO,KACnC,IAAMya,EAAQ8O,EAAe5qB,KAAI,SAAAub,GAAC,OAAI5R,EAAKS,IAAIuO,GAAAA,GAAAA,YAAkB4C,GAA/B,IAClC,OAAO,UAACxG,EAAA,EAAD,YACL,SAAChI,EAAA,EAAD,WACE,SAACoB,EAAA,EAAD,6BAEF,SAAC7C,EAAA,EAAD,KACA,SAACyB,EAAA,EAAD,UACG+O,EAAM9b,KAAI,SAAA4c,GAAC,OAAI,SAAC,MAAD,CAAmC1H,KAAM0H,GAAlBA,EAAExG,KAAKnW,IAAlC,QAGjB,C,4BCRK4qB,IAAY3a,EAAAA,GAAAA,IAAO,SAAPA,CAAiB,CACjC4a,WAAY,cAGRC,IAAuB7a,EAAAA,GAAAA,IAAO8a,GAAAA,EAAP9a,EAAuB,cAAGzR,MAAH,MAAgB,CAClE2Q,OAAQ,GACRtE,aAAc,EAFoC,IAIrC,SAASmgB,GAAT,GAAsK,IAAD,IAA/IC,OAAU5pB,EAAqI,EAArIA,KAAM6pB,EAA+H,EAA/HA,OAAgBC,GAA+G,EAAvHC,OAAuH,EAA/GD,SAASE,EAAsG,EAAtGA,MAAOC,EAA+F,EAA/FA,UAAWC,EAAoF,EAApFA,WAAcC,EAAsE,EAAtEA,cACtGC,EAAWpS,SAASgS,GAEpBK,EAA4B,aAATrqB,EACnBsqB,EAAYN,EAAQF,EAEpBS,GAAe,SAAChB,GAAD,UAAYM,EAAOW,mBAClCC,GAAkB,SAAClB,GAAD,UAAYe,EAAUE,mBACxCE,IAAgBZ,IAAW,iCAAO,wBAAI,SAACP,GAAD,UAAYO,EAAQU,qBAA/B,eAE3BG,GAAiB,SAACpB,GAAD,WAAYqB,EAAAA,GAAAA,IAAa7I,KAAKQ,OAAM,OAAC2H,QAAD,IAACA,EAAAA,EAAcW,YAAYC,QAA3B,OAAqCb,QAArC,IAAqCA,EAAAA,EAAapI,SAGzGva,EAAQ,GACRyjB,EAAW,GACXvL,OAAW9e,EAEf,GAAI2pB,EACF7K,EAAoB,IAATqK,EAAgBS,EAC3BhjB,GAAQ,UAACuF,EAAA,EAAD,qCAAoC0d,EAAcH,GAAW,oCAAIK,UAAsB/pB,EAAvF,mDAAgJ,uBAAIypB,IAApJ,KAAyKO,KACjLK,GAAW,UAACle,EAAA,EAAD,4BAA2B8d,SACjC,MAAId,EAASC,GAKlB,OAAO,KAJPtK,EAAW,IACXlY,GAAQ,UAACuF,EAAA,EAAD,mCAAkC0d,EAAlC,mDAA8F,uBAAIJ,IAAlG,KAAuHO,KAC/HK,GAAW,UAACle,EAAA,EAAD,8BAA6B8d,IAGzC,CAED,OAAO,UAACK,GAAA,EAAD,CAAOC,SAjBF,UAiBmBvrB,QAAQ,SAAS6C,GAAI,CAClD,sBAAuB,CACrBoE,SAAU,IAFP,UAKJW,EACAyjB,OACarqB,IAAb8e,IAA0B,UAAChI,GAAA,GAAD,CAAMlH,WAAS,EAACC,QAAS,EAAGpK,WAAW,SAAvC,UACxBikB,IAAY,SAAC5S,GAAA,GAAD,CAAMhH,MAAI,EAAV,UACX,SAAC3D,EAAA,EAAD,oBAAgB2S,EAAS0L,QAAQ,GAAjC,UAEF,SAAC1T,GAAA,GAAD,CAAMhH,MAAI,EAAC7J,SAAU,EAArB,UACE,SAAC8iB,GAAD,CAAsB/pB,QAAS0qB,EAAW,cAAgB,gBAAiBptB,MAAOwiB,EAAU5f,MAAM,mBAIzG,C,wICnCc,SAASurB,GAAT,GAAwJ,IAAD,IAA3HC,EAA2H,EAA3HA,WAAqBC,EAAsG,EAA/GhF,QAA+G,IAA5F6C,wBAAAA,OAA4F,MAAlE,EAAkE,MAA/DoC,aAAAA,OAA+D,SAAzC7hB,EAAyC,EAAzCA,QAAyC,IAAhC8hB,YAAAA,OAAgC,MAAlBlgB,EAAAA,EAAkB,EAC9J0U,GAAMyL,EAAAA,GAAAA,GAAYJ,GAChBhY,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACF0R,GAAQ7jB,EAAAA,EAAAA,IAAW,kBAAMC,GAAAA,EAAAA,IAAA,OAAkB6e,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAK4E,OAA7B,GAAsC,QAAC5E,QAAD,IAACA,OAAD,EAACA,EAAK4E,SAC/D8G,GAAoB9lB,EAAAA,EAAAA,cAAY,SAAAjD,GAAQ,OAAI,SAACgpB,GAAA,EAAD,CAAgBjiB,QAASA,EAASlH,GAAI,CAAEuL,OAAQ,QAAhD,SAA2DpL,GAA/D,GAA2F,CAAC+G,IACpItM,GAAQoB,EAAAA,GAAAA,KACd,IAAKwhB,EAAK,OAAO,SAACwL,EAAD,CAAahpB,GAAI,CAAE2D,QAAS,OAAQ4H,OAAQ,OAAQ3H,WAAY,SAAUuV,eAAgB,UAA1F,UACf,SAACrZ,EAAA,EAAD,CAAKD,UAAU,MAAM4O,IAAKG,GAAAA,EAAAA,KAAYka,GAAW9oB,GAAI,CAAE0D,MAAO,MAAO6H,OAAQ,OAAQ+a,QAAS,QAGhG,IAAQxC,EAA4DtG,EAA5DsG,QAAS5kB,EAAmDse,EAAnDte,OAAQsL,EAA2CgT,EAA3ChT,MAAO4e,EAAoC5L,EAApC4L,YAAaC,EAAuB7L,EAAvB6L,SAAUC,EAAa9L,EAAb8L,SACjDC,EAAgB/J,KAAK9a,IAAI8a,KAAK/a,IAAIkiB,EAAkC,EAATznB,GAAasL,GACxEgf,EAAehpB,GAAAA,GAAAA,KAAY4oB,GAC3BprB,EAAUC,EAAAA,GAAAA,MAAwB,SAAAC,GAAG,OAAIsf,EAAI4L,YAAYzrB,SAASO,EAA7B,IACrCb,EAAQW,GAAUyrB,EAAAA,GAAAA,IAAM7uB,EAAM0C,QAAQU,GAASsN,KAAM,KAAOme,EAAAA,GAAAA,IAAM7uB,EAAM0C,QAAQiP,UAAUjB,KAAM,IACtG,OAAO,SAAC0d,EAAD,CAAahpB,GAAI,CAAEuL,OAAQ,QAA3B,UAAqC,SAACme,GAAA,EAAD,CAAoBC,YAAaziB,EAAS0iB,QAASV,EAAnD,UAC1C,UAACppB,EAAA,EAAD,CAAK6D,QAAQ,OAAO4H,OAAO,OAA3B,WACE,UAACzL,EAAA,EAAD,CAAK6O,UAAS,eAAUzP,EAAV,QAAwBc,GAAI,CAAE6pB,SAAU,WAAYzlB,SAAU,EAAGT,QAAS,OAAQoG,cAAe,SAAUnG,WAAY,SAAUuV,eAAgB,UAA/J,WACE,SAAC2Q,GAAA,EAAD,CAAiBtM,IAAKA,EAAtB,UACE,SAAC1d,EAAA,EAAD,CACED,UAAU,MACV4O,IAAG,iBAAE8T,QAAF,IAAEA,OAAF,EAAEA,EAAOwH,UAAUjG,UAAnB,QAA+B,GAClC9jB,GAAI,CAAEoR,GAAI,EAAG4Y,UAAW,OAAQC,SAAU,aAG9C,UAACnqB,EAAA,EAAD,CAAKE,GAAI,CAAE6pB,SAAU,WAAYnmB,MAAO,OAAQ6H,OAAQ,OAAQrG,EAAG,GAAKohB,QAAS,IAAM3iB,QAAS,OAAQwV,eAAgB,gBAAiB+Q,cAAe,QAAxJ,WACE,SAAC9rB,GAAA,EAAD,CAAM4I,KAAK,QAAQjL,OAAO,wCAAcyO,KAAmBnN,MAAO8sB,GAAAA,GAAAA,aAAsB3f,KACvFue,IAAgB,SAAC3qB,GAAA,EAAD,CAAM4I,KAAK,QAAQjL,OAAO,SAACquB,GAAD,CAAcC,QAASf,GAAYzY,EAASyZ,MAAMC,uBAAuBjB,KAAejsB,MAAO,YAAa2C,GAAI,CACzJwqB,SAAU,UAAW,iBAAkB,CACrCA,SAAU,kBAKhB,SAACpsB,GAAA,EAAD,CAAM4I,KAAK,QAAQhH,GAAI,CAAE6pB,SAAU,WAAYY,OAAQ,EAAGja,GAAI,EAAGlE,gBAAiBjP,GAChFtB,OAAO,UAACuO,EAAA,EAAD,CAAYtK,GAAI,CAAE2D,QAAS,OAAQsB,IAAK,GAAKjB,GAAI,EAAG0mB,OAAQ,GAA5D,WACL,SAACC,GAAA,EAAD,CAAkBC,UAAU,MAAM7lB,OAAO,SAACuF,EAAA,EAAD,WAAY,SAAC,KAAD,CAAqB8L,QAASgT,MAA8ByB,oBAAkB,EAAnI,UACE,0BAAOpqB,GAAAA,EAAS2oB,QAElB,UAAC,KAAD,CAAW/rB,MAAOksB,IAAkB/e,EAAQ,eAAYrM,EAAxD,WAAoE2sB,EAAAA,GAAAA,IAAgB,UAACX,GAAAA,GAAAA,cAAuBf,EAAalqB,EAAQqqB,UAA7C,QAA+D,EAAG/oB,GAAAA,GAAAA,KAAY4oB,IAAeI,cAIvL,SAAC1pB,EAAA,EAAD,CAAK6D,QAAQ,OAAOoG,cAAc,SAASoP,eAAe,gBAAgBnZ,GAAI,CAAEkF,EAAG,GAAnF,SACGmkB,EAASltB,KAAI,SAACggB,EAAsB1S,GAAvB,OAAqC,SAACshB,GAAD,CAAmC5O,KAAMA,GAApB1S,EAAI0S,EAAK/f,IAAnE,YAIrB,CACD,SAAS2uB,GAAT,GAA6D,IAAD,IAAlC5O,EAAkC,EAAlCA,KACxB,IAAKA,EAAK1hB,MAAO,OAAO,KACxB,IAAMuwB,EAAQ,oBAAG7O,EAAK8O,aAAR,aAAG,EAAYztB,cAAf,QAAyB,EACjC0tB,EAAS,eAAUnnB,EAAAA,GAAAA,IAAMinB,EAAU,EAAG,IACtCvY,EAAOjS,GAAAA,GAAAA,KAAY2b,EAAK/f,KAC9B,OAAQ,SAAC0D,EAAA,EAAD,CAAK6D,QAAQ,OAAOsB,IAAK,EAAGkmB,aAAa,SAAzC,UACN,UAAC7gB,EAAA,EAAD,CAAYtK,GAAI,CAAEoE,SAAU,EAAGT,QAAS,OAAQsB,IAAK,IAAO5H,MAAQ2tB,EAAQ,UAAME,EAAN,SAAyB,aAAsBrrB,UAAU,OAArI,WACE,SAAC8qB,GAAA,EAAD,CAAkBC,UAAU,MAAM7lB,OAAO,SAACuF,EAAA,EAAD,UAAa6R,EAAK/f,MAAO,SAAC,KAAD,CAAqBga,QAAS+F,EAAK/f,QAAuByuB,oBAAkB,EAA9I,UACE,0BAAOpqB,GAAAA,EAAS0b,EAAK/f,UAEvB,qCAAU0uB,EAAAA,GAAAA,IAAiB3O,EAAK1hB,MAAO+F,GAAAA,GAAAA,KAAY2b,EAAK/f,OAAxD,OAAgEqW,SAGrE,CACD,SAAS2X,GAAT,GAAoE,IAA5CC,EAA2C,EAA3CA,QACdxZ,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACFua,GAASC,EAAAA,EAAAA,GAAUxa,GACnB7B,GAAiBtQ,EAAAA,EAAAA,IAAW,kBAAM4sB,EAAAA,EAAAA,IAAmBjB,EAASe,EAAlC,GAA2C,CAACf,EAASe,IACvF,OAAOpc,GAAiB,SAAC2b,GAAA,EAAD,CAAkBC,UAAU,YAAY7lB,OAAO,SAACuF,EAAA,EAAD,UAAa0E,EAAerI,OAA3E,UAA+F,SAACwK,GAAA,EAAD,CAAS1C,IAAKO,EAAeO,aAAcvP,GAAI,CAAEuL,OAAQ,MAAOggB,UAAW,SAAUjY,WAAY,eAAoC,SAACkY,GAAA,EAAD,GAC7P,C,4BClFc,SAASC,KACtB,IAAQ3lB,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACFuD,GAAWnN,EAAAA,EAAAA,UAAQ,kBACvBiU,EAAAA,GAAAA,GAAmBrK,GAAMgE,QAAO,gBAAIzB,GAAJ,sBAAYtJ,OAAOuJ,OAAOD,GAAI2Q,MAAK,SAAAD,GAAC,OAAKA,EAAE9H,OAAP,GAApC,GADT,GAEvB,CAACnL,IACH,OAAO,SAAC,KAAD,CAAK9F,GAAI,CAAEuQ,IAAK,EAAGC,IAAK,GAAxB,UACL,SAACkb,GAAA,GAAD,CAASvU,QAAS,CAAExB,GAAI,EAAGgW,GAAI,EAAGnd,GAAI,EAAGod,GAAI,GAAK5d,QAAS,EAA3D,SACG3E,EAASlN,KAAI,+BAAEC,EAAF,KAAOqU,EAAP,YACZ,SAACob,GAAD,CAAmBlb,UAAWF,EAAOG,WAAYxU,GAAnCA,EADF,OAInB,CAED,SAASyvB,GAAT,GAAyG,IAAtFlb,EAAqF,EAArFA,UAAWC,EAA0E,EAA1EA,WACtBkb,GAAqBpmB,EAAAA,EAAAA,YAAW0T,IACtC,GAA0B1T,EAAAA,EAAAA,YAAWK,EAAAA,GAA7BD,EAAR,EAAQA,KAAMqS,EAAd,EAAcA,QACNtH,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACF5H,GAASvK,EAAAA,EAAAA,IAAW,kBAAMqS,EAAAA,GAAAA,GAAiBjL,EAAM8K,EAAYC,EAAzC,GAAoD,CAAC/K,EAAM8K,IAC/Emb,GAAiB7vB,EAAAA,EAAAA,UAAQ,kBAAMogB,EAAAA,GAAAA,IAAU3L,GAAW,SAACoI,EAAGiT,GAAJ,OAAgB/P,EAAAA,GAAAA,IAAW,CAAC,UAAWrL,EAAYob,GAAnD,GAA3B,GAA0F,CAACrb,EAAWC,IACrI,IAAK3H,EAAQ,OAAO,SAACH,EAAA,EAAD,IAEpB,IAAQ/D,EAAwBkE,EAAxBlE,MAAO1G,EAAiB4K,EAAjB5K,KAAM2G,EAAWiE,EAAXjE,OACrB,OAAO,UAAC8D,EAAA,EAAD,YACL,SAACjE,GAAA,EAAD,CAAkBC,OAAQzG,IAAQ,SAAC8S,GAAA,EAAD,CAASnK,KAAM,EAAGhH,GAAI,CAAEoR,GAAI,GAAK3C,IAAKpQ,IAAU0G,MAAOA,EAAOC,OAAQA,IAAU,SAACuC,EAAA,EAAD,UAAUvC,OAC5H,SAACyC,EAAA,EAAD,KACA,SAAC2Q,GAAA,GAAD,CAAkBpY,GAAI,CAAEoR,EAAG,GAA3B,SACGrS,OAAOC,QAAQ2R,GAAWxU,KAAI,+BAAE6vB,EAAF,KAAWjT,EAAX,YAC7B,SAAC,MAAD,CAAgC1H,KAAM0H,EAAGR,SAAUJ,EAAUA,EAAQ5R,IAAIwlB,EAAeC,IAAWvxB,WAAQ0D,EAAW0B,UAAWyY,GAAAA,GAC/H2T,UAAWC,KAAKC,UAAUL,KAAwBI,KAAKC,UAAU,CAACvb,EAAYob,KADzDA,EADM,QAMpC,C,wCCtBc,SAASI,GAAT,GAAqG,IAA3EC,EAA0E,EAA1EA,SAA0E,IAAhEtD,aAAAA,OAAgE,SAA1C7hB,EAA0C,EAA1CA,QAA0C,IAAjC8hB,YAAAA,OAAiC,MAAnBlgB,EAAAA,EAAmB,EAC3GwjB,GAASC,EAAAA,GAAAA,GAAUF,GACnB/d,GAAc5P,EAAAA,EAAAA,IAAW,kBAAY,OAAN4tB,QAAM,IAANA,OAAA,EAAAA,EAAQlwB,MAAO2Q,GAAAA,EAAAA,IAAgBuf,EAAOlwB,IAA5C,GAAkD,QAACkwB,QAAD,IAACA,OAAD,EAACA,EAAQlwB,MACpF8sB,GAAoB9lB,EAAAA,EAAAA,cAAY,SAAAjD,GAAQ,OAAI,SAACgpB,GAAA,EAAD,CAAgBnpB,GAAI,CAAEuL,OAAQ,QAAUrE,QAASA,EAAjD,SAA2D/G,GAA/D,GAA2F,CAAC+G,IACpIsd,GAAStoB,EAAAA,EAAAA,UAAQ,kBAAMoS,GAAege,IAAUE,EAAAA,GAAAA,IAAc,CAACle,EAAYxI,MAAM2mB,EAAAA,GAAAA,IAAiBH,IAAjF,GAA4F,CAAChe,EAAage,IACjI,IAAKA,IAAWhe,IAAgBkW,EAAQ,OAAO,SAACwE,EAAD,CAAahpB,GAAI,CAAEuL,OAAQ,QAA3B,UAAqC,SAAC+E,EAAA,EAAD,CAAUnT,QAAQ,cAAc6C,GAAI,CAAE0D,MAAO,OAAQ6H,OAAQ,YACjJ,IAAQS,EAAyBsgB,EAAzBtgB,WAAYsd,EAAagD,EAAbhD,SACpB,OAAO,SAACN,EAAD,CAAahpB,GAAI,CAAEuL,OAAQ,QAA3B,UAAqC,SAACme,GAAA,EAAD,CAAoBC,YAAaziB,EAAS0iB,QAASV,EAAnD,UAC1C,UAACppB,EAAA,EAAD,CAAK6D,QAAQ,OAAO4H,OAAO,OAAO3H,WAAW,UAA7C,WACE,UAAC9D,EAAA,EAAD,CAAK6O,UAAS,eAAUL,EAAYpP,OAAtB,QAAoCc,GAAI,CAAEuL,OAAQ,OAAQse,SAAU,WAAYzlB,SAAU,EAAGT,QAAS,OAAQoG,cAAe,SAAUnG,WAAY,SAAUuV,eAAgB,YAA3L,WACE,SAACuT,GAAA,EAAD,CAAmBnK,MAAOjU,EAA1B,UACE,SAACxO,EAAA,EAAD,CACED,UAAU,MACV4O,IAAKH,EAAYI,OAAO4d,EAAO7hB,WAC/BzK,GAAI,CAAEqE,IAAK,EAAG2lB,UAAW,OAAQC,SAAU,aAG/C,UAACnqB,EAAA,EAAD,CAAKE,GAAI,CAAE6pB,SAAU,WAAYnmB,MAAO,OAAQ6H,OAAQ,OAAQrG,EAAG,GAAKohB,QAAS,IAAM3iB,QAAS,OAAQwV,eAAgB,gBAAiB+Q,cAAe,QAAxJ,WACE,SAAC9rB,GAAA,EAAD,CAAM4I,KAAK,QAAQjL,OAAO,4BAASgR,GAAAA,EAAAA,eAA2Buf,KAAmBjvB,MAAM,YACtF0rB,IAAgB,SAAC3qB,GAAA,EAAD,CAAM4I,KAAK,QAAQjL,OAAO,SAAC,GAAD,CAAcutB,SAAUA,IAAcjsB,MAAO,YAAa2C,GAAI,CACvGwqB,SAAU,UAAW,iBAAkB,CACrCA,SAAU,kBAIhB,SAAC1qB,EAAA,EAAD,CAAKE,GAAI,CAAE6pB,SAAU,WAAYnmB,MAAO,OAAQ6H,OAAQ,OAAQrG,EAAG,GAAKohB,QAAS,IAAM3iB,QAAS,OAAQwV,eAAgB,WAAYvV,WAAY,YAAhJ,SACG0K,EAAYqe,gBAAiB,SAACvuB,GAAA,EAAD,CAAM4I,KAAK,QAAQ3J,MAAM,OAAOtB,OAAO,kCAAUiQ,aAGnF,UAAClM,EAAA,EAAD,CAAK6D,QAAQ,OAAOoG,cAAc,SAAS/J,GAAI,CAAEkF,EAAG,GAApD,WACE,SAAC0nB,GAAD,CAAYvb,KAAMmT,EAAOje,IAAIuO,GAAAA,GAAAA,OAAAA,SAC7B,SAAC8X,GAAD,CAAYvb,KAAMmT,EAAOje,IAAIuO,GAAAA,GAAAA,OAAAA,gBAIpC,CACD,SAAS8X,GAAT,GAAsD,IAAhCvb,EAA+B,EAA/BA,KACpB,IAAKA,EAAKkB,KAAKnW,IAAK,OAAO,KAC3B,IAAM0H,GAAM0O,EAAAA,GAAAA,IAAYnB,EAAK5W,MAAO4W,EAAKoB,KAAOpB,EAAKoB,UAAWtU,EAAJ,GAC5D,OAAQ,SAAC2B,EAAA,EAAD,CAAK6D,QAAQ,OAAOsB,IAAK,EAAGkmB,aAAa,SAAzC,UACN,UAAC7gB,EAAA,EAAD,CAAYtK,GAAI,CAAEoE,SAAU,EAAGT,QAAS,OAAQsB,IAAK,GAAKpF,UAAU,OAApE,WACE,SAAC8qB,GAAA,EAAD,CAAkBC,UAAU,MAAM7lB,OAAO,SAACuF,EAAA,EAAD,UAAa+G,EAAKkB,KAAKnW,KAAOoE,GAAAA,GAAAA,UAAiB6Q,EAAKkB,KAAKnW,OAAgDyuB,oBAAkB,EAApK,UACE,0BAAOpqB,GAAAA,EAAS4Q,EAAKkB,KAAKnW,UAE5B,0BAAO0H,QAGZ,CACD,SAASsmB,GAAT,GAAgE,IAAxCd,EAAuC,EAAvCA,SACdzY,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACFua,GAASC,EAAAA,EAAAA,GAAUxa,GACnB7B,GAAiBtQ,EAAAA,EAAAA,IAAW,kBAAM4sB,EAAAA,EAAAA,IAAmBhC,EAAWzY,EAASyZ,MAAMC,uBAAuBjB,GAAY,GAAI8B,EAA1F,GAAmG,CAAC9B,EAAU8B,IAChJ,OAAOpc,GAAiB,SAAC2b,GAAA,EAAD,CAAkBC,UAAU,YAAY7lB,OAAO,SAACuF,EAAA,EAAD,UAAa0E,EAAerI,OAA3E,UAA+F,SAACwK,GAAA,EAAD,CAAS1C,IAAKO,EAAeO,aAAcvP,GAAI,CAAEuL,OAAQ,MAAOggB,UAAW,SAAUjY,WAAY,eAAoC,SAACkY,GAAA,EAAD,GAC7P,C,gBC9Cc,SAASqB,GAAT,GAAmG,IAAvE9uB,EAAsE,EAAtEA,MAAO+uB,EAA+D,EAA/DA,aAAcC,EAAiD,EAAjDA,aAAcnqB,EAAmC,EAAnCA,SAC5E,GAAgE8C,EAAAA,EAAAA,YAAWC,EAAAA,GAAnEC,UAAkB+c,EAA1B,EAAqBvmB,IAAmB4wB,EAAxC,EAAwCA,kBAChBrG,EAA8BjE,GAAgBC,GAA9DE,aAAgB8D,wBAChB9V,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACFqS,GAAcxd,EAAAA,EAAAA,YAAWK,EAAAA,GAEvBD,EAAkBod,EAAlBpd,KAAMqS,EAAY+K,EAAZ/K,QACd,GAA4BrV,EAAAA,EAAAA,eAAS3E,GAArC,eAAO8uB,EAAP,KAAeC,EAAf,KACMC,GAAQ/pB,EAAAA,EAAAA,cAAY,kBAAM8pB,OAAU/uB,EAAhB,GAA4B,CAAC+uB,IAEjDE,GAAahqB,EAAAA,EAAAA,cAAY,WACxBiqB,OAAOC,QAAQ,wDACpB1Q,EAAAA,GAAAA,SAAoB,SAAApT,GAClB,IAAM+jB,EAAMznB,EAAKS,IAAIuO,GAAAA,GAAAA,IAAUtL,GAAGsT,IAAIriB,MAClC8yB,GAAK1c,EAAS6I,KAAKva,IAAIouB,EAAK,CAAEjE,UAAUkE,EAAAA,EAAAA,IAAoB7K,IACjE,IACD9R,EAAS4c,QAAQtuB,IAAI2G,EAAKS,IAAIuO,GAAAA,GAAAA,OAAAA,IAAiBra,MAAQ,CAAE6uB,UAAUkE,EAAAA,EAAAA,IAAoB7K,KACxF,GAAE,CAACA,EAAc7c,EAAM+K,IAElB6c,GAAsBxxB,EAAAA,EAAAA,UAAQ,WAClC,IAAMyxB,GAAY,WAAQzK,GAE1B,OADK4J,IAAca,EAAaxV,aAAUha,GACnCwvB,CACR,GAAE,CAACzK,EAAa4J,IAGXc,GAAW1xB,EAAAA,EAAAA,UAAQ,kBAAM0gB,EAAAA,GAAAA,KAAgB,SAAAkH,GAAO,OACpD,SAAC7O,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,EAAf,UACE,SAACiT,GAAD,CAAkBG,cAAY,EAACjF,QAASA,EAAS+E,WAAY/iB,EAAKS,IAAIuO,GAAAA,GAAAA,IAAUgP,GAAShH,IAAIriB,MAAOksB,wBAAyBA,EAAyBzf,QAAS,WAC7J,IAAM2mB,EAAQb,EAAkBlJ,GAC1BgK,EAAQhoB,EAAKS,IAAIuO,GAAAA,GAAAA,IAAUgP,GAAShH,IAAIriB,MAC9CyyB,EAAU,CAAEW,MAAOA,IAAUC,EAAQD,OAAQ1vB,EAAW2vB,MAAAA,GACzD,KALoBhK,EAD6B,GAA7B,GAOb,CAAChe,EAAMonB,EAAWF,EAAmBrG,IAEjD,IAAKxO,EAAS,OAAO,KACrB,IAAM4V,EAAoBnR,EAAAA,GAAAA,OAAkB,SAAAkH,GAAO,OAAIhe,EAAKS,IAAIuO,GAAAA,GAAAA,IAAUgP,GAAShH,IAAIriB,QAAU0d,EAAQ5R,IAAIuO,GAAAA,GAAAA,IAAUgP,GAAShH,IAAIriB,KAAjF,KAA2FqL,EAAKS,IAAIuO,GAAAA,GAAAA,OAAAA,IAAiBra,QAAU0d,EAAQ5R,IAAIuO,GAAAA,GAAAA,OAAAA,IAAiBra,MAE/M,OAAO,SAACyW,EAAA,EAAD,WACL,UAAC,EAAAd,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,CAAUnT,QAAQ,cAAcuG,MAAM,OAAO6H,OAAQ,MAAzE,UACG0hB,IAAU,SAACe,GAAD,CAAsBf,OAAQA,EAAQtG,wBAAyBA,EAAyB9Y,QAASsf,KAC5G,UAACjkB,EAAA,EAAD,YACE,UAAC,KAAD,CAAKvF,QAAQ,OAAOsB,IAAK,EAAGjF,GAAI,CAAEmJ,GAAI,GAAK8kB,SAAS,OAApD,eACa9vB,IAAVJ,IAAuB,SAACwJ,EAAA,EAAD,CAASlK,MAAM,OAAf,UAAsB,SAACiN,EAAA,EAAD,WAAY,kCAAUvM,EAAQ,EAAGgwB,EAAoB,cAAgB,WACnH,SAACG,GAAD,CAAWH,kBAAmBA,KAC9B,SAAC,KAAD,CAAK/tB,GAAI,CAAEoE,SAAU,EAAGT,QAAS,OAAQwV,eAAgB,eAEzD,SAACrS,EAAA,EAAD,CAAQE,KAAK,QAAQ3J,MAAM,UAAU6J,QAASkmB,EAAYxqB,SAAUA,GAAYmrB,EAAhF,yBACChB,MAEH,UAAC9X,GAAA,GAAD,CAAMlH,WAAS,EAACC,QAAS,EAAGhO,GAAI,CAAEmJ,GAAI,GAAKgO,QAAS,CAAExB,GAAI,EAAGgW,GAAI,EAAGnd,GAAI,EAAGD,GAAI,GAA/E,WACE,SAAC0G,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,EAAf,UACE,SAACyW,GAAD,CAAgBrD,cAAY,EAACsD,SAAUvmB,EAAKS,IAAIuO,GAAAA,GAAAA,OAAAA,IAAiBra,UAElEmzB,MAEH,SAAC7nB,EAAA,WAAD,CAAsBtL,MAAOizB,EAA7B,UACE,SAACjC,GAAD,aAKT,CACD,SAASyC,GAAT,GAAmF,IAAD,IAA7DH,kBAAAA,OAA6D,SACxEjoB,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACFqoB,EAAyD,CAAC,EAOhE,OANAvR,EAAAA,GAAAA,SAAoB,SAAAkH,GAClB,IAAM3kB,EAAM2G,EAAKS,IAAIuO,GAAAA,GAAAA,IAAUgP,GAAS3kB,KAAK1E,MACxC0E,IACDgvB,EAAWhvB,GAAMgvB,EAAWhvB,GAAMqiB,KAAKsC,GACtCqK,EAAWhvB,GAAO,CAAC2kB,GACzB,KACM,8BAAG/kB,OAAOC,QAAQmvB,GAAY/uB,MAAK,iCAAMgvB,GAAN,2CAA6C5wB,OAAS4wB,EAAS5wB,MAA/D,IAAuErB,KAAI,+BAAEC,EAAF,KAAOiyB,EAAP,YACnH,SAACC,GAAD,CAAoBlM,OAAQhmB,EAAK2xB,kBAAmBA,EAAmBM,QAASA,GAAjEjyB,EADoG,KAItH,CACD,SAASkyB,GAAT,GAAuJ,IAAD,EAAlIlM,EAAkI,EAAlIA,OAAkI,IAA1H2L,kBAAAA,OAA0H,SAA/FM,EAA+F,EAA/FA,QAC/CE,GAAgB7vB,EAAAA,EAAAA,IAAW,kBAAMC,GAAAA,EAAAA,IAAkByjB,EAAxB,GAAiC,IAClE,IAAKmM,EAAe,OAAO,KAC3B,IAAMC,EAAWH,EAAQ7wB,OACnBixB,EAAY1vB,OAAOsG,KAAKkpB,EAAcrI,YAAY/pB,KAAI,SAACimB,GAAD,OAAYoE,SAASpE,EAArB,IAA8BtY,QAAO,SAAAwb,GAAM,OAAIA,GAAUkJ,CAAd,IACvG,OAAO,SAAC,KAAD,WACL,SAACE,GAAA,EAAD,CAAoBH,cAAeA,EAAeC,SAAUA,EAA5D,UACE,SAACjnB,EAAA,EAAD,CAASlK,MAAO0wB,EAAoB,UAAY,UAAhD,UAA4D,UAACzjB,EAAA,EAAD,WACzD+jB,EAAQlyB,KAAI,SAAA2nB,GAAO,OAAIyC,EAAAA,GAAAA,IAAiBzC,EAArB,IADsC,cACLyK,EAAc5nB,YADT,QACiB,GAC1E8nB,EAAUtyB,KAAI,SAAA4c,GAAC,OAAI,SAACxR,EAAA,EAAD,CAASvH,GAAI,CAAEmI,GAAI,IAAe9K,MAAM,UAAxC,SAAmD0b,GAApBA,EAAnC,YAIvB,CAED,SAASiV,GAAT,GAAyK,IAAD,IAAxIf,OAAUa,EAA8H,EAA9HA,MAAOD,EAAuH,EAAvHA,MAASlH,EAA8G,EAA9GA,wBAAyB9Y,EAAqF,EAArFA,QACzEgD,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACkB8R,GAAmBjd,EAAAA,EAAAA,YAAWC,EAAAA,GAAhDC,UAAaxJ,IACfuyB,GAAUvrB,EAAAA,EAAAA,cAAY,WACrBiqB,OAAOC,QAAQ,2DACpBzc,EAAS6I,KAAKva,IAAI2uB,EAAO,CAAExE,UAAUkE,EAAAA,EAAAA,IAAoB7K,KACzD9U,IACD,GAAE,CAACigB,EAAOjd,EAAU8R,EAAc9U,IAEnC,OAAO,SAACgC,GAAA,EAAD,CAAcjC,OAAQkgB,EAAOjgB,QAASA,EAAS+gB,eAAgB,CAAE3E,SAAU4D,EAAQ,KAAO,MAA1F,UACL,SAAC/kB,EAAA,EAAD,WACE,UAACI,EAAA,EAAD,CAAalJ,GAAI,CAAE2D,QAAS,OAAQwV,eAAgB,SAAUvV,WAAY,UAAWqB,IAAK,EAAGsG,OAAQ,QAArG,UACGsiB,IAAS,SAAC,KAAD,CAAKgB,SAAU,IAAf,UAAoB,SAACC,GAAA,EAAD,CAAcjG,WAAYgF,EAAOlH,wBAAyBA,EAAyBoI,YAAU,EAACC,UAAQ,MACnInB,IAAS,SAAC,KAAD,CAAKlqB,QAAQ,OAAOS,SAAU,IACvCypB,IAAS,SAAC,KAAD,CAAKlqB,QAAQ,OAAOC,WAAW,SAASuV,eAAe,SAAvD,UAAgE,SAACrS,EAAA,EAAD,CAAQI,QAASynB,EAAS3uB,GAAI,CAAE2D,QAAS,QAAzC,UAAmD,SAACsrB,GAAA,EAAD,CAAcjvB,GAAI,CAAEkvB,SAAU,UAC1JrB,IAAS,SAAC,KAAD,CAAKlqB,QAAQ,OAAOS,SAAU,KACxC,SAAC,KAAD,CAAKyqB,SAAU,IAAf,UAAoB,SAACC,GAAA,EAAD,CAAcjG,WAAYiF,EAAOnH,wBAAyBA,EAAyBoI,YAAU,EAACC,UAAQ,YAIjI,C,yKCzHc,SAASG,GAAT,GAA4F,IAAvEC,EAAsE,EAAtEA,UAAWC,EAA2D,EAA3DA,SAAUC,EAAiD,EAAjDA,YAAiD,IAApC1sB,SAAAA,OAAoC,SAChGhE,GAAMC,EAAAA,EAAAA,GAAe,CAAC,0BAA2B,OAAjDD,EACR,GAAwCkE,EAAAA,EAAAA,WAAS,GAAjD,eAAOysB,EAAP,KAAqBC,EAArB,KACA,GAA8B1sB,EAAAA,EAAAA,WAAS,GAAvC,eAAO2sB,EAAP,KAAgBC,EAAhB,KACQ5pB,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACFuR,EAAW,CAAC,MAAO,KAAM,MAAO,SAAU,YAAa,WAAY,QAAS,aACzC,aAArCvR,EAAKS,IAAIuO,GAAAA,GAAAA,YAAkBra,OAAsB4c,EAASmK,KAAK,iBACnEnK,EAASmK,KAAT,UAAiB1b,EAAKS,IAAIuO,GAAAA,GAAAA,SAAera,MAAzC,UAEA,OAAsCyB,EAAAA,EAAAA,UAAQ,WAAO,IAAD,IAClD,IAAKkzB,EAAW,MAAO,CAAEO,YAAa,KAAMC,aAAc,MAC1D,IAFkD,EAG5CC,EADST,EAAUtpB,KAAK3J,KAAI,gBAAU2zB,EAAV,EAAGr1B,MAAH,MAA4B,CAAE4f,EAA9B,EAAa4F,KAAoB6P,EAAAA,EAAjC,IACE1wB,MAAK,SAAC4C,EAAGC,GAAJ,OAAUD,EAAEqY,EAAIpY,EAAEoY,CAAlB,IACnC0V,EAAuB,GAJqB,WAK9BF,GAL8B,IAKlD,2BAAiC,CAE/B,IAFgC,IAAvBG,EAAsB,QAC3BC,OAAuB,EACnBA,EAAOF,EAAYG,OACzB,GAAID,EAAKH,EAAIE,EAAMF,EAAG,CACpBC,EAAYvO,KAAKyO,GACjB,KACD,CAEHF,EAAYvO,KAAKwO,EAClB,CAdiD,gCAmB9C,UAAAD,EAAY,UAAZ,eAAgB1V,MAAhB,UAAsBwV,EAAY,UAAlC,aAAsB,EAAgBxV,KACxCwV,EAAY,GAAGprB,IAAMsrB,EAAY,GAAGD,GACtCC,EAAY/U,SAAQ,SAAAX,GAAOA,EAAE5V,IAAM4V,EAAEyV,CAAG,IAExC,IAAMF,EAAe,CACnBnW,QAASsW,EAAY5zB,KAAI,kBAAc,CAAd,EAAGke,EAAH,EAAMyV,EAAN,IACzBK,QAASN,EAAY1zB,KAAI,kBAAc,CAAd,EAAGke,EAAH,EAAMyV,EAAN,KAE3B,MAAO,CAAEH,YAAaE,EAAaD,aAAAA,EACpC,GAAE,CAACR,IA5BIO,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,aA8BrB,OAAO,UAAC1e,EAAA,EAAD,YACL,SAAChI,EAAA,EAAD,WACE,UAAC+L,GAAA,GAAD,CAAMlH,WAAS,EAACC,QAAS,EAAGpK,WAAW,SAAvC,WACE,SAACqR,GAAA,GAAD,CAAMhH,MAAI,EAAV,UACE,SAAC3D,EAAA,EAAD,UAAc1L,EAAd,uCAEF,SAACqW,GAAA,GAAD,CAAMhH,MAAI,EAAV,UACE,UAACzG,GAAA,EAAD,CAAgBR,KAAK,QAAQjC,MAAOsqB,EAAW7uB,GAAAA,GAAAA,IAAW6uB,GAAYzwB,EAA1B,sCAC1CvB,MAAOgyB,EAAW,UAAY,UAC9BzsB,SAAUA,EAFZ,WAIE,SAAC5H,GAAA,EAAD,CAAUkM,QAAS,WAAQooB,EAAY,GAAK,EAA5C,SAA+C1wB,EAA/C,sCACA,SAAC6I,EAAA,EAAD,IACC4P,EAASlb,KAAI,SAAAi0B,GAAI,OAAI,SAACp1B,GAAA,EAAD,CAAqBkM,QAAS,WAAQooB,EAAYc,EAAc,EAAhE,SAAmE5vB,GAAAA,GAAAA,IAAW4vB,IAA/DA,EAAnB,UAGtB,SAACnb,GAAA,GAAD,CAAMhH,MAAI,EAAC7J,SAAU,EAArB,UACE,SAACisB,GAAA,EAAD,CAASzF,UAAU,MAAM7lB,MAAM,yMAA/B,UACE,SAACurB,GAAA,EAAD,UAGDV,IAAgB,SAAC3a,GAAA,GAAD,CAAMhH,MAAI,EAAV,UACjB,SAACnH,EAAA,EAAD,CAAQE,KAAK,QAAQG,UAAWsoB,GAAU,SAACroB,GAAA,EAAD,KAAe,SAACC,GAAA,EAAD,IACvDhK,MAAOoyB,EAAU,UAAY,YAC7BvoB,QAAS,kBAAMwoB,GAAYD,EAAlB,EAFX,SAEwC7wB,EAFxC,oDAICgxB,IAAgB,SAAC3a,GAAA,GAAD,CAAMhH,MAAI,EAAV,UACjB,SAACnH,EAAA,EAAD,CAAQE,KAAK,QAAQ3J,MAAM,OAAO8J,WAAW,SAACopB,GAAA,EAAD,IAAcrpB,QAAS,kBAAMsoB,GAAiBD,EAAvB,EAApE,SAA2G3wB,EAA3G,uDAIH+wB,IAAe,SAACloB,EAAA,EAAD,IACjB2nB,KAAeO,IAAe,UAACzmB,EAAA,EAAD,YAC7B,SAACiM,GAAA,EAAD,CAAUC,KAAMwa,GAAgBL,EAAhC,UACE,SAACzmB,EAAA,EAAD,CAAU9I,GAAI,CAAEwQ,GAAI,GAApB,UACE,UAACtH,EAAA,EAAD,YACE,SAACoB,EAAA,EAAD,wBACA,SAACkmB,GAAD,CAAa1qB,KAAI,OAAE8pB,QAAF,IAAEA,OAAF,EAAEA,EAAcnW,WACjC,SAACnP,EAAA,EAAD,wBACA,SAACkmB,GAAD,CAAa1qB,KAAI,OAAE8pB,QAAF,IAAEA,OAAF,EAAEA,EAAcO,kBAIvC,SAACM,GAAD,CAAOd,YAAaA,EAAae,SAAUtB,EAAUsB,SAAUC,UAAWvB,EAAUuB,UAAWlB,QAASA,SAG7G,CACD,IAAMmB,IAAWvkB,EAAAA,GAAAA,IAAO,WAAPA,CAAmB,CAClC3I,MAAO,OACPujB,WAAY,YACZ4J,OAAQ,WACRC,UAAW,QAEb,SAASN,GAAT,GAAoD,IAA7B1qB,EAA4B,EAA5BA,KACrB,OAAO,SAAC8qB,GAAD,CAAUG,UAAQ,EAACt2B,MAAOyxB,KAAKC,UAAUrmB,GAAOoB,QAAS,SAAA7D,GAC9D,IAAM8K,EAAS9K,EAAE8K,OACjBA,EAAO6iB,eAAiB,EACxB7iB,EAAO8iB,aAAe9iB,EAAO1T,MAAM+C,MACpC,GACF,CACD,SAASizB,GAAT,GAKI,IAAD,IALcd,EAKd,EALcA,YAAae,EAK3B,EAL2BA,SAAUC,EAKrC,EALqCA,UAAWlB,EAKhD,EALgDA,QAMzC7wB,GAAMC,EAAAA,EAAAA,GAAe,2BAArBD,EACFsyB,EAAe1wB,GAAAA,GAAAA,KAAA,UAAYkwB,EAASne,YAArB,aAAY,EAAenW,KAC1C+0B,EAAY3wB,GAAAA,GAAAA,KAAA,UAAYmwB,EAAUpe,YAAtB,aAAY,EAAgBnW,KAC9C,OAAO,SAACg1B,GAAA,EAAD,CAAqB1tB,MAAM,OAAO6H,OAAQ,IAA1C,UACL,UAAC8lB,GAAA,EAAD,CAAevrB,KAAM6pB,EAArB,WACE,SAAC2B,GAAA,EAAD,CAAeC,gBAAgB,SAC/B,SAACC,GAAA,EAAD,CAAOC,QAAQ,IAAI1R,MAAM,SAAStN,KAAMye,EAAcQ,OAAQ,CAAC,OAAQ,QAASC,KAAM,CAAEC,KAAM,SAAWn0B,KAAK,SAASo0B,cAAe,SAAA9Y,GAAC,OAAIA,EAAI,IAAQA,EAAE4P,UAAY5P,EAAE4P,QAAQ,EAAxC,KACvI,SAACmJ,GAAA,EAAD,CAAOnrB,KAAK,MAAM+qB,OAAQ,CAAC,OAAQ,QAASjf,KAAM0e,EAAWY,eAAe,EAAOJ,KAAM,CAAEC,KAAM,SAAWn0B,KAAK,YACjH,SAACu0B,GAAA,EAAD,CAAOP,QAAQ,IAAI3S,MAAO,CAAC,EAAG,OAC9B,SAACmT,GAAA,EAAD,KACA,SAACC,GAAA,EAAD,CAASvrB,KAAM/H,EAAF,yCAAwB6yB,QAAQ,IAAIG,KAAK,UAAUO,MAAI,EAACC,SAAS,UAAUC,mBAAmB,IAC1G5C,IAAW,SAAC6C,GAAA,EAAD,CAAM3rB,KAAM/H,EAAF,6CAA4B6yB,QAAQ,MAAMc,OAAO,UAAU90B,KAAK,aAAa+0B,cAAY,EAACC,YAAa,EAAGJ,mBAAmB,QAGxJ,CCnIM,IAAMK,GAAkC,CAAC,QAAS,SAAU,WAEpD,SAASC,GAAT,GAEX,IAAD,IAF6C/vB,SAAAA,OAE7C,SACOhE,GAAMC,EAAAA,EAAAA,GAAe,YAArBD,EAER,EAAiE8jB,IADpBhd,EAAAA,EAAAA,YAAWC,EAAAA,GAAhDC,UAAaxJ,KACGiE,EAAxB,EAAQwiB,aAAgBxiB,aAAgB2iB,EAAxC,EAAwCA,qBAExC,OAAO,SAAC,KAAD,CAAKrf,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,EAAhD,SACJytB,GAAgCv2B,KAAI,SAAA2nB,GACnC,IAAM8O,EAASvyB,EAAayjB,GAAStmB,OACrC,OAAO,UAAC,KAAD,YACL,SAACiK,EAAA,EAAD,KACA,UAACyB,EAAA,EAAD,CAAalJ,GAAI,CAAEgQ,GAAI,GAAvB,WACE,UAAC,KAAD,CAAKhQ,GAAI,CAAE2D,QAAS,OAAQsB,IAAK,EAAGrB,WAAY,SAAUuF,GAAI,GAA9D,WACE,SAACwhB,GAAA,EAAD,CAAkBC,UAAU,MAAM7lB,OAAO,SAACuF,EAAA,EAAD,UAAa1L,EAAE,YAAD,OAAaklB,MAApE,UACE,2BAAOyC,EAAAA,GAAAA,IAAiBzC,QAE1B,SAAC,KAAD,CAAK1f,SAAU,EAAf,UACE,SAACmD,EAAA,EAAD,CAASlK,MAAM,OAAf,SAAuBu1B,EAAM,UAAMA,EAAN,wBAE/B,SAAC9rB,EAAA,EAAD,CAAQzJ,MAAM,QAAQ2J,KAAK,QAAQpE,UAAWvC,EAAayjB,GAAStmB,QAAUoF,EAAU5C,GAAI,CAAE6yB,IAAK,EAAGriB,IAAK,GACzGtJ,QAAS,kBAAM8b,EAAqB,CAAEvlB,KAAM,cAAeqmB,QAAAA,GAAlD,EADX,UAEE,SAACrP,GAAA,EAAD,UAGJ,SAACQ,GAAA,GAAD,CAAMlH,WAAS,EAACC,QAAS,EAAzB,SACGmc,GAAAA,GAAAA,cAAuBrG,GAAS3nB,KAAI,SAACitB,EAAa3f,GACjD,IAAMzL,EAAUC,EAAAA,GAAAA,MAAwB,SAAAC,GAAG,OAAIkrB,EAAYzrB,SAASO,EAAzB,IACrCb,EAAQgD,EAAayjB,GAASnmB,SAASyrB,GAA/B,OACVprB,QADU,IACVA,EAAAA,EAAW,UACX,YACJ,OAAO,SAACiX,GAAA,GAAD,CAAMhH,MAAI,EAAmB7J,SAAU,EAAGuR,GAAKlM,EAAI,GAAiB,WAAZqa,EAAwB,OAAI3lB,EAApF,UACL,SAACwsB,GAAA,EAAD,CAAkBC,UAAU,MAAM7lB,OAAO,SAACuF,EAAA,EAAD,WAAY,6BAAQ,SAAC,KAAD,CAAqB8L,QAASgT,QAAuCyB,oBAAkB,EAApJ,UACE,SAAC/jB,EAAA,EAAD,CAAQC,WAAS,EAACC,KAAK,QAAQ3J,MAAOA,EAAO2C,GAAI,CAAEkvB,SAAU,QAAS3jB,OAAQ,OAAQ2e,cAAetnB,EAAW,YAASzE,EAAW20B,OAAQlwB,EAAW,YAASzE,GAC9J+I,QAAS,kBAAM8b,EAAqB,CAAEvlB,KAAM,cAAeqmB,QAAAA,EAASsF,YAAAA,GAA3D,EADX,SAEG3oB,GAAAA,EAAS2oB,QAJOA,EAQxB,WA7BUtF,EAiClB,KAEJ,C,sBCjDc,SAASiP,GAAT,GAAuE,IAAD,IAA5CnwB,SAAAA,OAA4C,SAC3EhE,GAAMC,EAAAA,EAAAA,GAAe,2BAArBD,EACkB+jB,GAAmBjd,EAAAA,EAAAA,YAAWC,EAAAA,GAAhDC,UAAaxJ,IACb0J,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACR,EAAgE4c,GAAgBC,GAAxDrL,EAAxB,EAAQuL,aAAgBvL,YAAe0L,EAAvC,EAAuCA,qBACjCzL,GAAiBnU,EAAAA,EAAAA,cAAY,SAACkU,GAAD,OAAwC0L,EAAqB,CAAE1L,YAAAA,GAA/D,GAA+E,CAAC0L,IAE7G3L,GAAWnb,EAAAA,EAAAA,UAAQ,WACvB,IAAMmb,EAAsB,CAAC,MAAO,KAAM,MAAO,SAAU,YAAa,WAAY,QAAS,aACnC,aAAtDvR,EAAKS,IAAIuO,GAAAA,GAAAA,YAAkBra,OAAuC4c,EAASmK,KAAK,iBACpF,IAAM/I,EAAU3S,EAAKS,IAAIuO,GAAAA,GAAAA,SAAera,MAExC,OADA4c,EAASmK,KAAT,UAAiB/I,EAAjB,UACOpB,CACR,GAAE,CAACvR,IAGJ,OAAO,UAAChG,EAAA,EAAD,YACL,SAACoR,EAAA,EAAD,WACE,UAAChI,EAAA,EAAD,CAAalJ,GAAI,CAAE2D,QAAS,OAAQsB,IAAK,EAAGkU,eAAgB,iBAA5D,WACE,SAAC7O,EAAA,EAAD,UAAa1L,EAAb,iDACA,SAACyL,GAAA,EAAD,CAAatF,OAAO,SAACuF,EAAA,EAAD,UAAa1L,EAAb,0DAGxB,SAACkB,EAAA,EAAD,CAAK6D,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,GAAhD,UACE,SAACmS,GAAA,EAAD,CAAgBC,SAAUA,EAAUC,YAAaA,EAAaC,eAAgBA,EAAgB3U,SAAUA,QAG7G,C,sGCfc,SAASowB,GAAT,GAAoE,IAAD,IAA5CpwB,SAAAA,OAA4C,SACxEhE,GAAMC,EAAAA,EAAAA,GAAe,2BAArBD,EACkB+jB,GAAmBjd,EAAAA,EAAAA,YAAWC,EAAAA,GAAhDC,UAAaxJ,IACrB,EAAoEsmB,GAAgBC,GAA5DsQ,EAAxB,EAAQpQ,aAAgBoQ,gBAAmBjQ,EAA3C,EAA2CA,qBACnCnS,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACR,GAAgCqiB,EAAAA,EAAAA,IAAa,GAA7C,eAAOxmB,EAAP,KAAa2W,EAAb,KAAqBxV,EAArB,KACA,GAA2EslB,EAAAA,GAAAA,GAAW,cAAeC,GAAAA,IAArG,eAA4BC,EAA5B,KAASC,kBAA4CC,EAArD,KAEMD,GAAoBp3B,EAAAA,EAAAA,UAAQ,kBAAM,QAAI,IAAIwe,IAAI2Y,IAAwBvpB,QAAO,SAAA0pB,GAAE,OAAI3iB,EAASyZ,MAAM/jB,IAAIitB,EAAvB,GAAnD,GAAgF,CAAC3iB,EAAUwiB,IACvHI,GAAUrwB,EAAAA,EAAAA,cAAY,SAACkwB,GAAD,OAAuCC,EAAmB,CAAED,kBAAAA,GAA5D,GAAkF,CAACC,IAEzGG,GAActwB,EAAAA,EAAAA,cAAY,SAACuwB,EAAWC,GAC1C,IAAMC,GAAG,QAAOP,GACZt1B,EAAU61B,EAAIF,GAClBE,EAAIC,OAAOH,EAAW,GACtBE,EAAIC,OAAOF,EAAS,EAAG51B,GACvBy1B,EAAQI,EACT,GAAE,CAACP,EAAmBG,IACjBM,GAAa3wB,EAAAA,EAAAA,cAAY,SAACuwB,GAC9B,IAAME,GAAG,QAAOP,GAChBO,EAAIC,OAAOH,EAAW,GACtBF,EAAQI,EACT,GAAE,CAACP,EAAmBG,IACjBO,GAAU5wB,EAAAA,EAAAA,cAAY,SAACowB,GAAD,OAAsBC,EAAQ,GAAD,gBAAKH,GAAL,CAAwBE,IAArD,GAA2D,CAACF,EAAmBG,IACrGQ,GAAY7wB,EAAAA,EAAAA,cAAY,kBAAMqwB,EAAQ,GAAd,GAAmB,CAACA,IAE5CS,GAAWh4B,EAAAA,EAAAA,UAAQ,WACvB,IAAIg4B,EAAWZ,EAAkB91B,OAC3BO,EAAQu1B,EAAkBa,QAAQxR,GAExC,OADI5kB,GAAS,IAAGm2B,EAAWn2B,GACpBm2B,CACR,GAAE,CAACvR,EAAc2Q,IACZc,GAAqBl4B,EAAAA,EAAAA,UAAQ,WACjC,OAAO2U,EAASyZ,MAAMjlB,KAAK7H,OAAS,EAAI02B,CACzC,GAAE,CAACA,EAAUrjB,IACRwjB,GAAcn4B,EAAAA,EAAAA,UAAQ,WAC1B,OAAO2U,EAASyZ,MAAMjlB,KAAK7H,OAAS81B,EAAkB91B,MACvD,GAAE,CAAC81B,EAAmBziB,IAEvB,OAAO,UAAC/Q,EAAA,EAAD,CAAK6D,QAAQ,OAAOsB,IAAK,EAAzB,WACL,SAAC4K,GAAA,EAAD,CAAcjC,KAAMlB,EAAMmB,QAASA,EAAS+gB,eAAgB,CAAE3E,SAAU,MAAxE,UAAgF,UAACnhB,EAAA,EAAD,YAC9E,SAACI,EAAA,EAAD,WACE,UAAC+L,GAAA,GAAD,CAAMlH,WAAS,EAACC,QAAS,EAAzB,WACE,SAACiH,GAAA,GAAD,CAAMhH,MAAI,EAAC7J,SAAU,EAArB,UACE,SAACkG,EAAA,EAAD,CAAYnN,QAAQ,KAApB,SAA0ByB,EAA1B,oDAEF,SAACqW,GAAA,GAAD,CAAMhH,MAAI,EAACjO,GAAI,CAAEwQ,IAAK,GAAtB,UACE,SAACT,EAAA,EAAD,CAAa7I,QAAS2G,YAI5B,SAACpG,EAAA,EAAD,KACA,UAACyB,EAAA,EAAD,YACE,SAACgI,EAAA,EAAD,CAAWlR,GAAI,CAAEwQ,GAAI,GAArB,UACE,UAACtH,EAAA,EAAD,YACE,SAACoB,EAAA,EAAD,CAAYmb,cAAY,EAAxB,UAAyB,SAACN,GAAA,EAAD,CAAOvmB,EAAGA,EAAGwmB,QAAQ,0BAArB,mKACzB,SAAC9a,EAAA,EAAD,CAAYmb,cAAY,EAAxB,UAAyB,SAACN,GAAA,EAAD,CAAOvmB,EAAGA,EAAGwmB,QAAQ,0BAArB,uKAG7B,UAACtlB,EAAA,EAAD,CAAK6D,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,EAAhD,UACGquB,EAAkBn3B,KAAI,SAACq3B,EAAI/pB,GAAL,OACrB,SAAC6qB,GAAD,CAAqB3R,aAAc6Q,EAAIe,KAAM9qB,EAAI,EAAG+qB,QAASlB,EAAkB91B,OAAQi3B,QAAS,SAAC/O,GAAD,OAASA,GAAOgO,EAAYjqB,EAAGic,EAAM,EAArC,EAAyCgP,SAAU,kBAAMX,EAAWtqB,EAAjB,EAAqByqB,SAAUA,GAAjKV,EADI,KAEvB,UAAC1zB,EAAA,EAAD,CAAKE,GAAI,CAAE2D,QAAS,OAAQsB,IAAK,GAAjC,WACE,SAAC0vB,GAAD,CAASC,MAAOZ,EAAS1W,KAAMgW,KAC/B,SAACxsB,EAAA,EAAD,CAAQzJ,MAAM,QAAQ6J,QAAS+sB,EAAW9sB,WAAW,SAACsN,GAAA,EAAD,IAArD,UAAiE,SAAC0Q,GAAA,EAAD,CAAOvmB,EAAGA,EAAGwmB,QAAQ,8BAArB,+BAEhEgP,IAAsB,SAAC7sB,EAAA,EAAD,CAASlK,MAAM,UAAf,UAAyB,SAACiN,EAAA,EAAD,WAAY,UAAC6a,GAAA,EAAD,CAAOvmB,EAAGA,EAAGwmB,QAAQ,6BAA6BhL,MAAOia,EAAzD,mCAA2F,4BAAS,CAAEja,MAAOia,KAA7G,0CAIpE,UAAC1sB,GAAA,EAAD,CAAa3H,GAAI,CAAE2D,QAAS,OAAQD,MAAO,QAA3C,WACE,SAACoD,EAAA,EAAD,CAAQ9G,GAAI,CAAEoE,SAAU,GAAK8C,QAAS,kBAAM8b,EAAqB,CAAEiQ,iBAAkBA,GAA/C,EAAmErwB,SAAUA,EAAUuE,UAAW8rB,GAAkB,SAAC7rB,GAAA,EAAD,KAAe,SAACC,GAAA,EAAD,IAA0BhK,MAAO41B,EAAkB,UAAY,YAAxO,UACE,UAACnzB,EAAA,EAAD,YACE,2BAAM,SAACqlB,GAAA,EAAD,CAAOvmB,EAAGA,EAAGwmB,QAAQ,oBAArB,sCACL6N,IAAmB,SAAC1rB,EAAA,EAAD,WAAS,UAAC4d,GAAA,EAAD,CAAOvmB,EAAGA,EAAGwmB,QAAQ,uBAAuBhL,MAAOga,EAAnD,yBAAkF,4BAAS,CAAEha,MAAOga,KAApG,wBAGhCnB,IAAmB,SAACnsB,EAAA,EAAD,CAAQ9G,GAAI,CAAEwU,WAAY,GAAKnX,MAAM,OAAO6J,QAASmc,EAAQzgB,SAAUA,EAAvE,UAAiF,SAACsiB,GAAA,EAAD,WAG1G,CAGD,SAASoP,GAAT,GAOI,IAPkB3R,EAOnB,EAPmBA,aAAc4R,EAOjC,EAPiCA,KAAMC,EAOvC,EAPuCA,QAASC,EAOhD,EAPgDA,QAASC,EAOzD,EAPyDA,SAAUR,EAOnE,EAPmEA,SAQ5Dt1B,GAAMC,EAAAA,EAAAA,GAAe,2BAArBD,EACAiS,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACFjL,GAAYivB,EAAAA,EAAAA,GAAalS,GACzBzb,GAAUkI,EAAAA,EAAAA,KAChB,IAAKxJ,EAAW,OAAO,KACvB,IAAQkvB,EAAsClvB,EAAtCkvB,eAAgB9H,EAAsBpnB,EAAtBonB,kBACxB,OAAO,UAAC9b,EAAA,EAAD,CAAWlR,GAAI,CAAEkF,EAAG,GAApB,WACL,UAACpF,EAAA,EAAD,CAAKE,GAAI,CAAEmJ,GAAI,EAAGxF,QAAS,OAAQwV,eAAgB,gBAAiBlU,IAAK,GAAzE,WACE,SAACsC,EAAA,EAAD,CAASlK,MAAM,OAAf,UACE,UAACiN,EAAA,EAAD,eAAciqB,QAEhB,SAAChtB,EAAA,EAAD,CAASvH,GAAI,CAAEoE,SAAU,GAAK/G,MAAO62B,IAAcK,EAAO,EAAK,UAAaA,EAAO,EAAKL,EAAW,QAAU,UAA7G,UACE,SAAC5pB,EAAA,EAAD,UAAa4pB,IAAcK,EAAO,GAAK,SAACpP,GAAA,EAAD,CAAOvmB,EAAGA,EAAGwmB,QAAQ,gCAArB,+BAClCmP,EAAO,EAAKL,GAAW,SAAC/O,GAAA,EAAD,CAAOvmB,EAAGA,EAAGwmB,QAAQ,gCAArB,kCACxB,SAACD,GAAA,EAAD,CAAOvmB,EAAGA,EAAGwmB,QAAQ,+BAArB,gCAEN,SAACtlB,EAAA,EAAD,WACE,UAAC6H,GAAA,EAAD,CAAa3H,GAAI,CAAEoE,SAAU,GAAK4C,KAAK,QAAvC,WACE,SAACoN,GAAA,GAAD,WACE,SAACA,GAAA,GAAD,CAAmB1X,SAAU+3B,EAASh6B,MAAO85B,EAE3CrwB,WAAY,CAAEO,IAAK,EAAGC,IAAK8vB,EAASx0B,GAAI,CAAEmE,UAAW,WACrDnE,GAAI,CAAE0D,MAAO,OAAQ6H,OAAQ,OAAQtH,GAAI,QAE7C,SAAC6C,EAAA,EAAD,CAAQlE,SAAmB,IAAT2xB,EAAYrtB,QAAS,kBAAMutB,EAAQ,EAAd,EAAvC,UACE,SAACM,GAAA,EAAD,OAEF,SAACjuB,EAAA,EAAD,CAAQlE,SAAmB,IAAT2xB,EAAYrtB,QAAS,kBAAMutB,EAAQF,EAAO,EAArB,EAAvC,UACE,SAACS,GAAA,EAAD,OAEF,SAACluB,EAAA,EAAD,CAAQlE,SAAU2xB,IAASC,EAASttB,QAAS,kBAAMutB,EAAQF,EAAO,EAArB,EAA7C,UACE,SAACU,GAAA,EAAD,OAEF,SAACnuB,EAAA,EAAD,CAAQlE,SAAU2xB,IAASC,EAASttB,QAAS,kBAAMutB,EAAQD,EAAd,EAA7C,UACE,SAACU,GAAA,EAAD,OAEF,SAACpuB,EAAA,EAAD,CAAQzJ,MAAM,QAAQ6J,QAASwtB,EAA/B,UACE,SAACS,GAAA,EAAD,eAKR,UAAClgB,GAAA,GAAD,CAAMlH,WAAS,EAACoJ,QAAS,EAAGnJ,QAAS,EAArC,WACE,SAACiH,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,EAAf,UACE,SAACyf,GAAA,EAAD,CAAmBzS,aAAcA,EAAczb,QAASA,OAE1D,SAAC+N,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,EAAf,UAAkB,SAAC0f,GAAA,EAAD,CAAgBhJ,SAAUyI,MAC3C/1B,OAAOC,QAAQguB,GAAmB7wB,KAAI,+BAAE2nB,EAAF,KAAWwR,EAAX,YAAoB,SAACrgB,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,EAAf,UAAiC,SAAC4f,GAAA,EAAD,CAAkBzR,QAASA,EAAS0R,YAAa3kB,EAAS6I,KAAKnT,IAAI+uB,MAA7ExR,EAA3C,SAI5C,CACD,SAAS6Q,GAAT,GAAgG,IAA7EC,EAA4E,EAA5EA,MAAOtX,EAAqE,EAArEA,KAChB1e,GAAMC,EAAAA,EAAAA,GAAe,2BAArBD,EACR,GAAgCs0B,EAAAA,EAAAA,IAAa,GAA7C,eAAOxmB,EAAP,KAAa2W,EAAb,KAAqBxV,EAArB,KACM/D,GAAS1G,EAAAA,EAAAA,cAAY,SAACqyB,GAC1B,QAAKA,IACGnY,EAAK3f,SAAS83B,EAAKr5B,IAC5B,GAAE,CAACkhB,IACJ,OAAO,iCACL,SAACjO,EAAA,EAAD,CAAyB3C,KAAMA,EAAMC,OAAQkB,EAASjB,SAAUgoB,EAAO9qB,OAAQA,KAC/E,SAAChD,EAAA,EAAD,CAAQC,WAAS,EAAC/G,GAAI,CAAEuL,OAtEX,IAsE+BlO,MAAM,OAAO6J,QAASmc,EAAQlc,WAAW,SAACuuB,GAAA,EAAD,IAArF,UACE,SAACvQ,GAAA,EAAD,CAAOvmB,EAAGA,EAAGwmB,QAAQ,wBAArB,uCAGL,CC5Kc,SAASuQ,GAAT,GAAkG,IAAD,IAA1E/yB,SAAAA,OAA0E,SAAxDgzB,EAAwD,EAAxDA,UAC9Ch3B,GAAMC,EAAAA,EAAAA,GAAe,2BAArBD,EACkB+jB,GAAmBjd,EAAAA,EAAAA,YAAWC,EAAAA,GAAhDC,UAAaxJ,IACrB,EAAoEsmB,GAAgBC,GAA5DkT,EAAxB,EAAQhT,aAAgBgT,gBAAmB7S,EAA3C,EAA2CA,qBACnCnS,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACFilB,GAAiB55B,EAAAA,EAAAA,UAAQ,kBAAM05B,GAAa/kB,EAAS6I,KAAKpR,OAAO6W,QAAO,SAACnd,EAAGwb,GAAJ,OAAYxb,GAAMwb,EAAIsH,SAAWtH,EAAI8L,WAAa3G,EAAgB,EAAI,EAAtE,GAA0E,EAAzH,GAA6H,CAAC9R,EAAU+kB,EAAWjT,IAClL,OAAO,SAAC7b,EAAA,EAAD,CAAQC,WAAS,EAACG,QAAS,kBAAM8b,EAAqB,CAAE6S,iBAAkBA,GAA/C,EAAmEjzB,UAAWkzB,GAAkBlzB,EAAUuE,UAAW0uB,GAAkB,SAACzuB,GAAA,EAAD,KAAe,SAACC,GAAA,EAAD,IAA0BhK,MAAOw4B,EAAkB,UAAY,YAAhP,UACL,UAAC/1B,EAAA,EAAD,YACE,2BAAM,SAACqlB,GAAA,EAAD,CAAOvmB,EAAGA,EAAGwmB,QAAQ,oBAAoBhL,MAAO0b,EAAhD,sCACLD,IAAmB,SAACtuB,EAAA,EAAD,WAAS,UAAC4d,GAAA,EAAD,CAAOvmB,EAAGA,EAAGwmB,QAAQ,uBAAuBhL,MAAO0b,EAAnD,oBAAyE,4BAAS,CAAE1b,MAAO0b,KAA3F,+BAGlC,C,0CCXKC,IAAUC,EAAAA,GAAAA,KAAgB9vB,EAAAA,GAAAA,IAAU,CAAEmW,KAAI,oBAAMvH,GAAAA,GAAAA,KAAcA,GAAAA,GAAAA,WACvDmhB,GAAc,CACzBzY,KAAKb,EAAAA,GAAAA,GAAa,GAAD,gBAAKpc,GAAAA,IAAL,QAAyBM,GAAAA,KAAiB,SAAAzE,GAAG,OAAI25B,GAAQ1Z,IAAIjgB,EAAhB,IAC9DqoB,QAAQnI,EAAAA,GAAAA,IAAUxH,GAAAA,GAAAA,QAAc,SAACnY,EAAGP,GAAJ,OAAY25B,GAAQ1Z,IAAIjgB,EAAxB,KAG3B,SAAS85B,GAAiBxc,EAAyBiN,EAAiCwP,GACzF,IADiI,EAC3H1Z,EAA0B,CAC9Bb,KAAM,CAAC,EACPtT,OAAQ,CAAE8tB,OAAQ,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,QAAS,GAAIC,MAAO,KAE7DnxB,EAAO,IAAIqV,IALgH,WAO/GhB,GAP+G,IAOjI,2BAAwB,CAAC,IAAD,EAAb8D,EAAa,QAChBiZ,EAActM,GAAAA,GAAAA,cAAuB3M,EAAI4L,YAAa5L,EAAIte,OAAQsgB,KAAK9a,IAAI8a,KAAK/a,IAAIkiB,EAAsC,EAAbnJ,EAAIte,QAAase,EAAIhT,QAElI1E,EAA0B,CAC9BgX,GAAIU,EAAIV,GAAI3d,IAAKqe,EAAI4E,OACrB9Z,QAAO,yBACJkV,EAAI4E,OAAS,IADV,UAEH5E,EAAI4L,YAAc5L,EAAI4L,YAAYsN,SAAS,KAAOD,EAAc,IAAMA,GAFnE,GAGD13B,OAAOyd,YAAYgB,EAAI6L,SAASltB,KAAI,SAAAw6B,GAAO,MAC5C,CAACA,EAAQv6B,IAAKu6B,EAAQv6B,IAAIs6B,SAAS,KAAOC,EAAQC,cAAgB,IAAMD,EAAQC,cADpC,cAI3C9wB,EAAKwC,OAAO,IACnBmU,EAAOnU,OAAOkV,EAAIsG,SAAStC,KAAK1b,GAChC/G,OAAOsG,KAAKS,EAAKwC,QAAQ0S,SAAQ,SAAAX,GAAC,OAAIhV,EAAKyV,IAAIT,EAAb,GACnC,CAtBgI,+BAwBjI,GADAoC,EAAOb,MAAOe,EAAAA,GAAAA,IAAa,QAAItX,IAAO,SAAA1I,GAAC,OAAI,CAAJ,IACnCw5B,EACF,cAAoBp3B,OAAOuJ,OAAOmU,EAAOnU,QAAzC,gBAAgB,KACRkZ,KAAK,CAAE1E,GAAI,GAAIxU,OAAQ,CAAC,GADhC,CAEF,OAAOmU,CACR,CCMc,SAASoa,KAAY,IAAD,IACzBj4B,GAAMC,EAAAA,EAAAA,GAAe,2BAArBD,EACR,GAA0D8G,EAAAA,EAAAA,YAAWC,EAAAA,GAA7DC,UAAkB+c,EAA1B,EAAqBvmB,IAAmB06B,EAAxC,EAAwCA,YAChCjmB,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SAER,GAAsC/N,EAAAA,EAAAA,UAAS,CAAErF,KAAM,WAAY6pB,OAAQ,EAAGE,OAAQ,EAAGD,QAAS,EAAGE,MAAO,IAA5G,eAAOsP,EAAP,KAAoBC,EAApB,KACMlP,EAAwC,aAArBiP,EAAYt5B,KAErC,GAAkCqF,EAAAA,EAAAA,eAAS3E,GAA3C,eAAOixB,EAAP,KAAkB6H,EAAlB,KAEA,GAAkCzT,EAAAA,GAAAA,KAAlC,eAAOoS,EAAP,KAAkBsB,EAAlB,KAEA,GAA0E/D,EAAAA,GAAAA,GAAW,cAAeC,GAAAA,IAApG,sBAASE,EAAT,EAASA,kBAAT,IAA4B6D,QAAAA,OAA5B,MAAsCC,GAAAA,GAAtC,EAAoD7D,EAApD,KACM8D,EAAaF,EAAUC,GAAAA,GAAaA,GAAAA,GAAaD,EACjDG,GAAgBl0B,EAAAA,EAAAA,cAAY,SAAA+zB,GAAO,OAAI5D,EAAmB,CAAE4D,QAAAA,GAAzB,GAAqC,CAAC5D,IAEzE1tB,GAAoB0xB,EAAAA,EAAAA,GAAoB5U,GACxC6U,GAAkBpoB,EAAAA,EAAAA,KAElBqoB,GAAav7B,EAAAA,EAAAA,UAAQ,kBAAO2U,EAAS6I,KAAKpR,OAAO9K,MAA5B,GAAoC,CAACqT,IAEhE,GAA+C6R,GAAgBC,GAAvDE,GAAR,GAAQA,aAAcG,GAAtB,GAAsBA,qBACdqM,GAAiIxM,GAAjIwM,SAAUvD,GAAuHjJ,GAAvHiJ,mBAAoBnF,GAAmG9D,GAAnG8D,wBAAyBwP,GAA0EtT,GAA1EsT,aAAczW,GAA4DmD,GAA5DnD,OAAQgY,GAAoD7U,GAApD6U,UAAWC,GAAyC9U,GAAzC8U,gBAAiBr1B,GAAwBugB,GAAxBvgB,SAAUC,GAAcsgB,GAAdtgB,UACrHq1B,IAAWC,EAAAA,EAAAA,GAAYlV,EAAcgE,IAC3C,oBAAyCiR,SAAzC,IAAyCA,QAAzC,EAAyCA,GAAWjV,UAApD,QAAqF,CAAC,EAA9E3T,GAAR,GAAQA,eAAwBlJ,GAAhC,GAAwBqI,OAClB2pB,IAAa57B,EAAAA,EAAAA,UAAQ,kBAAMwjB,GAAOvjB,KAAI,SAAA+jB,GAAK,OAAIA,EAAM/jB,KAAI,SAAAsN,GAAC,OAAIoH,EAAS6I,KAAKnT,IAAIkD,EAAtB,GAAf,GAAtB,GAAkE,CAACiW,GAAQ7O,KAGtGpN,EAAAA,EAAAA,YAAU,kBACRoN,EAAS6I,KAAKiK,UAAUuT,EADhB,GAER,CAACA,EAAcrmB,IAGjB,IAAMknB,IAAclmB,EAAAA,EAAAA,SAAO,WAAS,KAEpCpO,EAAAA,EAAAA,YAAU,kBAAM,kBAAMs0B,GAAYhmB,SAAlB,CAAN,GAAmC,IAC7C,IAAMimB,IAAiB50B,EAAAA,EAAAA,cAAW,yBAAC,iGAsExB60B,EAGAC,EAGAC,EAOAC,GAnFwB,iHAmFxBA,GAnFwB,WAoF/B,IAAMtuB,EAASuuB,EAAenI,MAC9B,OAAQpmB,EAAqB,CAC3BwuB,QAAS,UACTha,UAAW2Z,IAAgBnuB,OAAAA,QAFZ3L,CAIlB,EAbQg6B,EA5EwB,WA6E/B,MAAwBI,EAAgBC,OAAhCC,EAAR,EAAQA,KAAMh+B,EAAd,EAAcA,MACd,OAAOg+B,OAAOt6B,EAAY,CACxBm6B,QAAS,QAASI,SAAUC,EAC5Bra,UAAW2Z,IAAgBnuB,OAAQrP,EAEtC,EATQy9B,EAzEwB,WA0E/B,MAAO,CAAEI,QAAS,QAASxuB,YAAQ3L,EAAWu6B,SAAUC,EAAgBra,UAAW2Z,IACpF,EALQA,EAtEwB,WAuE/B,OAAOra,EAAKgb,YAAYjB,EAAkB,GAAG7zB,GAC9C,EAvEOqf,EAA4LN,GAA5LM,gBAAiBkM,EAA2KxM,GAA3KwM,SAAU/X,EAAiKuL,GAAjKvL,YAAajX,EAAoJwiB,GAApJxiB,aAAcyrB,EAAsIjJ,GAAtIiJ,mBAAoBnF,EAAkH9D,GAAlH8D,wBAAyBkP,EAAyFhT,GAAzFgT,gBAAiB5C,EAAwEpQ,GAAxEoQ,gBAAiBkD,EAAuDtT,GAAvDsT,aAAcwB,EAAyC9U,GAAzC8U,gBAAiBr1B,EAAwBugB,GAAxBvgB,SAAUC,EAAcsgB,GAAdtgB,UACjLogB,GAAiBmJ,EAFW,wDAI7B+M,EAA0C,IAAIne,IAC9CuY,KACIl1B,EAAQu1B,EAAkBa,QAAQxR,IAC5B,EAAG2Q,EAAkBtY,SAAQ,SAAA8d,GAAE,OAAID,EAAa/d,KAAI0S,EAAAA,EAAAA,IAAoBsL,GAAzC,IACtCxF,EAAkB1T,MAAM,EAAG7hB,GAAOid,SAAQ,SAAA8d,GAAE,OAAID,EAAa/d,KAAI0S,EAAAA,EAAAA,IAAoBsL,GAAzC,KAE7CC,EAAeloB,EAAS6I,KAAKpR,OAAOwB,QAAO,SAAA0T,GAC/C,GAAIA,EAAIhT,MAAQlI,EAAU,OAAO,EACjC,GAAIkb,EAAIhT,MAAQjI,EAAW,OAAO,EAClC,IAAMy2B,EAAY34B,EAAamd,EAAIsG,SACnC,QAAa,OAATkV,QAAS,IAATA,GAAAA,EAAWx7B,SAAWw7B,EAAUr7B,SAAS6f,EAAI4L,gBAG7C5L,EAAI8L,YAAakE,EAAAA,EAAAA,IAAoB7K,MAErCnF,EAAIsH,UAAY+Q,OAChBrY,EAAI8L,WAAa2J,MACjBzV,EAAI8L,UAAY2J,GAAmB4F,EAAa1d,IAAIqC,EAAI8L,YAE7D,IACK2P,EAAQ/C,GAAiB6C,EAAcpS,EAAyBwP,GAxBrC,WA0BV+C,EAAAA,EAAAA,GAAYroB,EAAU8R,EAAcgE,EAAyB,IA1BnD,WA0B3BiR,EA1B2B,6DA4B3BuB,EA5B2B,WA4BdC,EAAAA,GAAAA,IAAcxB,EAASA,SAAUjV,GAAcA,UA5BjC,aA4Bd,EAA8ExU,OAAOrI,KAAM,GA5B7E,sDA8BjC/G,OAAOs6B,OAAOF,GAAYG,EAAAA,GAAAA,IAAU,CAACH,EAAYlD,MAC7CsD,GAAyBC,EAAAA,GAAAA,IAAY,UAACL,EAAWx1B,eAAZ,QAAuB,CAAC,EAAGmoB,GA/BnC,mDAgGjC,IA/DM2N,EAAaF,EACbG,EAAqD36B,OAAOC,QAAQsY,GAAanb,KAAI,YAAmB,IAAD,eAAhBC,EAAgB,KAAX3B,EAAW,KAE3G,OADI2B,EAAIs6B,SAAS,OAAMj8B,GAAgB,KAChC,CAAEA,MAAOqa,GAAAA,GAAAA,MAAY1Y,GAAMqd,QAAShf,EAC5C,IAAEqP,QAAO,SAAAuQ,GAAC,OAAIA,EAAE5f,OAAS4f,EAAEZ,SAAWhD,GAA5B,IAEXwgB,OAAa94B,GAEPw7B,EAAY,IAAIC,SAAc,SAAAztB,GAAC,OAAI4rB,GAAYhmB,QAAU5F,CAA1B,IAEjC8L,EA3C6B,mBA2CjByhB,EAAYv9B,KAAI,SAAAke,GAAC,OAAIA,EAAE5f,KAAN,KA3CA,CA2Cc8+B,IAAyB7f,EAAOuf,EACzEY,EAAWvgB,GAAmBC,GAAW4J,EAAiBpkB,OAAOuJ,OAAO2wB,EAAM3wB,QAAQrJ,SAAQ,SAAAob,GAAC,OAAIA,EAAEle,KAAI,SAAAke,GAAC,OAAIA,EAAElb,GAAN,GAAX,KAA0B85B,GAEzHxf,EA9C2B,mBA8CbigB,EAAYv9B,KAAI,SAAAke,GAAC,OAAIA,EAAEZ,OAAN,KA9CJ,EA8CqBhD,MAChD4Q,EAAoC,CAAEC,OAAQ,EAAGE,OAAQ,EAAGD,QAAS,EAAGE,MAAOnI,IAAKoI,UAAWY,YAAYC,OAC7G8G,IACFpX,EAAMuJ,KAAK1M,GAAAA,GAAAA,MAAYua,IACvB5V,EAAQ+H,MAAM/K,MAGVqjB,EAAepgB,EACrBzB,GAAQ8hB,EAAAA,GAAAA,IAAS9hB,EAAOkhB,GAAY,kBAAyB,SAAzB,SAAG/yB,KAAH,SAtDH,EAuDdoT,GAASvB,EAAOwB,EAASC,EAAMie,EAAiBxU,EAAiB,CAClFlJ,UAAU,EAAME,eAAe,EAAMH,gBAAgB,EAAME,YAAY,IADtEjC,EAvD8B,EAuD9BA,MAAOyB,EAvDuB,EAuDvBA,KAGVzB,GAAQ8hB,EAAAA,GAAAA,IAAS9hB,EAAO,CAAC,GAAG,SAAAtb,GAAC,OAAI,CAAJ,IAEvBq9B,EAAe3K,EAAWpX,EAAMiY,WAAQ/xB,EAC9Co7B,EAAyBthB,EAAMiY,MAEzBtS,EAAO,CAAEgb,YAAaqB,MAAMtC,GAAiB/F,KAAK,GAAGz1B,KAAI,SAAAQ,GAAC,MAAK,CAAE8R,IAAK,GAAI3K,KAAM2S,IAAtB,KAE1DkiB,EAAiB,IAAWuB,EAAwC,EAAb7C,EACvDkB,EAAkBsB,EAASM,OAAOC,YAAa/B,EAAkC,GACjFgC,EAAwB,GAAIC,EAAmB,IAAI5f,IACnD6f,EAAoB,GAuBpBpa,GAAUlI,EACb9b,KAAI,SAAC1B,EAAOgP,GAAR,MAAe,CAAEhP,MAAAA,EAAOgK,IAAKgV,EAAQhQ,GAArC,IACJK,QAAO,SAAAuQ,GAAC,OAAIA,EAAE5V,KAAOgS,GAAb,IAEL+jB,GAA2C,GA/FhB,YAgGxB/wB,GACP,IAAMgxB,EAAS,IAAIC,OAAO,IAAIC,IAAI,mBAE5BC,EAAe,CACnBtC,QAAS,QACTxb,GAAIrT,EAAGiQ,KAAAA,EACPoS,mBAAoByN,EACpBlK,SAAU2K,EACVa,UAAWlD,EACXxX,QAAAA,IAGF,GADAsa,EAAOK,YAAYF,OAAOz8B,GAChB,IAANsL,EAAS,CACX,IAAMsxB,EAA8B,CAAEzC,QAAS,QAAS1e,UAAWuJ,EAAiBzJ,KAAM,CAACA,EAAMogB,IACjGW,EAAOK,YAAYC,OAAc58B,EAClC,CACD,IAAI68B,OAAqC,EACnCC,EAAY,IAAIrB,SAAwB,SAAAztB,GAAC,OAAI6uB,EAAW7uB,CAAf,IAC/CsuB,EAAOS,UAAP,2CAAmB,yGAASp1B,EAAT,EAASA,KAAT,KACTA,EAAKwyB,QADI,OAEV,YAFU,OAYV,UAZU,OAmBV,YAnBU,QAsBV,aAtBU,QA0BV,UA1BU,+BAGbjR,EAAOC,QAAUxhB,EAAKwhB,OACtBD,EAAOG,QAAU1hB,EAAK0hB,OACtBH,EAAOE,SAAWzhB,EAAKyhB,QACnBzhB,EAAK8yB,cACPhb,EAAKgb,YAAchb,EAAKgb,YAAY9uB,QAAO,qBAAG2E,MAAkB3I,EAAKq1B,MAA1B,KAC3C,EAAAvd,EAAKgb,aAAYpX,KAAjB,iBAAyB1b,EAAK8yB,YAAYz8B,KAAI,SAAA2H,GAAG,MAAK,CAAE2K,IAAK3I,EAAKq1B,OAAQr3B,IAAAA,EAAzB,MACjD8Z,EAAKgb,YAAYx5B,MAAK,SAAC4C,EAAGC,GAAJ,OAAUA,EAAE6B,IAAM9B,EAAE8B,GAApB,IAAyBgwB,OAAO6D,IAT3C,mCAaT7xB,EAAKgE,QACPuuB,EAAe7W,KAAK1b,EAAKgE,QACzBwwB,EAAiBxf,IAAIhV,EAAKgX,KACrBwd,EAAiBxY,OAAOhc,EAAKgX,IACpCud,EAAY7Y,KAAK1b,EAAKgX,IAjBT,oCAoBbud,EAAY7Y,KAAK1b,EAAKgX,IApBT,oCAuBb2d,EAAOW,YACPJ,EAASl1B,GAxBI,4CA2BeA,EAAKyb,OA3BpB,GA2BN8Z,EA3BM,KA2BEC,EA3BF,KA4BbjU,EAAOI,MAAQ6T,EACfjU,EAAOE,SAAW+T,EAAYD,EA7BjB,2BA+BNE,QAAQC,IAAI,QAAS11B,GA/Bf,YAiCVu0B,EAAY78B,OAjCF,oBAkCTsf,EAAKud,EAAYnK,MAAQuK,EAASF,EAAQzd,GAC5C2e,OAnCW,EAoCXpD,EAAe76B,OAAS08B,KAC1BuB,EAAOtD,MACMmC,EAAiBnf,IAAI2B,KAAK2e,EAAOvD,KAE3CuD,IAAMA,EAAOrD,OACdqD,EAzCW,iBAyCLhB,EAAOK,YAAYW,GAzCd,+BA2CbpB,EAAY7Y,KAAK1E,GACbud,EAAY78B,SAAW,EAAI65B,GAAa,WAC1C,IAAMiB,EAAyB,CAAEA,QAAS,YAC1CiC,EAAQvf,SAAQ,SAAAyf,GAAM,OAAIA,EAAOK,YAAYxC,EAAvB,GAFmB,CAAC,GA5C/B,yFAAnB,sDAqDAiC,EAAQ/Y,KAAKiZ,GACbd,EAAU+B,MAAK,kBAAMjB,EAAOW,WAAb,IACfZ,GAAchZ,KAAKyZ,EAzKY,EAgGxBxxB,GAAI,EAAGA,GAAI4tB,EAAY5tB,KAAM,GAA7BA,IA2ET,IAASA,GAAI,EAAGA,GAAI,EAAGA,KACrB4wB,EAAY7Y,KAAZ,MAAA6Y,GAAW,SAASvb,EAAAA,GAAAA,IAAM,EAAGuY,EAAa,KA5KX,OA8K3BsE,GAAaC,aAAY,kBAAM5E,GAAe,SAAEv5B,KAAM,UAAa4pB,GAA1C,GAAqD,KA9KnD,UA+KXuS,QAAQiC,IAAI,CAACjC,QAAQkC,IAAItB,IAAgBb,IA/K9B,QA+K3BoC,GA/K2B,OAgLjCC,cAAcL,IACd5D,GAAYhmB,QAAU,WAAS,EAE1BgqB,IAMC1M,IACI4M,GAAWpc,GAAUkc,GAAQ5/B,KAAI,SAAAke,GAAC,OAAIA,EAAE4hB,QAAN,KAClCjC,GAAellB,GAAAA,GAAAA,MAAYua,GAC7BvpB,GAAO/G,OAAOuJ,OAAO2zB,IACiB,MAAtCz7B,GAAAA,GAAAA,KAAA,WAAYi5B,EAAWlnB,YAAvB,cAAY,GAAiBnW,OAC/B0J,GAAOA,GAAK3J,KAAI,kBAAsB,CAAE1B,MAAe,IAAvC,EAAGA,MAAyCwlB,KAA5C,EAAUA,KAAV,KAC2B,MAAzCzf,GAAAA,GAAAA,KAAA,WAAYw5B,GAAcznB,YAA1B,cAAY,GAAoBnW,OAClC0J,GAAOA,GAAK3J,KAAI,gBAAG1B,EAAH,EAAGA,MAAOwlB,EAAV,EAAUA,KAAV,MAAsB,CAAExlB,MAAAA,EAAOwlB,KAAoB,KAAd,OAACA,QAAD,IAACA,EAAAA,EAAQ,GAA9C,KAClBgX,EAAa,CACXtG,UAAW8I,EACX/I,SAAUsJ,GACVl0B,KAAAA,MAGE4Z,GAASD,GAAYsc,GAAQ5/B,KAAI,SAAAke,GAAC,OAAIA,EAAEqF,MAAN,IAAeiY,GAEvD3U,GAAqB,CAAEtD,OAAQA,GAAOvjB,KAAI,SAAA+jB,GAAK,OAAIA,EAAMgc,WAAV,IAAwBxE,UAAWyE,KAAK5T,UArBvFlB,EAAOC,OAAS,EAChBD,EAAOG,OAAS,EAChBH,EAAOE,QAAU,EACjBF,EAAOI,MAAQ,GAoBjBuP,GAAe,oBAAK3P,GAAN,IAAc5pB,KAAM,WAAYkqB,WAAYW,YAAYC,SA3MrC,4CA4MhC,CAAC5F,EAAc9R,EAAUmS,GAAsBqU,EAAYxU,GAAcyQ,IAEtE1L,GAAa,iBAAG5Y,SAAH,IAAGA,QAAH,EAAGA,GAAgBrI,YAAnB,QAA2B,iBAExC2oB,IAAclsB,EAAAA,EAAAA,cAAY,SAAAisB,GAC9BrM,GAAqB,CAAEqM,SAAAA,IACvB4H,OAAa94B,EACd,GAAE,CAAC6kB,KACEE,IAA0ChnB,EAAAA,EAAAA,UAAQ,WACtD,OAAO4J,IAAQ8xB,IAAY,CAAE9xB,KAAAA,GAAM8xB,SAAAA,GACpC,GAAE,CAAC9xB,GAAM8xB,KAEV,OAAO,UAAC93B,EAAA,EAAD,CAAK6D,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,EAAhD,UACJwyB,IAAc,UAAChP,GAAA,EAAD,CAAOC,SAAS,UAAUvrB,QAAQ,SAAlC,mGAAgI,SAACi/B,GAAA,EAAD,CAAMv8B,UAAWw8B,EAAAA,GAAYC,GAAG,YAAhC,uBAAhI,yBAEdpZ,KAAe,UAACnd,EAAA,WAAD,CAAsBtL,MAAOyoB,GAA7B,WAEd,UAACjO,GAAA,GAAD,CAAMlH,WAAS,EAACC,QAAS,EAAzB,WAEE,SAACiH,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,GAAIgW,GAAI,EAAGpd,GAAI,EAAG5K,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,EAA5E,UAEE,SAACnF,EAAA,EAAD,WAAK,SAACy8B,GAAA,EAAD,CAAe5Z,aAAcA,EAAc6U,gBAAiBA,SAInE,UAACviB,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,GAAIgW,GAAI,EAAGpd,GAAI,EAAG5K,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,EAA5E,WACE,UAACiM,EAAA,EAAD,YACE,UAAChI,EAAA,EAAD,YACE,SAACoB,EAAA,EAAD,CAAYmb,cAAY,EAAxB,SAA0B7mB,EAA1B,yCACA,SAAC+rB,GAAA,EAAD,CAAkBC,UAAU,MAAM7lB,OAAO,UAACjF,EAAA,EAAD,YACvC,SAACwK,EAAA,EAAD,CAAYnN,QAAQ,KAApB,SAA0ByB,EAA1B,yDACA,SAAC0L,EAAA,EAAD,UAAa1L,EAAb,0DAFF,UAIE,SAACkB,EAAA,EAAD,WACE,SAAC4mB,GAAD,CAAuBC,wBAAyBA,GAAyBC,2BAA4B,SAAAD,GAAuB,OAAI3D,GAAqB,CAAE2D,wBAAAA,GAA3B,EAAuD/jB,SAAUklB,YAKnM,SAAC6K,GAAD,CAAuB/vB,SAAUklB,QAEnC,SAAChB,GAAD,QAIF,UAAC7R,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,GAAIgW,GAAI,EAAGpd,GAAI,EAAG5K,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,EAA5E,WACE,SAACge,GAAD,CAAmBrgB,SAAUklB,KAG7B,SAAC6N,GAAD,CAAa/yB,SAAUklB,EAAkB8N,UAAWA,KAGpD,SAAC5C,GAAD,CAAapwB,SAAUklB,KAEvB,SAAChhB,EAAA,EAAD,CAAQC,WAAS,EAACI,UAAWgvB,IAAe,SAAC/uB,GAAA,EAAD,KAAe,SAACC,GAAA,EAAD,IAA0BhK,MAAO84B,GAAe,UAAY,YAAajvB,QAAS,kBAAM8b,GAAqB,CAAEmT,cAAeA,IAA5C,EAA7I,SAA2Mv3B,EAA3M,uCAEA,UAACsS,EAAA,EAAD,YACE,SAAChI,EAAA,EAAD,UAActK,EAAd,sCACA,SAACyD,GAAA,EAAD,CAAqBC,SAAUA,GAAUC,UAAWA,GAClDC,OAAQ,SAAAF,GAAQ,OAAI0gB,GAAqB,CAAE1gB,SAAAA,GAA3B,EAChBG,QAAS,SAAAF,GAAS,OAAIygB,GAAqB,CAAEzgB,UAAAA,GAA3B,EAClBG,QAAS,SAACJ,EAAUC,GAAX,OAAyBygB,GAAqB,CAAE1gB,SAAAA,EAAUC,UAAAA,GAA1D,EACTK,SAAUklB,QAKd,SAACiL,GAAD,CAAgBnwB,SAAUklB,WAK9B,UAAC7S,GAAA,GAAD,CAAMlH,WAAS,EAACC,QAAS,EAAzB,WACE,SAACiH,GAAA,GAAD,CAAMhH,MAAI,EAAC7J,SAAU,EAArB,UACE,UAACuD,GAAA,EAAD,YACE,SAACb,EAAA,EAAD,CACElE,UAAW+f,GAAgBmF,IAAqBgE,MAAuB0N,EAAAA,GAAAA,IAAY,OAAC1zB,SAAD,IAACA,QAAD,EAACA,GAAM02B,aAAc1Q,IACxGzuB,MAAOslB,EAAe,UAAY,UAClCzb,QAAS8wB,GACT7wB,WAAW,SAACs1B,EAAA,EAAD,IAJb,8BAMA,UAACj1B,GAAA,EAAD,CAAgB5E,SAAUklB,IAAqBnF,EAC7C5d,OAAO,6BAAM,uBAAI4yB,KAAV,IAAoD,IAApBA,GAAwB,QAAU,YAD3E,WAEE,SAAC38B,GAAA,EAAD,WACE,SAACsP,EAAA,EAAD,CAAYnN,QAAQ,UAAUE,MAAM,YAApC,0HAIF,SAACoK,EAAA,EAAD,IACCi1B,GAAAA,EAAAA,KAAwB,SAAA9/B,GAAC,OAAI,UAAC5B,GAAA,EAAD,CAC5BkM,QAAS,kBAAM8b,GAAqB,CAAE2U,gBAAiB/6B,GAA9C,EADmB,UACkCA,EADlC,IAC4C,IAANA,EAAU,QAAU,WAD3CA,EAAnB,QAG5B,UAAC4K,GAAA,EAAD,CAAgB5E,SAAUklB,IAAqBnF,EAC7C5d,OAAO,6BAAM,uBAAIsyB,IAAV,IAA0C,IAAfA,EAAmB,SAAW,aADlE,WAEE,SAACr8B,GAAA,EAAD,WACE,SAACsP,EAAA,EAAD,CAAYnN,QAAQ,UAAUE,MAAM,YAApC,wGAIF,SAACoK,EAAA,EAAD,KACCqX,EAAAA,GAAAA,IAAM,EAAGsY,GAAAA,IAAY7T,UAAUpnB,KAAI,SAAAS,GAAC,OAAI,UAAC5B,GAAA,EAAD,CACvCkM,QAAS,kBAAMowB,EAAc16B,EAApB,EAD8B,UACLA,EADK,IACK,IAANA,EAAU,SAAW,YADLA,EAAnB,QAGvC,SAACkK,EAAA,EAAD,CACElE,UAAWklB,EACXzqB,MAAM,QACN6J,QAAS,kBAAM6wB,GAAYhmB,SAAlB,EACT5K,WAAW,SAACguB,GAAA,EAAD,IAJb,0BAQJ,UAAClgB,GAAA,GAAD,CAAMhH,MAAI,EAAV,WACE,qDACC,SAAC0uB,GAAA,EAAD,CACC7Q,mBAAoBA,GACpB8Q,UAAW,SAAAzuB,GAAM,OAAI6U,GAAqB,CAAE8I,mBAAoB3d,GAA/C,EACjBvL,WAAYklB,YAKfnF,IAAgB,SAACyE,GAAD,CAAkBC,OAAQ0P,EAAanP,cAAAA,GAAe+P,gBAAAA,MACzE,SAAC73B,EAAA,EAAD,WACE,SAACqvB,GAAD,CAAWvsB,SAAUklB,EAAkBsH,UAAWA,EAAWC,SAAUA,GAAUC,YAAaA,QAEhG,SAACpe,EAAA,EAAD,WACE,UAAChI,EAAA,EAAD,YACE,UAACpJ,EAAA,EAAD,CAAK6D,QAAQ,OAAOC,WAAW,SAASqB,IAAK,EAAGuL,GAAI,EAApD,WACE,SAAClG,EAAA,EAAD,CAAYtK,GAAI,CAAEoE,SAAU,GAA5B,SACGsb,IAAS,wCAAc,4BAASA,GAAOliB,SAA9B,yBAAqEoqB,GAArE,OAAwF8P,KAAa,oDAA0B,4BAAU,IAAIyE,KAAKzE,IAAYzP,0BACpK,wEAEN,SAACnhB,EAAA,EAAD,CAAQlE,UAAW8c,GAAOliB,OAAQH,MAAM,QAAQ6J,QAAS,kBAAM8b,GAAqB,CAAEtD,OAAQ,GAAIgY,UAAW,GAApD,EAAzD,8BAEF,UAACziB,GAAA,GAAD,CAAMlH,WAAS,EAACpK,QAAQ,OAAOqK,QAAS,EAAxC,WACE,SAACiH,GAAA,GAAD,CAAMhH,MAAI,EAAV,UAAW,SAAC,KAAD,CAAejH,KAAK,aAC/B,SAACiO,GAAA,GAAD,CAAMhH,MAAI,EAAV,UAAW,SAAC,KAAD,CAAgBjH,KAAK,aAChC,SAACiO,GAAA,GAAD,CAAMhH,MAAI,EAAC7J,SAAU,KACrB,SAAC6Q,GAAA,GAAD,CAAMhH,MAAI,EAAV,UAAW,UAAC4uB,GAAA,EAAD,CAAwBC,WAAS,EAACriC,MAAOq8B,EAAap6B,SAAU,SAAC2G,EAAGzG,GAAJ,OAAUiJ,EAAkB,CAAEixB,YAAal6B,GAA3C,EAAiDoK,KAAK,QAAtH,WACT,SAAC+1B,GAAA,EAAD,CAActiC,OAAO,EAAOmI,UAAWk0B,EAAvC,8BACA,SAACiG,GAAA,EAAD,CAActiC,OAAO,EAAMmI,SAAUk0B,EAArC,gDAKR,SAAC1d,GAA0B4jB,SAA3B,CAAoCviC,MAAOqxB,GAA3C,UACE,SAACmR,GAAD,CAAWnF,WAAYA,GAAYnV,aAAcA,EAAc7c,KAAMA,GAAMgxB,YAAaA,EAAal0B,WAAYklB,WAIxH,CACD,SAASmV,GAAT,GAMI,IANiBnF,EAMlB,EANkBA,WAAYnV,EAM9B,EAN8BA,aAAc7c,EAM5C,EAN4CA,KAAMgxB,EAMlD,EANkDA,YAAal0B,EAM/D,EAN+DA,SAmBhE,OAXa1G,EAAAA,EAAAA,UAAQ,kBAAM,SAAC,EAAAkU,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,CAAUnT,QAAQ,cAAcuG,MAAM,OAAO6H,OAAQ,MAAzE,gBACxBusB,QADwB,IACxBA,OADwB,EACxBA,EAAY37B,KAAI,SAAC+jB,EAAOniB,GAAR,OAAkB4kB,GAAgB7c,IAAQ,SAACo3B,GAAD,CAEzDva,aAAcA,EACdzC,MAAOA,EACP/H,QAASrS,EAJgD,UAMzD,SAAC+mB,GAAD,CAAkB9uB,MAAOA,EAAO+uB,aAAcgK,EAAal0B,SAAUA,KALhE7E,EAAQmiB,EAAMid,OADJ,KADE,GAUR,CAACrF,EAAYnV,EAAc7c,EAAMgxB,EAAal0B,GAE5D,CAQD,SAASs6B,GAAT,GAA+E,IAAjD/8B,EAAgD,EAAhDA,SAAUwiB,EAAsC,EAAtCA,aAAczC,EAAwB,EAAxBA,MAAO/H,EAAiB,EAAjBA,QACnCwO,EAA8BjE,GAAgBC,GAA9DE,aAAgB8D,wBAClBiR,GAAWC,EAAAA,EAAAA,GAAYlV,EAAcgE,EAAyBzG,GAC9Dkd,GAAgBlhC,EAAAA,EAAAA,UAAQ,kBAAM07B,GAAa,CAAE9xB,KAAM8xB,EAASjV,GAAexU,OAAQypB,SAAAA,EAAUzf,QAAAA,EAArE,GAAiF,CAACyf,EAAUzf,EAASwK,IACnI,OAAKya,GACE,SAACr3B,EAAA,WAAD,CAAsBtL,MAAO2iC,EAA7B,SACJj9B,IAFwB,IAI5B,C,+KC9cc,SAASk9B,GAAT,GAAyF,IAA3DC,EAA0D,EAA1DA,MAAOjR,EAAmD,EAAnDA,SAC1CztB,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACR,GAA+Bs0B,EAAAA,EAAAA,IAAa,GAA5C,eAAOxmB,EAAP,KAAa6wB,EAAb,KAAqB5wB,EAArB,KAEA,OAAO,iCACL,SAACkD,GAAA,EAAD,CAAcjC,KAAMlB,EAAMmB,QAASlB,EAAQiiB,eAAgB,CAAE3E,SAAU,MAAvE,UACE,SAACuT,GAAD,CAAgBF,MAAOA,EAAOjR,SAAUA,EAAU1f,OAAQA,OAE5D,SAAC0jB,GAAA,EAAD,CAAStrB,OAAO,SAACuF,EAAA,EAAD,UAAa1L,EAAb,0CAAgDgsB,UAAU,MAAM6S,OAAK,EAArF,UACE,SAAC32B,EAAA,EAAD,CAAQzJ,MAAM,OAAO2J,KAAK,QAAQE,QAASq2B,EAA3C,UAAoD,SAACG,GAAA,EAAD,UAGzD,CACD,SAASF,GAAT,GAAiH,IAAvFF,EAAsF,EAAtFA,MAAOjR,EAA+E,EAA/EA,SAAU1f,EAAqE,EAArEA,OACjCkE,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACR,GAAgEnL,EAAAA,EAAAA,YAAWC,EAAAA,GAAnEC,UAAkB+c,EAA1B,EAAqBvmB,IAAmB4wB,EAAxC,EAAwCA,kBAChBrG,EAA8BjE,GAAgBC,GAA9DE,aAAgB8D,wBACVxO,GAAYzS,EAAAA,EAAAA,YAAWK,EAAAA,GAA7BD,KACFoa,GAAQhkB,EAAAA,EAAAA,UAAQ,WACpB,IAAMyhC,EAAS9sB,EAAS6I,KAAKnT,IAAd,OAAkB+2B,QAAlB,IAAkBA,EAAAA,EAAS,IACpCM,GAASthB,EAAAA,GAAAA,IAAU0Q,GAAmB,SAAClQ,EAAID,GAAL,OAAcA,KAAI,OAAK8gB,QAAL,IAAKA,OAAL,EAAKA,EAAQ7Z,SAAU6Z,EAAS9sB,EAAS6I,KAAKnT,IAAIuW,EAApE,IAC5C,OAAO/d,OAAOuJ,OAAOs1B,GAAQ9zB,QAAO,SAAA9H,GAAC,OAAIA,CAAJ,GACtC,GAAE,CAAC6O,EAAUmc,EAAmBsQ,IAC3B1F,GAAWC,EAAAA,EAAAA,GAAYlV,EAAcgE,EAAyBzG,EAAOmM,EAAWxb,EAAS4c,QAAQlnB,IAAI8lB,QAAYluB,GACjH0/B,GAAoB3hC,EAAAA,EAAAA,UAAQ,kBAAM07B,GAAa,CAAE9xB,KAAM8xB,EAASjV,GAAexU,OAAQypB,SAAAA,EAAUzf,QAAAA,EAArE,GAAiF,CAACwK,EAAciV,EAAUzf,IAC5I,OAAO,SAAC,EAAA/H,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,CAAUnT,QAAQ,cAAcuG,MAAM,OAAO6H,OAAQ,MAAzE,SACJsyB,IAAqB,SAAC93B,EAAA,WAAD,CAAsBtL,MAAOojC,EAA7B,UACpB,SAAChR,GAAD,CAAkBC,cAAc,EAAMC,cAAc,iCAAE,SAAC,KAAD,CAAe/lB,KAAK,WAAU,SAAC,KAAD,CAAgBA,KAAK,WAAU,SAACF,EAAA,EAAD,CAAQE,KAAK,QAAQ3J,MAAM,QAAQ6J,QAASyF,EAA5C,UAAqD,SAACwoB,GAAA,EAAD,cAG7K,CC7BD,IAAM2I,GAAe,CAAEnoB,GAAI,EAAGgW,GAAI,EAAGnd,GAAI,EAAGD,GAAI,GAAIqd,GAAI,IAElDmS,IAAwBC,EAAAA,EAAAA,OAAK,kBAAM,8BAAN,IAEpB,SAASC,GAAT,GACgF,IADnDC,EACkD,EADlDA,WAAYpa,EACsC,EADtCA,QAASpX,EAC6B,EAD7BA,KAAMmB,EACuB,EADvBA,QAE7DjP,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACAiS,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACFstB,GAAe/6B,EAAAA,EAAAA,cAAY,SAAC0Z,GAChCohB,EAAWphB,GACXjP,GACD,GAAE,CAACqwB,EAAYrwB,IACVuwB,GAAsBh7B,EAAAA,EAAAA,cAAY,SAACkE,EAAOtC,GAAR,gBAAC,oBAAwBsC,GAAUtC,GAAnC,IAA2Cq5B,SAAU,CAACva,IAAtD,GAAmE,CAACA,IAE5G,GAAoFwa,EAAAA,EAAAA,YAAWF,GAAD,SAAC,YAA0BG,EAAAA,GAAAA,OAA3B,IAAkDF,SAAU,CAACva,MAA3J,eAAO0a,EAAP,KAAqBC,EAArB,KAEA,GAA+Bjb,EAAAA,GAAAA,KAA/B,eAAOC,EAAP,KAAgBC,EAAhB,MACAjgB,EAAAA,EAAAA,YAAU,WAAQ,OAAOoN,EAAS6I,KAAKiK,UAAUD,EAAc,GAAE,CAAC7S,EAAU6S,IAE5E,IAAMgb,GAAOC,EAAAA,GAAAA,KAEPC,GAAgB1iC,EAAAA,EAAAA,UAAQ,kBAAM2iC,EAAAA,GAAAA,KAAN,GAA+B,IACvDC,GAAY5iC,EAAAA,EAAAA,UAAQ,WACxB,IAAM6iC,GAAaC,EAAAA,GAAAA,GAAeR,EAAcI,GAChD,OAAOnb,GAAW5S,EAAS6I,KAAKpR,OAAOwB,OAAOi1B,GAAY5iC,KAAI,SAAAqhB,GAAG,OAAIA,EAAIV,EAAR,IAAY8C,MAAM,EAAGke,GAAaY,GACpG,GAAE,CAACjb,EAAS5S,EAAU+tB,EAAeJ,EAAcE,IAEpD,OAAO,SAAC7uB,GAAA,EAAD,CAAcjC,KAAMlB,EAAMmB,QAASA,EAAS+gB,eAAgB,CAAE3E,SAAU,MAAxE,UACL,UAACnhB,EAAA,EAAD,YACE,UAACI,EAAA,EAAD,CAAalJ,GAAI,CAAE8N,GAAI,EAAGnK,QAAS,OAAQwV,eAAgB,gBAAiBvV,WAAY,UAAxF,WACE,UAAC0G,EAAA,EAAD,CAAYnN,QAAQ,KAApB,UAA0B2mB,GAAU,SAAC3S,GAAA,EAAD,CAAS1C,IAAKG,GAAAA,EAAAA,KAAYkV,KAAe,KAA7E,IAAoFllB,EAApF,4CACA,SAACmR,EAAA,EAAD,CAAa7I,QAAS2G,QAExB,SAACpG,EAAA,EAAD,KACA,UAACyB,EAAA,EAAD,YACE,SAAC,EAAAkH,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,CAAUnT,QAAQ,cAAcuG,MAAM,OAAO6H,OAAQ,MAAzE,UACE,SAACwyB,GAAD,CAAuBS,aAAcA,EAAcC,qBAAsBA,EAAsBQ,mBAAiB,OAElH,SAACn/B,EAAA,EAAD,CAAK+yB,GAAI,EAAT,UACE,SAAC,EAAAziB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,CAAUnT,QAAQ,cAAcuG,MAAM,OAAO6H,OAAQ,MAAzE,UACE,SAAC0J,GAAA,GAAD,CAAMlH,WAAS,EAACC,QAAS,EAAGmJ,QAAS,CAAExB,GAAI,EAAGnH,GAAI,EAAGD,GAAI,GAAzD,SACGuwB,EAAU3iC,KAAI,SAAA2gB,GAAE,OACf,SAAC7H,GAAA,GAAD,CAAMhH,MAAI,EAAU0H,GAAI,EAAxB,UACE,SAACmZ,GAAA,EAAD,CACEjG,WAAY/L,EACZiQ,cAAc,SAACsQ,GAAD,CAAoBC,MAAOxgB,IACzC5V,QAASi3B,KAJGrhB,EADD,iBAc9B,C,6DClDKoiB,IAAgBC,EAAAA,GAAAA,IAAkB,QAAIC,EAAAA,KAE7B,SAASC,GAAT,GAAgL,IAArJnB,EAAoJ,EAApJA,WAAYoB,EAAwI,EAAxIA,cAAe5yB,EAAyH,EAAzHA,KAAMmB,EAAmH,EAAnHA,QACjEjP,GAAMC,EAAAA,EAAAA,GAAe,CAAC,iBAAkB,cAAe,oBAAvDD,EACAiS,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACFstB,GAAe/6B,EAAAA,EAAAA,cAAY,SAAC0Z,GAChCohB,EAAWphB,GACXjP,GACD,GAAE,CAACqwB,EAAYrwB,IAEhB,GAA+B2V,EAAAA,GAAAA,KAA/B,eAAOC,EAAP,KAAgBC,EAAhB,MACAjgB,EAAAA,EAAAA,YAAU,kBAAMoN,EAAS4c,QAAQ9J,UAAUD,EAAjC,GAA+C,CAACA,EAAa7S,IAEvE,IAAM/D,GAAepO,EAAAA,EAAAA,IAAW,kBAAMqO,GAAAA,EAAAA,MAAN,GAA0B,IAE1D,GAA4BjK,EAAAA,EAAAA,UAAmB,CAAC,EAAG,EAAG,IAAtD,eAAO5D,EAAP,KAAeqgC,EAAf,KACA,GAAoCz8B,EAAAA,EAAAA,UAAS,IAA7C,eAAOqK,EAAP,KAAmBC,EAAnB,KACMC,GAAqBC,EAAAA,EAAAA,kBAAiBH,GAEtCI,GAAerR,EAAAA,EAAAA,UAAQ,oCAAO4Q,GAAgB2W,GAAW5S,EAAS4c,QAAQnlB,OAC7EwB,QAAOk1B,EAAAA,GAAAA,GAAe,CAAEtxB,WAAY4xB,EAAepgC,OAAAA,EAAQyH,KAAM0G,IAAsBmyB,EAAAA,GAAAA,IAAoB1yB,KAC3G1N,MAAKqgC,EAAAA,GAAAA,GAAY,UAACC,GAAAA,GAAAA,aAAD,QAA2B,IAAI,GAAOC,EAAAA,GAAAA,IAAkB7yB,KACzE3Q,KAAI,SAAAmwB,GAAM,OAAIA,EAAOxP,EAAX,WAHgB,QAGG,EAHH,GAIzB,CAAC2G,EAAS5S,EAAU/D,EAAc5N,EAAQogC,EAAejyB,IAE7D,OAAO,SAACwC,GAAA,EAAD,CAAcjC,KAAMlB,EAAMmB,QAASA,EAAnC,UACL,UAAC/E,EAAA,EAAD,YACE,SAACI,EAAA,EAAD,CAAalJ,GAAI,CAAE8N,GAAI,GAAvB,UACE,UAACmH,GAAA,GAAD,CAAMlH,WAAS,EAAf,WACE,SAACkH,GAAA,GAAD,CAAMhH,MAAI,EAAC7J,SAAU,EAArB,UACE,UAACkG,EAAA,EAAD,CAAYnN,QAAQ,KAApB,UAA0BmiC,GAAgB,SAACnuB,GAAA,EAAD,CAAS1C,IAAKG,GAAAA,EAAAA,YAAmB0wB,KAAqB,KAAhG,IAAuG1gC,EAAvG,gEAEF,SAACqW,GAAA,GAAD,CAAMhH,MAAI,EAAV,UACE,SAAC8B,EAAA,EAAD,CAAa7I,QAAS2G,YAI5B,SAACpG,EAAA,EAAD,KACA,UAACyB,EAAA,EAAD,YACE,UAAC+L,GAAA,GAAD,CAAMlH,WAAS,EAACC,QAAS,EAAGwC,GAAI,EAAhC,WACE,SAACyE,GAAA,GAAD,CAAMhH,MAAI,EAAV,UACE,SAAC4uB,GAAA,EAAD,CAAwB78B,GAAI,CAAEuL,OAAQ,QAAU9Q,MAAOyE,EAAQ8H,KAAK,QAApE,SACGo4B,EAAAA,GAAAA,KAAgB,SAAAQ,GAAI,OAAI,SAAC7C,GAAA,EAAD,CAAyBtiC,MAAOmlC,EAAM14B,QAAS,kBAAMq4B,EAAUL,GAAchgC,EAAQ0gC,GAAtC,EAA/C,UACvB,UAAC9/B,EAAA,EAAD,CAAK6D,QAAQ,OAAOsB,IAAK,EAAzB,WAA4B,4BAAS26B,KAAc,SAAC,KAAD,CAAc1/B,MAAO,QAD9B0/B,EAAvB,SAKzB,SAAC3qB,GAAA,GAAD,CAAMhH,MAAI,EAAC7J,SAAU,EAArB,UACE,SAAClH,GAAA,EAAD,CACEgR,WAAS,EACTlH,KAAK,QACLvM,MAAO0S,EACPzQ,SAAU,SAAC2G,GAAD,OAAyC+J,EAAc/J,EAAE8K,OAAO1T,MAAhE,EACVsB,MAAO6C,EAAE,0BACToB,GAAI,CAAEuL,OAAQ,QACd6C,WAAY,CACVpO,GAAI,CAAEuL,OAAQ,iBAKtB,SAAC0J,GAAA,GAAD,CAAMlH,WAAS,EAACC,QAAS,EAAzB,SACGT,EAAapR,KAAI,SAAAkwB,GAAQ,OACxB,SAACpX,GAAA,GAAD,CAAMhH,MAAI,EAAgB0H,GAAI,EAAGgW,GAAI,EAAGnd,GAAI,EAAGD,GAAI,EAAnD,UACE,SAACsxB,GAAA,EAAD,CACExT,SAAUA,EACVnlB,QAASi3B,EACTpR,cAAc,SAACsQ,GAAD,CAAoBhR,SAAUA,OAJhCA,EADQ,aAYnC,CC9DD,IAAMyT,IAAe9B,EAAAA,EAAAA,OAAK,kBAAM,8BAAN,IAEX,SAAS+B,KAAoB,IAAD,EACzC,GAA6Er6B,EAAAA,EAAAA,YAAWC,EAAAA,GAAxF,IAAQC,UAAakvB,EAArB,EAAqBA,eAAqBnS,EAA1C,EAAqCvmB,IAAqB4S,EAA1D,EAA0DA,eAClC2X,EAA8BjE,GAAgBC,GAA9DE,aAAgB8D,wBACxB,GAA2BjhB,EAAAA,EAAAA,YAAWK,EAAAA,GAA9B6xB,EAAR,EAAQA,SAAU9xB,EAAlB,EAAkBA,KACZwI,EAAW,UAAGspB,EAASjV,UAAZ,aAAG,EAAwBrU,YAC5C,GAAgCxL,EAAAA,EAAAA,UAAS,IAAzC,eAAOupB,EAAP,KAAiB2T,EAAjB,KACMC,GAAa78B,EAAAA,EAAAA,cAAY,kBAAM48B,EAAYlL,EAAlB,GAAmC,CAACA,IAC7DoL,GAAa98B,EAAAA,EAAAA,cAAY,kBAAM48B,EAAY,GAAlB,GAAuB,KAGtDv8B,EAAAA,EAAAA,YAAU,WACJ4oB,GAAYA,IAAayI,GAC3BkL,EAAYlL,EACf,GAAE,CAACzI,EAAUyI,IAEd,IAAMl6B,GAAQoB,EAAAA,GAAAA,KACRmkC,GAAaC,EAAAA,GAAAA,GAAcxlC,EAAMylC,YAAYC,GAAG,OAEhDC,GAAYrkC,EAAAA,EAAAA,UAAQ,kBAAMoS,GAAeA,EAAYkU,SAAShlB,OAAS,IAAK,SAAC0T,EAAA,EAAD,WAAW,SAAChI,EAAA,EAAD,WAAa,SAACE,GAAA,EAAD,CAAiBC,SAAUiF,EAAYkU,cAAvH,GAA+J,CAAClU,IAC1L,GAAuB6kB,EAAAA,GAAAA,GAAW,YAAD,OAAaxQ,GAAgB6d,GAAAA,IAArDC,GAAT,eAASA,SACHC,GAAmBpzB,EAAAA,EAAAA,kBAAiBmzB,GACpCE,GAAgBzkC,EAAAA,EAAAA,UAAQ,kBAAM,IAAIwe,IAAIgmB,EAAd,GAAiC,CAACA,IAChE,OAAO,UAAC5gC,EAAA,EAAD,YACL,SAAC,EAAAsQ,SAAD,CAAUC,UAAU,EAApB,UACE,SAACyvB,GAAD,CACEzT,SAAUA,EACVuU,QAAM,EACN/yB,QAASqyB,EACTnT,cAAc,SAAC8T,GAAD,CAAuBvB,cAAetwB,EAAeswB,qBAGvE,UAACrqB,GAAA,GAAD,CAAMlH,WAAS,EAACC,QAAS,EAAzB,UACGmyB,IAAc,UAAClrB,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,GAAInH,GAAI,GAAID,GAAI,EAAGqd,GAAI,EAAG5rB,GAAI,CAAE2D,QAAS,OAAQoG,cAAe,SAAU9E,IAAK,GAA9F,UACZs7B,GAAaA,GACd,SAACO,GAAD,QAEF,UAAC7rB,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,GAAInH,GAAI,GAAID,GAAI,EAAGqd,GAAI,EAAG7d,WAAS,EAACC,QAAS,EAA5D,WACE,SAACiH,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,GAAIgW,GAAI,EAAGnd,GAAI,EAAG7K,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,EAA5E,UACE,SAAC46B,GAAA,EAAD,CAAYxT,SAAUyI,EAAgBiM,OAAQd,EAAYjR,UAAQ,EAACjC,cAAc,SAACiU,GAAD,CAAkB1B,cAAetwB,EAAeswB,oBAElI1iB,EAAAA,GAAAA,KAAgB,SAAAkH,GAAO,OAAI,SAAC7O,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,GAAIgW,GAAI,EAAGnd,GAAI,EAA9B,SACvB1I,EAAKS,IAAIuO,GAAAA,GAAAA,IAAUgP,GAAShH,IAAIriB,OACjC,SAACq0B,GAAA,EAAD,CAAcjG,WAAY/iB,EAAKS,IAAIuO,GAAAA,GAAAA,IAAUgP,GAAShH,IAAIriB,MAAOksB,wBAAyBA,EAAyBsa,UAAWN,EAC5H5T,cAAc,SAACmU,GAAD,CAAoBpd,QAASA,IAAaqd,QAAM,EAACpS,YAAU,EAACC,UAAQ,KACpF,SAACoS,GAAD,CAAatd,QAASA,KAJwCA,EAA1C,QAOxBqc,IAAc,UAAClrB,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,GAAInH,GAAI,GAAIod,GAAI,EAAG7d,WAAS,EAACC,QAAS,EAArD,UACbuyB,IAAa,SAACtrB,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,GAAInH,GAAI,EAAGD,GAAI,EAA9B,SAAkCgyB,KAChD,SAACtrB,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,GAAInH,GAAI,EAAGD,GAAI,EAAGvO,GAAI,CAAE2D,QAAS,OAAQoG,cAAe,SAAU9E,IAAK,GAAtF,UACE,SAAC67B,GAAD,cAKT,CACD,SAASM,GAAT,GAAyD,IAAlCtd,EAAiC,EAAjCA,QACKnB,GAAmBjd,EAAAA,EAAAA,YAAWC,EAAAA,GAAhDC,UAAaxJ,IACbyU,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACR,GAAgCqiB,EAAAA,EAAAA,KAAhC,eAAOxmB,EAAP,KAAa2W,EAAb,KAAqBxV,EAArB,KACA,OAAO,UAACqD,EAAA,EAAD,CAAWlR,GAAI,CAAEuL,OAAQ,OAAQ7H,MAAO,OAAQotB,UAAW,IAAKntB,QAAS,OAAQoG,cAAe,UAAhG,WACL,SAACb,EAAA,EAAD,WACE,SAACoB,EAAA,EAAD,WAAY,SAAC,MAAD,CAAkBwZ,QAASA,SAEzC,SAACrc,EAAA,EAAD,KACA,UAAC3H,EAAA,EAAD,CAAKE,GAAI,CACPoE,SAAU,EACVT,QAAS,OACTwV,eAAgB,SAChBvV,WAAY,UAJd,WAOE,SAACq6B,GAAD,CAAmBna,QAASA,EAASpX,KAAMA,EAAMmB,QAASA,EAASqwB,WAAY,SAAAphB,GAAE,OAAIjM,EAAS6I,KAAKva,IAAI2d,EAAI,CAAEwM,UAAUkE,EAAAA,EAAAA,IAAoB7K,IAA1D,KACjF,SAAC7b,EAAA,EAAD,CAAQI,QAASmc,EAAQhmB,MAAM,OAAO2C,GAAI,CAAEiH,aAAc,OAA1D,UACE,SAACo6B,GAAA,EAAD,CAAWrhC,GAAI,CAAEuL,OAAQ,IAAK7H,MAAO,cAI5C,CACD,SAASs9B,GAAT,GAAgF,IAApD1B,EAAmD,EAAnDA,cAClB1gC,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACkB+jB,GAAmBjd,EAAAA,EAAAA,YAAWC,EAAAA,GAAhDC,UAAaxJ,IACbyU,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACR,GAAgCqiB,EAAAA,EAAAA,KAAhC,eAAOxmB,EAAP,KAAa2W,EAAb,KAAqBxV,EAArB,KACA,OAAO,iCACL,SAACwiB,GAAA,EAAD,CAAStrB,OAAO,SAACuF,EAAA,EAAD,UAAa1L,EAAb,6CAAmDgsB,UAAU,MAAM6S,OAAK,EAAxF,UACE,SAAC32B,EAAA,EAAD,CAAQzJ,MAAM,OAAO2J,KAAK,QAAQE,QAASmc,EAA3C,UAAoD,SAACge,GAAA,EAAD,SAEtD,SAAChC,GAAD,CAAiBC,cAAeA,EAAepB,WAAY,SAAAphB,GAAE,OAAIjM,EAAS4c,QAAQtuB,IAAI2d,EAAI,CAAEwM,UAAUkE,EAAAA,EAAAA,IAAoB7K,IAA7D,EAA+EjW,KAAMA,EAAMmB,QAASA,MAEpK,CACD,SAASgzB,GAAT,GAAqF,IAApDvB,EAAmD,EAAnDA,cACvB1gC,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACkB+jB,GAAmBjd,EAAAA,EAAAA,YAAWC,EAAAA,GAAhDC,UAAaxJ,IACbyU,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACR,GAAgCqiB,EAAAA,EAAAA,KAAhC,eAAOxmB,EAAP,KAAa2W,EAAb,KAAqBxV,EAArB,KACA,OAAO,iCACL,SAAC/G,EAAA,EAAD,CAAQzJ,MAAM,OAAO6J,QAASmc,EAAQlc,WAAW,SAACk6B,GAAA,EAAD,IAAjD,SAAkEziC,EAAlE,8CACA,SAACygC,GAAD,CAAiBC,cAAeA,EAAepB,WAAY,SAAAphB,GAAE,OAAIjM,EAAS4c,QAAQtuB,IAAI2d,EAAI,CAAEwM,UAAUkE,EAAAA,EAAAA,IAAoB7K,IAA7D,EAA+EjW,KAAMA,EAAMmB,QAASA,MAEpK,CACD,SAASqzB,GAAT,GAAgE,IAAlCpd,EAAiC,EAAjCA,QACpBllB,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACkB+jB,GAAmBjd,EAAAA,EAAAA,YAAWC,EAAAA,GAAhDC,UAAaxJ,IACbyU,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACR,GAAgCqiB,EAAAA,EAAAA,KAAhC,eAAOxmB,EAAP,KAAa2W,EAAb,KAAqBxV,EAArB,KACA,OAAO,iCACL,SAACwiB,GAAA,EAAD,CAAStrB,OAAO,SAACuF,EAAA,EAAD,UAAa1L,EAAb,0CAAgDgsB,UAAU,MAAM6S,OAAK,EAArF,UACE,SAAC32B,EAAA,EAAD,CAAQzJ,MAAM,OAAO2J,KAAK,QAAQE,QAASmc,EAA3C,UAAoD,SAACge,GAAA,EAAD,SAEtD,SAACpD,GAAD,CAAmBna,QAASA,EAASpX,KAAMA,EAAMmB,QAASA,EAASqwB,WAAY,SAAAphB,GAAE,OAAIjM,EAAS6I,KAAKva,IAAI2d,EAAI,CAAEwM,UAAUkE,EAAAA,EAAAA,IAAoB7K,IAA1D,MAEpF,CACD,SAASme,KAAuB,IAAD,EACrBliC,GAAMC,EAAAA,EAAAA,GAAe,CAAC,iBAAkB,aAAxCD,EACAiS,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACR,GAA2EnL,EAAAA,EAAAA,YAAWC,EAAAA,GAA9EC,EAAR,EAAQA,UAAR,IAAmBA,UAAkB+c,EAArC,EAAgCvmB,IAAmB4wB,EAAnD,EAAmDA,kBAC3ClnB,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACFrH,GAAiBC,EAAAA,EAAAA,IAAW,kBAAMC,GAAAA,EAAAA,MAAN,GAA4B,IACxD2iC,GAAcplC,EAAAA,EAAAA,UAAQ,mBAAQ6C,OAAOuJ,OAAO0kB,GAAmBljB,QAAO,SAAAL,GAAC,OAAIA,CAAJ,IAAOjM,MAAxD,GAAgE,CAACwvB,IACvFuU,GAAcn+B,EAAAA,EAAAA,cAAY,WACzBwC,GACAynB,OAAOC,QAAQ,uEACpBvuB,OAAOuJ,OAAO0kB,GAAmBhS,SAAQ,SAAAuS,GAAG,OAAI1c,EAAS6I,KAAKva,IAAIouB,EAAK,CAAEjE,SAAU,IAAvC,GAC7C,GAAE,CAAC1jB,EAAWiL,EAAUmc,IAEnB9G,GAAahqB,EAAAA,EAAAA,UAAQ,kBAAMuC,GAAkBE,GAAAA,EAAAA,WAAyBF,EAAgBqH,EAAjE,GAAwE,CAACrH,EAAgBqH,IACpH,GAAoCqtB,EAAAA,GAAAA,GAAW,YAAD,OAAaxQ,GAAgB6d,GAAAA,IAA3E,eAASC,EAAT,KAASA,SAAYe,EAArB,KACMC,GAAcr+B,EAAAA,EAAAA,cAAY,SAAAq9B,GAAQ,OAAIe,EAAY,CAAEf,SAAAA,GAAlB,GAA+B,CAACe,IAExE,GAA+BtO,EAAAA,EAAAA,KAA/B,eAAOxmB,EAAP,KAAa6wB,EAAb,KAAqB5wB,EAArB,KACM+0B,GAAmBp0B,EAAAA,EAAAA,kBAAiBmzB,GAC1C,GAA8BvkC,EAAAA,EAAAA,UAAQ,WACpC,MAAiF6C,OAAOuJ,OAAO0kB,GAAmB7N,QAAO,SAACnd,EAAG2/B,GAC3H,IAAMnkB,EAAM3M,EAAS6I,KAAKnT,IAAIo7B,GAC9B,GAAInkB,EAAK,CACP,MAA6C2M,GAAAA,GAAAA,sBAA+B3M,EAAK,IAAI9C,IAAIgnB,IAAjFE,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,cAC3B,EAAiF1X,GAAAA,GAAAA,sBAA+B3M,EAAK,IAAI9C,IAAI7Z,GAAAA,IAAlGihC,EAA3B,EAAQF,kBAAsDG,EAA9D,EAA+CF,cAC/C7/B,EAAE4/B,kBAAoB5/B,EAAE4/B,kBAAoBA,EAC5C5/B,EAAE6/B,cAAgB7/B,EAAE6/B,cAAgBA,EAEpC7/B,EAAE8/B,mBAAqB9/B,EAAE8/B,mBAAqBA,EAC9C9/B,EAAE+/B,eAAiB//B,EAAE+/B,eAAiBA,CACvC,CACD,OAAO//B,CACR,GAAE,CAAE4/B,kBAAmB,EAAGE,mBAAoB,EAAGD,cAAe,EAAGE,eAAgB,IAZ5EH,EAAR,EAAQA,kBAAmBE,EAA3B,EAA2BA,mBAAoBD,EAA/C,EAA+CA,cAAeE,EAA9D,EAA8DA,eAwB9D,MAAO,CAAEC,QAXsB,CAC7BrnC,KAAMiE,EAAF,iDACJnE,MAASmnC,EAAoBE,GAC3B,6BAAM,SAACG,GAAA,EAAD,CAAcxnC,MAAOmnC,EAAmBl9B,IAAK,KAAMw9B,OAAK,IAA9D,OAAoE,SAACD,GAAA,EAAD,CAAcxnC,MAAOqnC,EAAoBp9B,IAAK,KAAMw9B,OAAK,QAD5E,SAACD,GAAA,EAAD,CAAcxnC,MAAOmnC,EAAmBl9B,IAAK,KAAMw9B,OAAK,KAS3FC,SANc,CAC9BxnC,KAAMiE,EAAF,iDACJ8K,QAAS,oBAASo4B,EAAqBC,EAA9B,EACTtnC,MAASonC,EAAgBE,GACvB,6BAAM,SAACE,GAAA,EAAD,CAAcxnC,MAAOonC,EAAen9B,IAAK,KAAMw9B,OAAK,IAA1D,OAAgE,SAACD,GAAA,EAAD,CAAcxnC,MAAOsnC,EAAgBr9B,IAAK,KAAMw9B,OAAK,QAD5E,SAACD,GAAA,EAAD,CAAcxnC,MAAOonC,EAAen9B,IAAK,KAAMw9B,OAAK,KAIlG,GAAE,CAACtjC,EAAG8iC,EAAkB1U,EAAmBnc,IA1BpCmxB,EAAR,EAAQA,QAASG,EAAjB,EAAiBA,SA4BjB,OAAO,UAACjxB,EAAA,EAAD,WACJowB,IAAe,SAACx6B,EAAA,EAAD,CAAQzJ,MAAM,QAAQ6J,QAASq6B,EAAax6B,WAAS,EAAC/G,GAAI,CAAEoiC,wBAAyB,EAAGC,uBAAwB,GAAhH,SAAsHzjC,EAAtH,+CAChB,SAACsK,EAAA,EAAD,WACE,UAAC0N,GAAA,EAAD,CAAO5I,QAAS,EAAhB,WACE,UAAClF,EAAA,EAAD,YACE,SAAChC,EAAA,EAAD,CAAQC,WAAS,EAAC1J,MAAM,OAAO8J,WAAW,SAAC+d,GAAA,EAAD,IAAcllB,GAAI,CAAEqiC,uBAAwB,EAAGD,wBAAyB,GAAKl7B,QAASq2B,EAAhI,wBACA,SAAC1tB,GAAA,EAAD,CAAcjC,KAAMlB,EAAMmB,QAASlB,EAAnC,UACE,SAAC7D,EAAA,EAAD,WACE,SAACI,EAAA,EAAD,WACE,SAACo5B,GAAA,EAAD,CAAeC,aAAc9B,EAAU/jC,SAAU+kC,WAIvD,UAACrpB,GAAA,GAAD,YACE,SAAC,MAAD,CAAmBoqB,MAAOR,EAASniC,UAAWyY,GAAAA,MACrC,OAAR6pB,QAAQ,IAARA,GAAA,UAAAA,EAAUz4B,eAAV,oBAAAy4B,EAAoBr8B,MAAS,SAAC,MAAD,CAAmB08B,MAAOL,EAAUtiC,UAAWyY,GAAAA,WAGhF7Z,GAAkBynB,GAAcnnB,OAAOC,QAAQknB,GAAYjnB,SAAQ,+BAAEmjB,EAAF,iBACrDjmB,KAAI,SAAAkmB,GAAS,OAAI,SAACvZ,EAAA,EAAD,CAAmC9I,GAAI,CAAE2D,QAAS,OAAQoG,cAAe,SAAU9E,IAAK,GAAxF,UAC5B,SAACkd,GAAD,CAA2CC,OAAQA,EAAQC,UAAWA,GAA/CD,EAASC,IADWD,EAASC,EAA5B,GADwC,WAQ3E,CCnMc,SAASogB,KACtB,IAAM7wB,GAAYC,EAAAA,EAAAA,UACZ6wB,GAAWt/B,EAAAA,EAAAA,cAAY,iCAAMwO,QAAN,IAAMA,GAAN,UAAMA,EAAWG,eAAjB,iBAAM,EAAoBC,sBAA1B,aAAM,SAAqC,CAAEC,SAAU,UAAvD,GAAoE,CAACL,IAElG,OAAO,UAACgF,GAAA,EAAD,CAAO5I,QAAS,EAAhB,WACL,UAACiH,GAAA,GAAD,CAAMlH,WAAS,EAACC,QAAS,EAAGhO,GAAI,CAAEmZ,eAAgB,UAAlD,WACE,SAAClE,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,EAAGgW,GAAI,EAAGnd,GAAI,EAAGD,GAAI,IAApC,UACE,SAACo0B,GAAD,OAEF,UAAC1tB,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,GAAIgW,GAAI,EAAGnd,GAAI,EAAGD,GAAI,IAAKvO,GAAI,CAAE2D,QAAS,OAAQoG,cAAe,SAAU9E,IAAK,GAA/F,WACE,SAAC29B,GAAD,CAAc17B,QAASw7B,KACvB,SAACxxB,EAAA,EAAD,CAAWlR,GAAI,CAAEoE,SAAU,EAAGc,EAAG,GAAjC,UACE,SAACumB,GAAD,aAIN,SAAC3rB,EAAA,EAAD,CAAKqS,IAAKP,EAAV,UACE,SAACmuB,GAAD,QAGL,CACD,SAAS6C,GAAT,GAA6D,IAArC17B,EAAoC,EAApCA,QACD4tB,GAAqBpvB,EAAAA,EAAAA,YAAWC,EAAAA,GAA7CC,UAAakvB,eACbhvB,GAAUJ,EAAAA,EAAAA,YAAWK,EAAAA,GAArBD,KAER,OAAO,UAACmP,GAAA,GAAD,CAAMlH,WAAS,EAACC,QAAS,EAAGmJ,QAAS,CAAExB,GAAI,EAAGgW,GAAI,EAAGnd,GAAI,EAAGD,GAAI,EAAGqd,GAAI,GAAvE,WACL,SAAC3W,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,EAAf,UACE,SAACyW,GAAD,CAAgBC,SAAUyI,EAAgB9L,YAAa9X,EAAAA,EAAWhK,QAASA,MAE5E0V,EAAAA,GAAAA,KAAgB,SAAAkH,GAAO,OACtB,SAAC7O,GAAA,GAAD,CAAMhH,MAAI,EAAe0H,GAAI,EAA7B,UACE,SAACiT,GAAD,CAAkBC,WAAY/iB,EAAKS,IAAIuO,GAAAA,GAAAA,IAAUgP,GAAShH,IAAIriB,MAAOqpB,QAASA,EAASkF,YAAa9X,EAAAA,EAAWhK,QAASA,KAD1G4c,EADM,MAK3B,CAED,SAAS6e,KAAwB,IAAD,EAC9B,GAAmEj9B,EAAAA,EAAAA,YAAWC,EAAAA,GAAtEqJ,EAAR,EAAQA,eAAR,IAAwBpJ,UAAkB+c,EAA1C,EAAqCvmB,IAAmBymC,EAAxD,EAAwDA,KAChD/8B,GAAUJ,EAAAA,EAAAA,YAAWK,EAAAA,GAArBD,KACFD,GAAoB0xB,EAAAA,EAAAA,GAAoB5U,GACxCmgB,GAAWC,EAAAA,EAAAA,MACXtqB,EAAU3S,EAAKS,IAAIuO,GAAAA,GAAAA,SAAera,MAClC6kC,EAAgBtwB,EAAeswB,cAC/B90B,EAAQ1E,EAAKS,IAAIuO,GAAAA,GAAAA,KAAWra,MAC5BgQ,EAAY3E,EAAKS,IAAIuO,GAAAA,GAAAA,KAAWra,MAChCuoC,EAAgBl9B,EAAKS,IAAIuO,GAAAA,GAAAA,eAAqBra,MAC9CwoC,EAAO,CACXC,KAAMp9B,EAAKS,IAAIuO,GAAAA,GAAAA,MAAAA,MAAkBra,MACjC0oC,MAAOr9B,EAAKS,IAAIuO,GAAAA,GAAAA,MAAAA,OAAmBra,MACnC2oC,MAAOt9B,EAAKS,IAAIuO,GAAAA,GAAAA,MAAAA,OAAmBra,OAE/B4oC,EAAS,CACbH,KAAMp9B,EAAKS,IAAIuO,GAAAA,GAAAA,MAAAA,MAAkBra,MACjC0oC,MAAOr9B,EAAKS,IAAIuO,GAAAA,GAAAA,MAAAA,OAAmBra,MACnC2oC,MAAOt9B,EAAKS,IAAIuO,GAAAA,GAAAA,MAAAA,OAAmBra,OAErC,GAAoC04B,EAAAA,GAAAA,GAAW,YAAD,OAAaxQ,GAAgB6d,GAAAA,IAA3E,eAAS8C,EAAT,KAASA,SAAY9B,EAArB,KACA,OAAO,UAACtwB,EAAA,EAAD,CAAWlR,GAAI,CAAEuL,OAAQ,QAAzB,WACL,UAACzL,EAAA,EAAD,CAAKE,GAAI,CAAE6pB,SAAU,YAArB,WACE,UAAC/pB,EAAA,EAAD,CAAKE,GAAI,CAAE6pB,SAAU,WAAYnmB,MAAO,OAAQ6H,OAAQ,QAAxD,WACE,SAACjB,EAAA,EAAD,CAAYnN,QAAQ,KAAK6C,GAAI,CAAE6pB,SAAU,WAAY0Z,KAAM,MAAO9Y,OAAQ,EAAGpX,UAAW,wBAAyBiT,QAAS,KAA1H,UACE,SAAC,KAAD,CAAcpmB,MAAO8O,EAAe9P,OAAQ2P,SAAO,OAErD,SAAC/O,EAAA,EAAD,CAAKE,GAAI,CAAE6pB,SAAU,WAAY0Z,KAAM,MAAO9Y,OAAQ,KAAMpX,UAAW,wBAAyBiT,QAAS,IAAM5iB,MAAO,OAAQC,QAAS,OAAQwV,eAAgB,SAAUnV,GAAI,GAA7K,UACE,SAAC5F,GAAA,EAAD,CAAMf,MAAOob,EAASzY,GAAI,CAAEuL,OAAQ,QAClCxP,OAAO,UAACuO,EAAA,EAAD,CAAYnN,QAAQ,KAAK6C,GAAI,CAAE2D,QAAS,OAAQsB,IAAK,EAAGrB,WAAY,UAApE,UACJnD,GAAAA,EAASgY,IACV,SAAC3Y,EAAA,EAAD,CAAKE,GAAI,CAAEwL,WAAY,SAAUrH,UAAW,UAA5C,SAAyD6K,EAAerI,QACxE,SAACwK,GAAA,EAAD,CAAS1C,IAAG,UAAEG,GAAAA,EAAAA,mBAAF,aAAE,EAAqB0wB,aAGzC,SAACx/B,EAAA,EAAD,CAAKE,GAAI,CAAE6pB,SAAU,WAAY0Z,KAAM,EAAGtjC,IAAK,GAA/C,UACE,SAACmT,GAAA,EAAD,CAAYpT,GAAI,CAAEkF,EAAG,GAAK7H,MAAM,QAAQ6J,QAAS,kBAAMs6B,EAAY,CAAE8B,UAAWA,GAA/B,EAAjD,SACGA,GAAW,SAACE,GAAA,EAAD,KAAe,SAACC,GAAA,EAAD,SAG/B,SAACn5B,EAAA,EAAD,CAAYtK,GAAI,CAAEkF,EAAG,EAAG2kB,SAAU,WAAY6Z,MAAO,EAAGzjC,IAAK,EAAGqmB,QAAS,IAAzE,UACE,SAAC/e,EAAA,EAAD,WAAUo8B,EAAAA,GAAAA,IAAen5B,EAAOC,WAGpC,SAAC3K,EAAA,EAAD,CAAK2O,IAAKO,EAAe40B,QAAS/jC,UAAU,MAAM6D,MAAM,OAAO6H,OAAO,aAExE,UAACzL,EAAA,EAAD,YACE,SAACqpB,GAAA,EAAD,CAAgBnpB,GAAI,CAAEkF,EAAG,GAAKgC,QAAS,kBAAM47B,EAAS,SAAf,EAAvC,UACE,SAAC7tB,GAAA,GAAD,CAAMlH,WAAS,EAACC,QAAS,EAAG6kB,IAAK,EAAjC,SACI,CAAC,OAAQ,QAAS,SAAqC12B,KAAI,SAAA0nC,GAAI,aAC/D,SAAC5uB,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,EAAf,UACE,SAACmuB,GAAA,EAAD,CAAOC,aAAcd,EAAKY,GAAOxmC,MAAOgmC,EAAOQ,GAAQ,OAAS,YAC9DG,QAAQ,WACRC,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdnkC,GAAI,CACF0D,MAAO,OACP6H,OAAQ,OACR,sBAAuB,CACrB2jB,SAAU,SACVkV,QAAS,aACTn9B,aAAc,OACdo9B,WAAY,EACZ94B,OAAQ,WAdd,UAiBE,SAACzL,EAAA,EAAD,CAAKD,UAAU,MAAM4O,IAAG,UAAEO,EAAes1B,eAAeT,UAAhC,aAAE,EAAqCU,IAAK7gC,MAAM,OAAO6H,OAAO,YAlBrEs4B,EADwC,SAwBrE,SAACv5B,EAAA,EAAD,CAAYtK,GAAI,CAAEmE,UAAW,SAAU0uB,GAAI,GAAK11B,QAAQ,KAAxD,SAA8D6R,EAAew1B,qBAC7E,SAACvvB,GAAA,GAAD,CAAMlH,WAAS,EAACC,QAAS,EAAzB,UACG8Q,EAAAA,GAAAA,IAAM,EAAG,GAAG3iB,KAAI,SAAAsN,GAAC,aAChB,SAACwL,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,EAAf,UACE,SAACwT,GAAA,EAAD,CAAgBjiB,QAAS,kBAAMrB,EAAkB,CAAEm9B,cAAev5B,IAAMu5B,EAAgBv5B,EAAI,EAAIA,GAAvE,EAAzB,UACE,SAAC3J,EAAA,EAAD,CAAKD,UAAU,MAAM4O,IAAG,UAAEO,EAAes1B,eAAf,uBAA8C76B,WAAhD,aAAE,EAA6E86B,IACrGvkC,IAAE,WACIgjC,GAAiBv5B,EAAI,CAAC,EAAI,CAAEK,OAAQ,oBAE1CpG,MAAM,OAAO6H,OAAO,YANH9B,EADP,OAWpB,SAAC0f,GAAA,EAAD,CAAgBnpB,GAAI,CAAEkF,EAAG,GAAKgC,QAAS,kBAAM47B,EAAS,YAAf,EAAvC,UACE,SAAC7tB,GAAA,GAAD,CAAMlH,WAAS,EAACoJ,QAAS,EAAGnJ,QAAS,EAArC,UACG8Q,EAAAA,GAAAA,IAAM,EAAG,GAAG3iB,KAAI,SAAAsN,GAAC,OAAI,SAACwL,GAAA,GAAD,CAAchH,MAAI,EAAC0H,GAAI,EAAGpK,OAAO,OAAjC,UAAwC,SAAC6pB,GAAA,EAAD,CAAmBzS,aAAckgB,EAAKp5B,GAAI1L,MAAO0L,KAA9EA,EAAf,aAK3B,CCxID,IAAMg7B,GAAgB,CACpB9uB,GAAI,GACJgW,GAAI,EACJnd,GAAI,GAGS,SAASk2B,KACtB,OAAsCh/B,EAAAA,EAAAA,YAAWC,EAAAA,GAAzCC,EAAR,EAAQA,UAAWoJ,EAAnB,EAAmBA,eACXlJ,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACFD,GAAoB0xB,EAAAA,EAAAA,GAAoB3xB,EAAUxJ,KAGlDqO,EAAY3E,EAAKS,IAAIuO,GAAAA,GAAAA,KAAWra,MAChCuoC,EAAgBl9B,EAAKS,IAAIuO,GAAAA,GAAAA,eAAqBra,MAE9CG,GAAQoB,EAAAA,GAAAA,KACR2oC,GAAOvE,EAAAA,GAAAA,GAAcxlC,EAAMylC,YAAYC,GAAG,OAC1CsE,GAAqB1oC,EAAAA,EAAAA,UAAQ,kBAAM4iB,EAAAA,GAAAA,IAAM,EAAG,GAAG3iB,KAAI,SAAAsN,GAAC,OACxD,SAACo7B,GAAD,CACEC,UAAS,uBAAkBr7B,GAC3B+e,SAAQ,4BAAuB/e,GAC/Bs7B,aAAc,kBAAMl/B,EAAkB,CAAEm9B,cAAev5B,IAAMu5B,EAAgBv5B,EAAI,EAAIA,GAAvE,GAJwC,GAAvB,GAK5B,CAACu5B,EAAen9B,IACvB,OAAO,iCACL,SAACm/B,GAAD,KACA,UAAC/vB,GAAA,GAAD,CAAMlH,WAAS,EAACC,QAAS,EAAzB,UAEG22B,IAAQ,UAAC1vB,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,GAAInH,GAAI,GAAID,GAAI,EAAGvO,GAAI,CAAE2D,QAAS,OAAQoG,cAAe,SAAU9E,IAAK,GAAvF,WACP,SAACiM,EAAA,EAAD,WAAW,SAAChI,EAAA,EAAD,WAAa,UAACoB,EAAA,EAAD,CAAYnN,QAAQ,KAAK6C,GAAI,CAAEmE,UAAW,UAA1C,+BAAyE6+B,SAChG4B,EAAmBzoC,KAAI,SAACijB,EAAG3V,GAAJ,OAAU,SAAC3J,EAAA,EAAD,CAAaE,GAAI,CAAEsmB,QAAS0c,GAAkBv5B,EAAI,EAAK,EAAI,IAA3D,SAAoE2V,GAA1D3V,EAApB,QAE1B,UAACwL,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,GAAInH,GAAI,GAAID,GAAI,EAAGR,WAAS,EAACC,QAAS,EAArD,UArBmB,CAAC,CAAC,OAAQ,yBAA0B,CAAC,QAAS,mBAAoB,CAAC,QAAS,oBAuB7E7R,KAAI,+BAAE0nC,EAAF,KAAQoB,EAAR,YAClB,SAAChwB,GAAA,IAAD,kBAAMhH,MAAI,GAAgBw2B,IAA1B,cACE,SAACI,GAAD,CACEC,UAAWjB,EACXrb,SAAUyc,MAHEpB,EADE,MAOjB70B,EAAes1B,eAAe,YAAc,SAACrvB,GAAA,IAAD,kBAAMhH,MAAI,GAAKw2B,IAAf,cAC7C,SAACI,GAAD,CACEC,UAAU,SACVtc,SAAS,4BAGVxZ,EAAes1B,eAAe,aAAc,SAACrvB,GAAA,IAAD,kBAAMhH,MAAI,GAAKw2B,IAAf,cAC7C,SAACI,GAAD,CACEC,UAAU,UACVtc,SAAS,eAtC+D,CAAC,CAAC,WAAY,0BAA2B,GAAI,CAAC,WAAY,0BAA2B,GAAI,CAAC,WAAY,sBAAuB,IA0C3LrsB,KAAI,YAAyB,IAAD,eAAtB0nC,EAAsB,KAAhBoB,EAAgB,KAATC,EAAS,KACpCC,EAAU16B,GAAay6B,EAC3B,OAAKl2B,EAAes1B,eAAeT,IAC5B,SAAC5uB,GAAA,IAAD,kBAAMhH,MAAI,EAAY7S,MAAO,CAAEkrB,QAAS6e,EAAU,EAAI,KAAWV,IAAjE,cACL,SAACI,GAAD,CACEC,UAAWjB,EACXrb,SAAUyc,MAHSpB,GAD0B,IAOlD,QAGDc,IAAQ,UAAC1vB,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,GAAInH,GAAI,GAAID,GAAI,EAAGR,WAAS,EAACC,QAAS,EAArD,WACR,SAACiH,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,GAAf,UACE,SAACzE,EAAA,EAAD,WAAW,SAAChI,EAAA,EAAD,WAAa,UAACoB,EAAA,EAAD,CAAYnN,QAAQ,KAAK6C,GAAI,CAAEmE,UAAW,UAA1C,+BAAyE6+B,WAElG4B,EAAmBzoC,KAAI,SAACijB,EAAG3V,GAAJ,OAAU,SAACwL,GAAA,IAAD,kBAAMhH,MAAI,EAASjO,GAAI,CAAEsmB,QAAS0c,GAAkBv5B,EAAI,EAAK,EAAI,KAAWg7B,IAA5E,aAA6FrlB,IAA7E3V,EAA1B,YAI/B,CACD,SAASu7B,KACP,IACMpyB,GADWlN,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACc02B,aAAa5pB,SACnC,OAAO,SAAC1B,EAAA,EAAD,WACL,SAAChI,EAAA,EAAD,WACE,SAAC+L,GAAA,GAAD,CAAMlH,WAAS,EAACC,QAAS,EAAzB,SACGjP,OAAOC,QAAQ4T,GAAUzW,KAAI,YAAkB,IAAD,eAAfC,EAAe,KAAViV,EAAU,KAC7C,OAAO,SAAC4D,GAAA,GAAD,CAAMhH,MAAI,EAAV,UACL,SAACnF,EAAA,EAAD,WAAU,SAACI,EAAA,EAAD,CAAalJ,GAAI,CAAEkF,EAAG,EAAG,eAAgB,CAAEiE,GAAI,IAA/C,UACR,SAAC,MAAD,CAAkBkI,KAAMA,SAFLjV,EAKxB,SAIR,CAED,IAAMgpC,GAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAMxC,SAASP,GAAT,GAAyF,IAA7DC,EAA4D,EAA5DA,UAAWtc,EAAiD,EAAjDA,SAAUuc,EAAuC,EAAvCA,aAC/C,GAAqEr/B,EAAAA,EAAAA,YAAWC,EAAAA,GAA3D0/B,EAArB,EAAQz/B,UAAay/B,OAAUr2B,EAA/B,EAA+BA,eAAgBnJ,EAA/C,EAA+CA,kBACvCC,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KAEFw/B,GAAoBliC,EAAAA,EAAAA,cACxB,SAAAjD,GAAQ,OAAI,SAACgpB,GAAA,EAAD,CAAgBjiB,QAAS69B,EAAzB,SAAwC5kC,GAA5C,GACR,CAAC4kC,IAGGQ,GAAiBniC,EAAAA,EAAAA,cAAY,SAACygC,EAA6B2B,GAA9B,OACjC3/B,EAAkB,CAAEw/B,QAAO,oBAAMA,GAAP,eAAgBxB,EAAO2B,KADhB,GACwC,CAACH,EAAQx/B,IAEhFoD,EAA6B,KAEjC,GAAI67B,KAAaO,EAAQ,CACvB,IAAMI,EAAa3/B,EAAKS,IAAIuO,GAAAA,GAAAA,MAAYgwB,IAAuBrqC,MACzD+P,EAAQ1E,EAAKS,IAAIuO,GAAAA,GAAAA,MAAYgwB,IAAYrqC,MACzCyqC,EAAMp/B,EAAKS,IAAIuO,GAAAA,GAAAA,KAAWra,MAEhCwO,GAAS,SAACzB,GAAA,EAAD,CAAgBT,WAAS,EAAChC,MAAK,qBAAgByF,GAASnN,MAAOooC,EAAa,OAAS,UAAWzlC,GAAI,CAAEiH,aAAc,GAApH,UACN6X,EAAAA,GAAAA,IAAM,EAAGsmB,GAAaF,IAAM/oC,KAAI,SAAAsN,GAAC,OAChC,UAACzO,GAAA,EAAD,CAAkB6C,SAAUwnC,EAAOP,KAAgBr7B,EAAI7G,SAAUyiC,EAAOP,KAAgBr7B,EAAIvC,QAAS,kBAAMq+B,EAAeT,EAAWr7B,EAAhC,EAArG,wBAAqJA,EAAIg8B,IAA1Ih8B,EADiB,KAGrC,CACD,IAAMi8B,EAAc12B,EAAes1B,eAAeQ,GAYlD,OAAO,UAAC5zB,EAAA,EAAD,CAAWlR,GAAI,CAAEuL,OAAQ,QAAzB,UACJtC,GACD,UAACC,EAAA,EAAD,YACE,SAACwgB,GAAA,EAAD,CAAoBC,YAAaob,EAAcnb,QAAS0b,EAAxD,UACE,UAACrwB,GAAA,GAAD,CAAMlH,WAAS,EAAC/N,GAAI,CAAEiuB,SAAU,UAAhC,WACE,SAAChZ,GAAA,GAAD,CAAMhH,MAAI,EAAV,UACE,SAACnO,EAAA,EAAD,CAAKD,UAAU,MAAM4O,IAAG,OAAEi3B,QAAF,IAAEA,OAAF,EAAEA,EAAanB,IAAKvkC,GAAI,CAAE0D,MAAO,GAAI6H,OAAQ,aAEvE,UAAC0J,GAAA,GAAD,CAAMhH,MAAI,EAAC7J,SAAU,EAAGpE,GAAI,CAAEiE,GAAI,GAAlC,WACE,SAACqG,EAAA,EAAD,CAAYnN,QAAQ,KAApB,gBAA0BuoC,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAa/+B,QACvC,SAAC2D,EAAA,EAAD,CAAYnN,QAAQ,YAApB,SAAiCqrB,YAK3B,OAAXkd,QAAW,IAAXA,GAAAA,EAAar8B,UAAW,SAACD,GAAA,EAAD,CAAiBC,SAAUq8B,EAAYr8B,SAAUT,UAAQ,EAACD,WAxBpE,SAACkB,GAAuC,IAAD,EACpD87B,EAAY,UAAG97B,EAAQZ,cAAX,aAAG,EAAgBjE,OACnC,SAAI2gC,GAAyC,kBAAjBA,IACNA,EAAa5qC,MAAMoF,SAASpF,MAAMqN,MAC3CzK,SAASmnC,EAGvB,IAiBmH,UAGrH,C,8CChJc,SAASc,KACtB,OAAO,SAAC,KAAD,CAAKjiC,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,EAAGrB,WAAW,UAA9D,UACL,UAACqR,GAAA,GAAD,CAAMlH,WAAS,EAACC,QAAS,EAAzB,WACE,UAACiH,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,GAAInH,GAAI,EAAGD,GAAI,EAAGvO,GAAI,CAAE2D,QAAS,OAAQoG,cAAe,SAAU9E,IAAK,GAAtF,WACE,SAAC4gC,GAAD,KACA,SAACC,GAAD,QAEDhnB,EAAAA,GAAAA,IAAM,EAAG,GAAG3iB,KAAI,SAAAsN,GAAC,OAAI,SAACwL,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,GAAInH,GAAI,EAAGD,GAAI,EAA9B,UACpB,SAACw3B,GAAD,CAAiBhoC,MAAO0L,KADkCA,EAA1C,QAKvB,CACM,SAASo8B,KAAmB,IAAD,MAChC,GAA0BngC,EAAAA,EAAAA,YAAWK,EAAAA,GAA7BD,EAAR,EAAQA,KAAMqS,EAAd,EAAcA,QACR6tB,EAAYlgC,EAAKmgC,cACjBhuB,EAAgD,GAOtD,OANAlZ,OAAOC,QAAP,UAAegnC,EAAUve,aAAzB,QAAkC,CAAC,GAAGzM,SAAQ,+BAAE5e,EAAF,KAAOiV,EAAP,YAC3CA,EAAKJ,SAA0B,IAAfI,EAAK5W,OAAewd,EAAMuJ,KAAK,CAAC,CAAC,QAASplB,GAAMiV,GADrB,IAE9CtS,OAAOC,QAAP,UAAegnC,EAAUE,cAAzB,QAAmC,CAAC,GAAGlrB,SAAQ,+BAAE5e,EAAF,KAAOiV,EAAP,YAC5CA,EAAKJ,SAA0B,IAAfI,EAAK5W,OAAewd,EAAMuJ,KAAK,CAAC,CAAC,SAAUplB,GAAMiV,GADrB,IAE/CtS,OAAOC,QAAP,UAAegnC,EAAUG,aAAzB,QAAkC,CAAC,GAAGnrB,SAAQ,+BAAE5e,EAAF,KAAOiV,EAAP,YAC3CA,EAAKJ,SAAiC,kBAAfI,EAAK5W,OAAqC,IAAf4W,EAAK5W,OAAewd,EAAMuJ,KAAK,CAAC,CAAC,QAASplB,GAAMiV,GADvD,IAEzC4G,EAAMza,QACJ,UAAC0T,EAAA,EAAD,YACL,SAAChI,EAAA,EAAD,WACE,SAACoB,EAAA,EAAD,4BAEF,SAAC7C,EAAA,EAAD,KACA,SAACyB,EAAA,EAAD,WACE,SAAC+L,GAAA,GAAD,CAAMlH,WAAS,EAAf,SACGkK,EAAM9b,KAAI,WAAYsN,GAAZ,uBAAErD,EAAF,KAAQ2S,EAAR,YAAkBA,IAAK,SAAC9D,GAAA,GAAD,CAAMhH,MAAI,EAAC0H,GAAI,GAAf,UAChC,SAAC,MAAD,CAAkBtE,KAAM0H,EAAGR,SAAQ,WAAEihB,EAAAA,GAAAA,IAAY,OAACrhB,QAAD,IAACA,OAAD,EAACA,EAAS8tB,cAAe7/B,UAAvC,aAAE,EAA4C3L,UADzB,UAACse,EAAExG,KAAKnW,WAAR,QAAe,IAAMqN,EAApE,WARS,IAc3B,CACD,SAASq8B,KACP,IAAQlnC,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACAkH,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KAEFsgC,GAD0B1gC,EAAAA,EAAAA,YAAWC,EAAAA,GAAnCC,UAAai9B,KACE1jB,QAAO,SAACnd,EAAGpD,GAAJ,OAAUoD,GAAKpD,EAAI,EAAI,EAAvB,GAA2B,GACzD,OAAO,iCACL,SAACsS,EAAA,EAAD,WACE,SAACpB,EAAA,EAAD,CAAY/K,OAAO,4BAAOnG,EAAU,yBAAjB,KAA2C,6BAAQ,UAAC,KAAD,CAAWvB,MAAO+oC,GAAa,EAAI,UAAY,UAA/C,cAA4DA,EAA5D,WAAnD,KAAkJ,SAAC/7B,GAAA,EAAD,CAAatF,OAAO,SAACuF,EAAA,EAAD,UAAa1L,EAAb,wDACvLynC,qBAAsB,CAAElpC,QAAS,iBAEpCmpC,GAAAA,EAAAA,KAAoB,SAACC,EAAK98B,GACzB,IAAMpL,GAAO,SAACgM,GAAA,EAAD,CAAatF,OAAO,SAACuF,EAAA,EAAD,UAAai8B,EAAIC,SAC5CzhC,GAAQ,4BAAOwhC,EAAI5/B,KAAX,IAAkBtI,KAChC,OAAO,UAAC6S,EAAA,EAAD,CAAmBlR,GAAI,CAAEsmB,QAASigB,EAAI78B,QAAQ5D,GAAQ,EAAI,IAA1D,WACL,SAACgK,EAAA,EAAD,CAAY/K,MAAOA,EAAOC,OAAQuhC,EAAIloC,KAAMgoC,qBAAsB,CAAElpC,QAAS,eAC5EopC,EAAI78B,QAAQ5D,KAAS,SAAC2B,EAAA,EAAD,IACrB8+B,EAAI78B,QAAQ5D,KAAS,SAACoD,EAAA,EAAD,WACpB,SAACE,GAAA,EAAD,CAAiBC,SAAUk9B,EAAIl9B,SAAUC,cAAY,EAACV,UAAQ,QAJ3Ca,EAOxB,MAEJ,CACD,SAASs8B,GAAT,GAAwD,IAA7BhoC,EAA4B,EAA5BA,MACjB65B,GAAalyB,EAAAA,EAAAA,YAAWK,EAAAA,GAAxB6xB,SACAh5B,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACR,GAAyF8G,EAAAA,EAAAA,YAAWC,EAAAA,GAAjF8gC,EAAnB,EAAQ7gC,UAAqC8gC,EAA7C,EAA2B9gC,UAAaxJ,IAA2ByJ,EAAnE,EAAmEA,kBAC7D8gC,EAAcF,EAAO5D,KAAK9kC,GAC1B8kC,GAAO3mC,EAAAA,EAAAA,UAAQ,iBAAM,CAACwqC,GAAD,gBAAwBD,EAAO5D,OAAM/4B,QAAO,SAAClL,EAAG6K,GAAJ,OAAWA,EAAI,IAAO1L,CAAtB,GAAlD,GAAgF,CAAC0oC,EAAO5D,KAAM6D,EAAoB3oC,IACjI6oC,GAAiBx3B,EAAAA,EAAAA,KACjBy3B,GAAczjC,EAAAA,EAAAA,cAAY,SAACinB,GAAD,OAAgCxkB,EAAkB,CAAEpI,KAAM,OAAQM,MAAAA,EAAOssB,QAAAA,GAAzE,GAAqF,CAACtsB,EAAO8H,IAEvHihC,EAAalP,EAAS+O,GACtBI,GAA4D7qC,EAAAA,EAAAA,UAAQ,wBAAM4qC,GAAc,CAC5FlhC,WAAU,oBAAMkhC,EAAWlhC,WAAlB,IAA6BR,YAAW,UAAEqhC,EAAOO,gBAAgBL,UAAzB,QAAyC,CAAC,IAC3F33B,eAAgB83B,EAAW93B,eAC3BnJ,kBAAmB,SAACyB,GAClB,GAAKq/B,GACC,gBAAiBr/B,EAAvB,CACA,IAAQlC,EAAgBkC,EAAhBlC,YACRS,EAAkB,CAAEpI,KAAM,kBAAmBkpC,YAAaA,EAAavhC,YAAAA,GAFlC,CAGtC,EARuE,GASvE,CAACqhC,EAAQE,EAAaG,EAAYjhC,IAC/BohC,GAAkD/qC,EAAAA,EAAAA,UAAQ,kBAAM4qC,GAAc,CAClFhhC,KAAMghC,EAAW34B,OACjBypB,SAAUA,EAFoD,GAG7D,CAACkP,EAAYlP,IAChB,OAAO,UAAC1mB,EAAA,EAAD,YACL,SAACg2B,GAAD,CAAsBvkB,aAAcgkB,EAAa9D,KAAMA,EACrDsE,QAASN,EACT9qC,MAAO6C,EAAE,WAAY,CAAEwb,MAAOrc,EAAQ,MAEvC4oC,GAAeI,IAA4B,SAACphC,EAAA,WAAD,CAA2BlL,MAAOssC,EAAlC,SACzCE,IAAuB,SAAClhC,EAAA,WAAD,CAAsBtL,MAAOwsC,EAA7B,UACtB,SAAC1K,GAAA,EAAD,CAAe5Z,aAAcgkB,EAC3BS,cAAeR,EAEfS,kBAAkB,SAAC1hC,EAAA,WAAD,CAA2BlL,MAAOssC,EAAlC,UAChB,SAAChhC,EAAA,WAAD,CAAsBtL,MAAOwsC,EAA7B,UACE,SAACK,GAAD,QAGJC,gBAAgB,SAAC5hC,EAAA,WAAD,CAA2BlL,MAAOssC,EAAlC,UACd,SAAChhC,EAAA,WAAD,CAAsBtL,MAAOwsC,EAA7B,UACE,SAACO,GAAD,QAGJC,mBAAmB,SAAC9hC,EAAA,WAAD,CAA2BlL,MAAOssC,EAAlC,UACjB,SAAChhC,EAAA,WAAD,CAAsBtL,MAAOwsC,EAA7B,UACE,SAACS,GAAD,QAGJC,gBAAc,UAKvB,CACD,SAASL,KACP,IAAQxhC,GAAUJ,EAAAA,EAAAA,YAAWK,EAAAA,GAArBD,KACFrH,GAAiBC,EAAAA,EAAAA,IAAW,kBAAMC,GAAAA,EAAAA,MAAN,GAA4B,IACxD0K,GAAWnN,EAAAA,EAAAA,UAAQ,kBAAMuC,GAC7BM,OAAOC,QAAQL,GAAAA,EAAAA,WAAyBF,EAAgBqH,IACrD7G,SAAQ,+BAAEmjB,EAAF,iBACCnjB,SAAQ,SAAA2oC,GAAE,OAAInpC,EAAe2jB,GAASK,kBAAkBmlB,EAA9C,GADX,GAFY,GAIrB,CAACnpC,EAAgBqH,IACrB,OAAKuD,GACE,SAACD,GAAA,EAAD,CAAiBC,SAAUA,EAAUC,cAAc,IADpC,IAEvB,CACD,SAASk+B,KACP,IAA0Bnd,GAAc3kB,EAAAA,EAAAA,YAAWC,EAAAA,GAA3CC,UAAaxJ,IAEfkS,GADe5I,EAAAA,EAAAA,YAAWK,EAAAA,GAAxB6xB,SACqBvN,GAAU/b,YACvC,OAAKA,EAAYkU,UACV,SAACpZ,GAAA,EAAD,CAAiBC,SAAUiF,EAAYkU,SAAUlZ,cAAc,IADpC,IAEnC,CACD,SAASo+B,KACP,IAA0Brd,GAAc3kB,EAAAA,EAAAA,YAAWC,EAAAA,GAA3CC,UAAaxJ,IAEf4S,GADetJ,EAAAA,EAAAA,YAAWK,EAAAA,GAAxB6xB,SACwBvN,GAAUrb,eACpC3F,EAAWtK,OAAOuJ,OAAO0G,EAAeq2B,QAAQpmC,SAAQ,SAAA4oC,GAAG,OAAIA,EAAIx+B,QAAR,IACjE,OAAKA,GACE,SAACD,GAAA,EAAD,CAAiBC,SAAUA,EAAUC,cAAc,IADpC,IAEvB,CAED,SAAS49B,GAAT,GAAiL,IAAjJvkB,EAAgJ,EAAhJA,aAAckgB,EAAkI,EAAlIA,KAAM9mC,EAA4H,EAA5HA,MAAOorC,EAAqH,EAArHA,QACjDvoC,GAAMC,EAAAA,EAAAA,GAAe,CAAC,gBAAiB,iBAAkB,cAAzDD,EACAiS,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACFua,GAASC,EAAAA,EAAAA,GAAUxa,GACnBi3B,GAAkBppC,EAAAA,EAAAA,IAAW,kBAAM4sB,EAAAA,EAAAA,MAAN,GAA6B,IAC1Dyc,GAAS3kC,EAAAA,EAAAA,cAAY,SAAChH,GAAD,aAA+BA,EAAI4rC,WAAW,YAAf,UAAgCppC,EAAE,iBAAD,QAAkBqpC,EAAAA,EAAAA,IAAkB7rC,EAAKgvB,KAA1E,aAAyFxsB,EAAE,qBAAD,cAAsBkpC,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAkB1rC,EAAKgvB,UAA7C,aAAsB,EAAgC1S,aAAhJ,KAAmK9Z,EAAE,iBAAD,OAAkBxC,GAArN,GAA6N,CAAC0rC,EAAiBlpC,EAAGwsB,IACvQ8c,GAAQ9kC,EAAAA,EAAAA,cAAY,SAAChH,GAAD,YAAoC,KAARA,GAAa,SAAC+rC,GAAA,EAAD,IAAgBL,GAAkB,SAACx4B,EAAA,EAAD,CAAWb,IAAG,UAAEq5B,EAAgB1rC,EAAKgvB,UAAvB,aAAE,EAA8B7b,aAAcvP,GAAI,CAAEooC,GAAI,MAAU,uBAA3J,GAAkK,CAACN,EAAiB1c,IACxMid,GAAajlC,EAAAA,EAAAA,cAAY,SAAChH,GAAD,OAAuByU,EAASvL,OAAOgjC,YAAhB,mBAAwClsC,GAAOokC,GAAAA,IAAc8C,QAApF,GAA8F,CAACzyB,IACxH03B,GAAYnlC,EAAAA,EAAAA,cAAY,SAAChH,GAAD,OAA4BymC,EAAK/4B,QAAO,SAAAlL,GAAC,OAAIA,GAAKA,IAAM+jB,CAAf,IAA6BhlB,SAASvB,IAASA,EAAI4rC,WAAW,aAAenF,EAAK7pB,MAAK,SAACpa,EAAG6K,GAAJ,OAAU7K,EAAEopC,WAAW,WAAvB,GAAhI,GAAsK,CAACnF,EAAMlgB,IACrMra,GAAyDpM,EAAAA,EAAAA,UAAQ,kBAAO,CAC5EE,IAAK,GACLL,MAAO6C,EAAF,6CAFgE,gBAIpEiS,EAASyZ,MAAMjlB,KACflJ,KAAI,SAAAS,GAAC,MAAK,CAAER,IAAKQ,EAAGb,MAAOgsC,EAAOnrC,GAAI0mC,SAAU+E,EAAWzrC,GAAtD,IACLwC,MAAK,SAAC4C,EAAGC,GACR,OAAID,EAAEshC,WAAarhC,EAAEqhC,UAAkB,GAClCthC,EAAEshC,UAAYrhC,EAAEqhC,SAAiB,EAC/BthC,EAAEjG,MAAMysC,cAAcvmC,EAAElG,MAChC,KAVoE,GAWpE,CAAC6C,EAAGmpC,EAAQM,EAAYx3B,IAC3B,OAAO,SAAC,EAAAT,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,CAAUnT,QAAQ,OAAOuG,MAAO,MAApD,UAA6D,SAAC+kC,GAAA,EAAD,CAAqBzhC,KAAK,QAAQjL,MAAOA,EAAOE,QAASqM,EAAQogC,SAAU/lB,EAAcgmB,SAAS,GAAGjsC,SAAUyqC,EAASlmC,QAASsnC,EAAWL,MAAOA,KACxN,C,8HC7Ic,SAASU,KAAkB,IAAD,EAC/B/3B,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACMsH,GAAYzS,EAAAA,EAAAA,YAAWK,EAAAA,GAA7BD,KACR,GAAwGJ,EAAAA,EAAAA,YAAWC,EAAAA,GAA3GC,EAAR,EAAQA,UAAR,IAAmBA,UAAkB+c,EAArC,EAAgCvmB,IAAmB06B,EAAnD,EAAmDA,YAAe9nB,EAAlE,EAAkEA,eAAgBnJ,EAAlF,EAAkFA,kBAC5EC,ECnDO,SAAmB6c,EAA4BkmB,GAC5D,IAAQh4B,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACR,GAA4B/N,EAAAA,EAAAA,UAAS+N,EAASi4B,QAAQR,YAAY3lB,EAAckmB,IAAhF,eAAOE,EAAP,KAAeC,EAAf,KAKA,OAJAvlC,EAAAA,EAAAA,YAAU,kBAAMulC,EAAUn4B,EAASi4B,QAAQR,YAAY3lB,EAAckmB,GAA3D,GAAwE,CAACh4B,EAAU8R,EAAckmB,KAC3GplC,EAAAA,EAAAA,YAAU,kBACRkf,EAAe9R,EAASi4B,QAAQ/lB,OAAOJ,GAAc,SAACjL,EAAGvL,EAAGvP,GAAP,MAAmB,WAANuP,GAAkB68B,EAAUpsC,EAAzC,SAA+CuB,CAD5F,GAER,CAACwkB,EAAcqmB,EAAWn4B,IACrBk4B,CACR,CD2CcE,CAAUtmB,GAAcumB,EAAAA,GAAAA,IAAwBl6B,EAAeswB,gBACtE6J,GAAU/lC,EAAAA,EAAAA,cAAY,SAAC0C,GAAD,OAAmB+K,EAASi4B,QAAQ3pC,IAAIwjB,EAAc7c,EAAtD,GAA6D,CAAC6c,EAAc9R,IAClGu4B,GAAYhmC,EAAAA,EAAAA,cAAY,WAC5B+lC,GAAQE,EAAAA,GAAAA,IAAWH,EAAAA,GAAAA,IAAwBl6B,EAAeswB,gBAC3D,GAAE,CAAC6J,EAASn6B,IACPs6B,GAAYlmC,EAAAA,EAAAA,cAChB,SAAC4B,GACCmkC,GAAQ,oBAAKrjC,GAAN,IAAYwmB,QAAO,oBAAMxmB,EAAKwmB,QAAWtnB,KACjD,GACD,CAACmkC,EAASrjC,IAENyjC,GAAmBnmC,EAAAA,EAAAA,cACvB,WACE,IAAMomC,EAAU34B,EAAS4c,QAAQlnB,IAAIX,EAAUkvB,gBACzC2U,GAAUJ,EAAAA,GAAAA,GAAWG,EAAQptC,KACnCqtC,EAAQC,SAASrgB,SAAS5rB,KAAOqI,EAAK4jC,SAASrgB,SAAS5rB,KAExDgsC,EAAQnd,OAAO9hB,MAAQg/B,EAAQh/B,MAC/Bi/B,EAAQnd,OAAO7hB,UAAY++B,EAAQ/+B,UACnCg/B,EAAQnd,OAAOtgB,WAAaw9B,EAAQx9B,WAEpC,IAAMwU,EAAO,CAAC,EACdzhB,OAAOuJ,OAAO1C,EAAUonB,mBAAmBhS,SAAQ,SAAAhZ,GAAM,IAAD,EAChDwb,EAAM3M,EAAS6I,KAAKnT,IAAIvE,GAC9B,GAAKwb,EAAL,CACA,IAAQsG,EAA0DtG,EAA1DsG,QAAS1B,EAAiD5E,EAAjD4E,OAAQiH,EAAyC7L,EAAzC6L,SAAUD,EAA+B5L,EAA/B4L,YAAa5e,EAAkBgT,EAAlBhT,MAAOtL,EAAWse,EAAXte,OACvDuqC,EAAQC,SAAS3jB,MAAMjC,GAAStZ,MAAQA,EACxCi/B,EAAQC,SAAS3jB,MAAMjC,GAAS1N,QAAUgT,EAC1CqgB,EAAQC,SAAS3jB,MAAMjC,GAAS5kB,OAASA,EACzCshB,EAAK4B,IAAU,UAAC5B,EAAK4B,UAAN,QAAiB,GAAK,EACrCiH,EAASrO,SAAQ,SAAA2b,GAAY,IAAD,EACtBA,EAAQv6B,MAAKqtC,EAAQC,SAASrgB,SAASsgB,MAAMhT,EAAQv6B,MAAO,UAACqtC,EAAQC,SAASrgB,SAASsgB,MAAMhT,EAAQv6B,YAAzC,QAAiD,GAAKu6B,EAAQC,cAC/H,GARe,CASjB,IACD6S,EAAQC,SAASlpB,KAAOzhB,OAAOyd,YAAYzd,OAAOC,QAAQwhB,GAAMrkB,KAAI,+BAAEC,EAAF,KAAO3B,EAAP,WAAkB,CAAC2B,EAC3E,IAAV3B,EAAc,EACF,IAAVA,EAAc,EACF,IAAVA,GAAiB2B,EAAe4rC,WAAW,cAAoBvtC,EAAJ,EAHG,IAIjEqP,QAAO,oDAEVq/B,EAAQM,EACT,GACD,CAAC54B,EAAU/K,EAAMF,EAAUonB,kBAAmBpnB,EAAUkvB,eAAgBqU,IAGpE7c,GAAwBpwB,EAAAA,EAAAA,UAAQ,WACpC,OAAO,oBACF4J,EAAKwmB,QADV,IAEEhD,SAAU,GACVsgB,MAAM,EACN9sB,GAAI,IAEP,GAAE,CAAChX,IACE+jC,GAAczmC,EAAAA,EAAAA,cAAY,SAACsmC,GAC/B,IAAMI,GAAQ5jC,EAAAA,GAAAA,IAAUJ,GACxBgkC,EAAMJ,SAAWA,EACjBP,EAAQW,EACT,GAAE,CAAChkC,EAAMqjC,IAEJY,GAAkB3mC,EAAAA,EAAAA,cAAY,SAACxE,GACnC,IAAMkrC,GAAQ5jC,EAAAA,GAAAA,IAAUJ,GACxBgkC,EAAMJ,SAASrgB,SAAS5rB,KAAOmB,EAC/BuqC,EAAQW,EACT,GAAE,CAAChkC,EAAMqjC,IAEJa,GAAc5mC,EAAAA,EAAAA,cAAY,SAAC4mC,GAC/B,IAAMF,GAAQ5jC,EAAAA,GAAAA,IAAUJ,GACxBgkC,EAAMJ,SAASrgB,SAASsgB,MAAQK,EAChCb,EAAQW,EACT,GAAE,CAAChkC,EAAMqjC,IAEJc,GAAmB/tC,EAAAA,EAAAA,UAAQ,WAC/B,IAAMytC,GAAK,WAAQ7jC,EAAK4jC,SAASrgB,SAASsgB,OAG1C,OAFA5qC,OAAOuJ,OAAOxC,EAAK4jC,SAAS3jB,OAAO/K,SAAQ,kBAAG5E,EAAH,EAAGA,QAASlX,EAAZ,EAAYA,OAAQsL,EAApB,EAAoBA,MAApB,OACzCm/B,EAAMvzB,IAAW,UAACuzB,EAAMvzB,UAAP,QAAmB,GAAK+T,GAAAA,GAAAA,cAAuB/T,EAASlX,EAAQsL,EADxC,IAEpC,CACLgT,KAAKlB,EAAAA,GAAAA,IAAUqtB,GAAO,SAAC/sC,EAAG8a,GAAJ,OAAUA,EAAEgf,SAAS,MAAOziB,EAAAA,GAAAA,IAAQrX,EAAI,MAAO2f,EAAAA,GAAAA,IAAS3f,EAAxD,IACtB6nB,QAAQnI,EAAAA,GAAAA,IAAUxW,EAAK4jC,SAASlpB,MAAM,SAAA5jB,GAAC,OAAI2f,EAAAA,GAAAA,IAAS3f,EAAb,IAE1C,GAAE,CAACkJ,IAEEokC,GAAgChuC,EAAAA,EAAAA,UAAQ,iBAAO,CACnD4gB,GAAI,GACJwM,SAAU,GACVltB,IAAK0J,EAAKwmB,OAAOlwB,IACjBoO,MAAO1E,EAAKwmB,OAAO9hB,MACnBC,UAAW3E,EAAKwmB,OAAO7hB,UACvBuB,WAAYlG,EAAKwmB,OAAOtgB,WACxB49B,MAAM,EAPsC,GAQ1C,CAAC9jC,IACC8xB,GAAWC,EAAAA,EAAAA,GAAYlV,EAAc,EAAGsnB,EAAkBC,GAEhDC,GAAhB,iBAA+BvS,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAWjV,UAA1C,QAA2D,CAAC,GAApDxU,OAEFi8B,GAA+CluC,EAAAA,EAAAA,UAAQ,WAC3D,GAAK07B,GAAauS,EAClB,MAAO,CACLrkC,KAAMqkC,EACNvS,SAAAA,EACAzf,QAAS2e,EAAc3e,OAAUha,EAEpC,GAAE,CAACgsC,EAAYvS,EAAUd,EAAa3e,IAEvC,OAAO,SAACvB,GAAA,EAAD,CAAO5I,QAAS,EAAhB,SACJo8B,GAAmB,UAACrkC,EAAA,WAAD,CAAsBtL,MAAO2vC,EAA7B,WAClB,SAACtqC,EAAA,EAAD,WACE,SAACoR,EAAA,EAAD,WACE,UAACpR,EAAA,EAAD,CAAKE,GAAI,CAAE2D,QAAS,OAAQsB,IAAK,EAAGC,EAAG,GAAvC,WACE,UAACpF,EAAA,EAAD,CAAKE,GAAI,CAAEoE,SAAU,EAAGT,QAAS,OAAQsB,IAAK,GAA9C,WACE,SAAC6B,EAAA,EAAD,CAAQzJ,MAAM,OAAO6J,QAASqiC,EAAkBpiC,WAAW,SAACkjC,GAAA,EAAD,IAA3D,iCACA,SAACvjC,EAAA,EAAD,CAAQzJ,MAAM,QAAQ6J,QAASkiC,EAAWjiC,WAAW,SAACmjC,GAAA,EAAD,IAArD,uBAEF,UAACzN,GAAA,EAAD,CAAwBC,WAAS,EAACriC,MAAOq8B,EAAap6B,SAAU,SAAC2G,EAAGzG,GAAJ,OAAUiJ,EAAkB,CAAEixB,YAAal6B,GAA3C,EAAiDoK,KAAK,QAAtH,WACE,SAAC+1B,GAAA,EAAD,CAActiC,OAAO,EAAOmI,UAAWk0B,EAAvC,4BACA,SAACiG,GAAA,EAAD,CAActiC,OAAO,EAAMmI,SAAUk0B,EAArC,6CAKR,SAACh3B,EAAA,EAAD,WACE,UAACmV,GAAA,GAAD,CAAMlH,WAAS,EAACC,QAAS,EAAGhO,GAAI,CAAEmZ,eAAgB,UAAYhC,QAAS,EAAvE,WACE,SAAClC,GAAA,GAAD,CAAMhH,MAAI,EAACjO,GAAI,CAAEoE,UAAW,GAA5B,UACE,SAACmmC,GAAD,CAAkBje,OAAQA,EAAQgd,UAAWA,EAAWhK,cAAetwB,EAAeswB,mBAExF,SAACrqB,GAAA,GAAD,CAAMhH,MAAI,EAACjO,GAAI,CAAEoE,SAAU,GAA3B,UACE,SAAComC,GAAD,CAAuBC,aAAc3kC,EAAK4jC,SAAUgB,gBAAiBb,OAEvE,SAAC50B,GAAA,GAAD,CAAMhH,MAAI,EAACjO,GAAI,CAAEoE,SAAU,GAA3B,UACE,SAACumC,GAAD,CAAiBthB,SAAUvjB,EAAK4jC,SAASrgB,SAASsgB,MAAOK,YAAaA,EAAaY,aAAc9kC,EAAK4jC,SAASrgB,SAAS5rB,KAAMssC,gBAAiBA,EAAiB1pC,aAActB,OAAOuJ,OAAOxC,EAAK4jC,SAAS3jB,OAAO5pB,KAAI,SAAAqN,GAAC,OAAIA,EAAE4M,OAAN,cAI5N,SAAClF,EAAA,EAAD,CAAWlR,GAAI,CAAEoE,SAAU,EAAGc,EAAG,GAAjC,UACE,SAACumB,GAAD,UAEsB,SAACnb,EAAA,EAAD,CAAUnT,QAAQ,cAAcuG,MAAM,OAAO6H,OAAQ,OAElF,CAED,SAASg/B,GAAT,GAAmL,IAAvJje,EAAsJ,EAAtJA,OAAQgd,EAA8I,EAA9IA,UAAWhK,EAAmI,EAAnIA,cACrCljC,EAAkDkwB,EAAlDlwB,IAAR,EAA0DkwB,EAA7C9hB,MAAAA,OAAb,MAAqB,EAArB,IAA0D8hB,EAAlCtgB,WAAAA,OAAxB,MAAqC,EAArC,IAA0DsgB,EAAlB7hB,UAAAA,OAAxC,MAAoD,EAApD,EACM6D,GAAc5P,EAAAA,EAAAA,IAAW,kBAAMqO,GAAAA,EAAAA,IAAgB3Q,EAAtB,GAA4B,CAACA,IAC5D,GAA+B82B,EAAAA,EAAAA,KAA/B,eAAOxmB,EAAP,KAAa6wB,EAAb,KAAqB5wB,EAArB,KACQ7G,GAASJ,EAAAA,EAAAA,YAAWK,EAAAA,GAApBD,KACF+kC,GAAe3uC,EAAAA,EAAAA,UAAQ,kBAAMoS,GAAege,IAAUE,EAAAA,GAAAA,IAAc,CAACle,EAAYxI,MAAM2mB,EAAAA,GAAAA,IAAiBH,IAAjF,GAA4F,CAAChe,EAAage,IACvI,OAAO,UAACpb,EAAA,EAAD,CAAWlR,GAAI,CAAEkF,EAAG,EAAGqG,OAAQ,QAA/B,WACL,SAACkB,GAAA,EAAD,CAAsBhC,UAAWA,EAAWiC,KAAMA,EAAMC,OAAQA,EAAQC,SAAU,SAAA8K,GAAC,OAAI4xB,EAAU,CAAEltC,IAAKsb,GAArB,EAA2B7K,iBAAkByyB,KAChI,UAACx/B,EAAA,EAAD,CAAK6D,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,EAAhD,WACE,UAACnF,EAAA,EAAD,CAAK6D,QAAQ,OAAOsB,IAAK,EAAzB,UACGqJ,IAAe,SAACxO,EAAA,EAAD,CACd6O,UAAS,eAAUL,EAAYpP,OAAtB,QACTW,UAAU,MACV4O,IAAKH,EAAYI,OAAO4d,EAAO7hB,WAC/BzK,GAAI,CAAE8qC,WAAY,EAAGz2B,UAAW,EAAG4V,SAAU,MAAOhjB,aAAc,MAEpE,UAAC2P,GAAA,EAAD,CAAO5I,QAAS,EAAG5J,SAAU,EAA7B,WACE,SAAC0C,EAAA,EAAD,CAAQC,WAAS,EAAC1J,MAAM,OAAO2C,GAAI,CAAEoE,SAAU,GAAK8C,QAASq2B,EAA7D,UAAqE,SAACz9B,EAAA,EAAD,CAAKE,GAAI,CAAEiqB,SAAU,QAArB,gBAAgC3b,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAa3H,UACtG,OAAX2H,QAAW,IAAXA,OAAA,EAAAA,EAAaqe,iBAAiB,SAAC5gB,GAAA,EAAD,CAAoBC,WAAYA,EAAYC,cAAe,SAAAE,GAAC,OAAIm9B,EAAU,CAAEt9B,WAAYG,GAA5B,UAG9FmC,IAAe,SAAC/D,EAAA,EAAD,CAAaC,MAAOA,EAAOC,UAAWA,EAAW/H,QAAS4mC,EAAW5+B,QAAS4D,EAAYqe,iBAC1G,UAAC7jB,EAAA,EAAD,YACE,SAACgH,EAAA,EAAD,CAAY/K,MAAO,aAAcshC,qBAAsB,CAAElpC,QAAS,gBAClE,SAACsK,EAAA,EAAD,IACCojC,IAAgB,SAACzyB,GAAA,GAAD,UACd,CAACtD,GAAAA,GAAAA,OAAAA,KAAmBA,GAAAA,GAAAA,OAAAA,IAAkBA,GAAAA,GAAAA,OAAAA,MAAmB3Y,KAAI,SAACkV,EAAM5H,GACnE,IAAMsP,EAAI8xB,EAAatkC,IAAI8K,GAC3B,OAAI0H,EAAE9H,UAAY8H,EAAEte,MAAc,MAC3B,SAAC,MAAD,CAAmC4W,KAAM0H,EAAGlZ,UAAWyY,GAAAA,IAAhCS,EAAExG,KAAKnW,IACtC,SAGJ0J,IAAI,OAAIwI,QAAJ,IAAIA,OAAJ,EAAIA,EAAakU,YAAY,SAACpZ,GAAA,EAAD,CAAiBC,SAAUiF,EAAYkU,gBAG9E,CAED,SAASgoB,GAAT,GAC6F,IAD5DC,EAC2D,EAD3DA,aAAcC,EAC6C,EAD7CA,gBAEvCK,GAAU3nC,EAAAA,EAAAA,cAAY,SAAC0gB,GAAD,OAAsB,SAACjH,GACjD,IAAMmuB,GAAgB9kC,EAAAA,GAAAA,IAAUukC,GAChCO,EAAcjlB,MAAMjC,GAAWjH,EAC/B6tB,EAAgBM,EACjB,CAJ2B,GAIzB,CAACP,EAAcC,IAEZO,GAAY7nC,EAAAA,EAAAA,cAAY,SAACqhB,GAC7B,IAAMumB,GAAgB9kC,EAAAA,GAAAA,IAAUukC,GAChCO,EAAcxqB,KAAOiE,EACrBimB,EAAgBM,EACjB,GAAE,CAACP,EAAcC,IAElB,OAAO,UAAC9zB,GAAA,EAAD,CAAO5I,QAAS,EAAGhO,GAAI,CAAEuL,OAAQ,QAAjC,WACL,SAAC2F,EAAA,EAAD,CAAWlR,GAAI,CAAEkF,EAAG,GAApB,UACE,SAAC0R,GAAA,EAAD,CAAO5I,QAAS,EAAhB,SACG4O,EAAAA,GAAAA,KAAgB,SAAApT,GAAC,OAAI,SAAC0hC,GAAD,CAA+BpnB,QAASta,EAAGqT,KAAM4tB,EAAa1kB,MAAMvc,GAAIuhC,QAASA,EAAQvhC,IAA7DA,EAAhC,SAGtB,SAAC2hC,GAAD,CAAoB1mB,OAAQgmB,EAAajqB,KAAMyqB,UAAWA,MAE7D,CACD,SAASC,GAAT,GAAqK,IAAD,EAAnIpnB,EAAmI,EAAnIA,QAASjH,EAA0H,EAA1HA,KAAeuuB,EAA2G,EAApHL,QACtCvgC,EAA2BqS,EAA3BrS,MAAO4L,EAAoByG,EAApBzG,QAASlX,EAAW2d,EAAX3d,OAClBmG,EAAO8kB,GAAAA,GAAAA,cAAuBrG,GAC9BinB,GAAU3nC,EAAAA,EAAAA,cAAY,SAAC4B,GAC3BomC,GAAY,oBAAKvuB,GAAS7X,GAC3B,GAAE,CAAC6X,EAAMuuB,IACJ7L,GAAYn8B,EAAAA,EAAAA,cAChB,SAAC+I,GAAuB,IAAD,EACfk/B,EAAI,UAAGC,GAAAA,GAAiBn/B,UAApB,QAA0B,EAClB4+B,EAAdvgC,EAAQ6gC,EAAc,CAAEnsC,OAAQiN,EAAG3B,MAAO6gC,GACjC,CAAEnsC,OAAQiN,GACxB,GAAE,CAAC3B,EAAOugC,IAEb,OAAO,UAACjrC,EAAA,EAAD,CAAK6D,QAAQ,OAAOsB,IAAK,EAAGkU,eAAe,gBAAgBvV,WAAW,SAAtE,WACL,SAAC2nC,GAAA,EAAD,CAAoBltC,KAAMmtC,GAAAA,GAAY1nB,MACtC,SAAChb,EAAA,EAAD,CAAU9I,GAAI,CAAEuL,OAAQ,OAAQsjB,SAAU,MAAOzqB,SAAU,EAAGT,QAAS,QAAvE,SACmB,IAAhB0B,EAAK7H,QACJ,UAACsC,EAAA,EAAD,CAAKoF,EAAG,EAAGiU,eAAe,SAASvV,WAAW,SAASF,MAAM,OAAOC,QAAQ,OAAOsB,IAAK,EAAxF,UAA4FxE,GAAAA,EAAS4E,EAAK,IAAK7E,GAAAA,GAAAA,OAAc6E,EAAK,QAClI,SAACmC,GAAA,EAAD,CAAgBxH,GAAI,CAAEgE,GAAI,GAAK+C,WAAS,EAAChC,OAAO,SAAC,KAAD,CAAcqR,QAASA,IAAa/Y,MAAK,UAAEmD,GAAAA,GAAAA,WAAkB4V,UAApB,QAAgC,UAAzH,SACG/Q,EAAKlJ,KAAI,SAAAsvC,GAAG,OACX,SAACzwC,GAAA,EAAD,CAAoB4H,SAAUwT,IAAYq1B,EAAKvkC,QAAS,kBAAM6jC,EAAQ,CAAE30B,QAASq1B,GAAzB,EAAxD,UACE,SAAC,KAAD,CAAqBr1B,QAASq1B,KADjBA,EADJ,SAMnB,SAACjkC,GAAA,EAAD,CAAgBxH,GAAI,CAAEgE,GAAI,GAAKe,OAAO,4BAAO7F,EAAP,KAAe,SAAC,KAAD,CAAiBb,KAAMqtC,GAAAA,SAA5E,SACG,CAAC,EAAG,EAAG,GAAGvvC,KAAI,SAAAgQ,GAAC,OACd,SAACnR,GAAA,EAAD,CAAkB4H,SAAU1D,IAAWiN,EAAGjF,QAAS,kBAAMq4B,EAAUpzB,EAAhB,EAAnD,UACE,4BAAOA,EAAP,KAAU,SAAC,KAAD,CAAiB9N,KAAMqtC,GAAAA,UADpBv/B,EADD,OAKlB,SAACiI,GAAA,GAAD,CAAmBzS,eAAe,IAAIlH,MAAO+P,EAAOnN,MAAO8sB,GAAAA,GAAAA,aAAsB3f,GAAQ9N,SAAU,SAAA6G,GAAC,YAAUpF,IAANoF,GAAmBwnC,EAAQ,CAAEvgC,MAAOjH,GAAxC,EAA8CvD,GAAI,CAAEiH,aAAc,EAAGhD,GAAI,EAAG0nC,GAAI,EAAGpgC,OAAQ,QAAUrH,WAAY,CAAElE,GAAI,CAAEiE,GAAI,GAAKP,MAAO,OAASgB,IAAK,GAAID,IAAK,MACpQ,SAACqE,EAAA,EAAD,CAAU9I,GAAI,CAAEuL,OAAQ,OAAQsjB,SAAU,OAA1C,UACE,SAAC/uB,EAAA,EAAD,CAAKoF,EAAG,EAAGf,UAAU,SAArB,oBAAkC2mB,EAAAA,GAAAA,IAAiBX,GAAAA,GAAAA,cAAuB/T,EAASlX,EAAQsL,GAAQhK,GAAAA,GAAAA,KAAY4V,KAA/G,OAA2H5V,GAAAA,GAAAA,KAAY4V,UAG5I,CAED,SAAS+0B,GAAT,GAA+F,IAAjE1mB,EAAgE,EAAhEA,OAAQwmB,EAAwD,EAAxDA,UAC9BxsC,GAAiBC,EAAAA,EAAAA,IAAW,kBAAMC,GAAAA,EAAAA,MAAN,GAA4B,IACxDitC,GAASxoC,EAAAA,EAAAA,cAAY,SAACgf,GACrBA,GAAW3jB,GAChBwsC,GAAU,oBAAKxmB,GAAN,eAAerC,EAASoE,SAASznB,OAAOsG,KAAK5G,EAAe2jB,GAAQ8D,YAAY,MAC1F,GAAE,CAACzB,EAAQwmB,EAAWxsC,IAEjBotC,GAAWzoC,EAAAA,EAAAA,cAAY,SAACgf,GAAD,OAA4B,SAAC3nB,GAAD,OAAsBwwC,GAAU,oBAAKxmB,GAAN,eAAerC,EAAS3nB,IAAvD,CAA5B,GAA6F,CAACgqB,EAAQwmB,IAC7Ha,GAAc1oC,EAAAA,EAAAA,cAAY,SAACgf,GAAD,OAA4B,WACzBqC,EAAxBrC,GAAT,IAAwB2pB,GAAxB,QAAiCtnB,EAAjC,CAASrC,GAAT,WACA6oB,GAAU,WAAKc,GAChB,CAH+B,GAG7B,CAACtnB,EAAQwmB,IAENlqB,EAAY,EAAIhiB,OAAOuJ,OAAOmc,GAAQtF,QAAO,SAACnd,EAAGC,GAAJ,OAAUD,EAAIC,CAAd,GAAiB,GAEpE,OAAO,UAAC2U,GAAA,EAAD,CAAO5I,QAAS,EAAGhO,GAAI,CAAEoE,SAAU,GAAnC,UACJrF,OAAOC,QAAQylB,GAAQtoB,KAAI,+BAAEimB,EAAF,KAAU3nB,EAAV,YAAqB,SAACuxC,GAAD,CAAgC5pB,OAAQA,EAAQ3nB,MAAOA,EAAOoxC,SAAUA,EAASzpB,GAAS0pB,YAAaA,EAAY1pB,GAASrB,UAAWA,GAA/GqB,EAA7C,KAC5B,SAAClR,EAAA,EAAD,CAAWlR,GAAI,CAAEoE,SAAU,GAA3B,UACE,SAAC,MAAD,CACElD,aAAW,EACX+qC,kBAAgB,EAChBjlC,KAAK,QACLlF,UAAW,GACXC,aAAc6pC,EACd5rC,GAAI,SAACpF,GAAD,MAAY,CACdwJ,SAAU,EACV,uBAAwB,CACtBg+B,wBAAyBxnC,EAAMimB,MAAM5Z,aACrCo7B,uBAAwBznC,EAAMimB,MAAM5Z,cAJpC,EAOJ9F,YAAa,mBACbF,QAAS,SAACmhB,GAAD,OAAYrjB,OAAOsG,KAAKof,GAAQ9mB,SAASykB,MAAW,OAAC3jB,QAAD,IAACA,GAAAA,EAAiB2jB,KAAWrjB,OAAOsG,KAAK5G,EAAe2jB,GAAQ8D,YAAYlV,OAAM,SAAA+H,GAAC,OAAIyN,SAASzN,GAAKgI,CAAlB,GAAvI,QAKhB,CACD,SAASirB,GAAT,GAA6M,IAAhL5pB,EAA+K,EAA/KA,OAAQ3nB,EAAuK,EAAvKA,MAAOoxC,EAAgK,EAAhKA,SAAUC,EAAsJ,EAAtJA,YAAa/qB,EAAyI,EAAzIA,UAC3DwN,GAAgB7vB,EAAAA,EAAAA,IAAW,kBAAMC,GAAAA,EAAAA,IAAkByjB,EAAxB,GAAiC,IAG5D6D,GAAe/pB,EAAAA,EAAAA,UAAQ,WAC3B,OAAIzB,EAAQ,IAAM8zB,EAAsB,GACjCxvB,OAAOsG,KAAKkpB,EAAcrI,YAAYpc,QAAO,SAAAuY,GAAS,uBAAIkM,EAAcrI,WAAW7D,UAA7B,aAAI,EAAqCG,SAASxJ,MAAK,SAAAmN,GAAG,MAAI,WAAYA,CAAhB,GAA1D,GAC9D,GAAE,CAACoI,EAAe9zB,IAEnB,OAAK8zB,GACE,UAACrd,EAAA,EAAD,YACL,UAACpR,EAAA,EAAD,CAAK6D,QAAQ,OAAb,WACE,SAAC+qB,GAAA,EAAD,CAAoBH,cAAeA,EAAeC,SAAU/zB,EAA5D,UACE,UAACqF,EAAA,EAAD,CAAKsE,SAAU,EAAGc,EAAG,EAAGvB,QAAQ,OAAOsB,IAAK,EAAGrB,WAAW,SAA1D,WACE,SAACuN,GAAA,EAAD,CAASnK,KAAM,EAAGhH,GAAI,CAAEoR,GAAI,GAAK3C,IAAK8f,EAAcnI,cACpD,SAACtmB,EAAA,EAAD,UAAOyuB,EAAc2d,WACrB,SAAC5b,GAAA,EAAD,UAGJ,UAAC3oB,GAAA,EAAD,YACE,SAACH,GAAA,EAAD,CAAgBR,KAAK,QAAQjC,OAAO,UAACjF,EAAA,EAAD,CAAK0L,WAAW,SAAhB,UAA0B/Q,EAA1B,UAApC,SACGsE,OAAOsG,KAAKkpB,EAAcrI,YAAY/pB,KAAI,SAAAimB,GAAM,OAAIoE,SAASpE,EAAb,IAAsBjmB,KAAI,SAAAimB,GAAM,OAC/E,UAACpnB,GAAA,EAAD,CAAuB4H,SAAUnI,IAAU2nB,GAAUA,EAAUrB,EAAYtmB,EAAQyM,QAAS,kBAAM2kC,EAASzpB,EAAf,EAA5F,UAAkIA,EAAlI,SAAeA,EADgE,OAInF,SAACtb,EAAA,EAAD,CAAQzJ,MAAM,QAAQ2J,KAAK,QAAQE,QAAS4kC,EAA5C,UACE,SAACK,GAAA,EAAD,cAIHlmB,EAAazoB,SAAU,SAACoZ,GAAA,EAAD,CAAO5I,QAAS,EAAGhO,GAAI,CAAEkF,EAAG,GAA5B,SACvB+gB,EAAa9pB,KAAI,SAAAkmB,GAAS,OACzB,SAACF,GAAD,CAAkCC,OAAQA,EAAQC,UAAWmE,SAASnE,GAAsB1Z,YAAU,EAAC2Z,kBAAgB,GAAhGD,EADE,SAtBJ,IA2B5B,CACD,SAASsoB,GAAT,GAA4S,IAAjRthB,EAAgR,EAAhRA,SAAU2gB,EAAsQ,EAAtQA,YAAaY,EAAyP,EAAzPA,aAAcb,EAA2O,EAA3OA,gBAAiB1pC,EAA0N,EAA1NA,aACzEwrC,GAAWzoC,EAAAA,EAAAA,cAAY,SAAChH,GAAD,OAAqB,SAACQ,GAAD,OAAeotC,GAAY,oBAAK3gB,GAAN,eAAiBjtB,EAAMQ,IAAjD,CAArB,GAA4E,CAACysB,EAAU2gB,IAC5GprC,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACFwtC,EAA6F,IAAxFrtC,OAAOC,QAAQqqB,GAAUlK,QAAO,SAACvgB,EAAD,sBAAK8Y,EAAL,YAAe9Y,EAAf,KAAwBurB,GAAAA,GAAAA,aAAsBzS,EAA9C,GAAmD,GACxFuT,EAAQlsB,OAAOC,QAAQqqB,GAAUlK,QAAO,SAACvgB,EAAD,sBAAK8Y,EAAL,YAAe9Y,EAAf,KAAwBurB,GAAAA,GAAAA,aAAsBzS,OAAGvZ,EAAWysC,EAA5D,GAA4E,GAC1H,OAAO,UAAC15B,EAAA,EAAD,CAAWlR,GAAI,CAAEkF,EAAG,EAAGqG,OAAQ,QAA/B,WACL,UAACzL,EAAA,EAAD,CAAKE,GAAI,CAAEwQ,GAAI,EAAG7M,QAAS,OAAQsB,IAAK,GAAxC,WACE,SAACuC,GAAA,EAAD,CAAgBT,WAAS,EAAChC,MAAOnG,EAAE,8BAAD,OAA+BgsC,IAAjE,SACGyB,EAAAA,GAAAA,KAAgB,SAAA3kC,GAAE,OAAI,SAAC1M,GAAA,EAAD,CAAmB4H,SAAUgoC,IAAiBljC,EAAIR,QAAS,kBAAM6iC,EAAgBriC,EAAtB,EAA3D,SAAuF9I,EAAE,8BAAD,OAA+B8I,KAAxGA,EAAnB,OAErB,SAACijB,GAAA,EAAD,CAAkB5lB,OAAO,SAACuF,EAAA,EAAD,UAAa1L,EAAb,sDAA4DgsB,UAAU,MAA/F,UACE,UAAC9hB,EAAA,EAAD,CAAU9I,GAAI,CAAEmE,UAAW,SAAU2J,GAAI,GAAK9J,GAAI,EAAG6qB,SAAU,OAAQrjB,WAAY,SAAU7H,QAAS,OAAQsB,IAAK,EAAGkU,eAAgB,WAAYvV,WAAY,UAA9J,WACE,UAAC,KAAD,CAAWvG,MAAO4tB,EAAQ,GAAK,eAAY9sB,EAA3C,qBAA8D,4BAAS8sB,EAAMtC,QAAQ,SACrF,UAAC,KAAD,CAAWtrB,MAAO4tB,EAAQ,GAAK,eAAY9sB,EAA3C,kBAA2D,8BAASiuC,EAAGzjB,QAAQ,GAApB,mBAIjE,SAAC/R,GAAA,EAAD,CAAO5I,QAAS,EAAhB,SACGjP,OAAOC,QAAQqqB,GAAUltB,KAAI,+BAAEub,EAAF,KAAK9a,EAAL,YAAY,SAAC0vC,GAAD,CAA+Bl2B,QAASsB,EAAGjd,MAAOmC,EAAGivC,SAAUA,EAASn0B,GAAIkzB,aAAcA,EAAcvqC,aAAcA,GAA1FqX,EAAxC,QAGnC,CACD,SAAS40B,GAAT,GAAyN,IAAxLl2B,EAAuL,EAAvLA,QAAS3b,EAA8K,EAA9KA,MAAOoxC,EAAuK,EAAvKA,SAAUjB,EAA6J,EAA7JA,aAAcvqC,EAA+I,EAA/IA,aAC/DzB,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACF6T,EAAOjS,GAAAA,GAAAA,KAAY4V,GACnBm2B,EAAepiB,GAAAA,GAAAA,aAAsB/T,EAAS,EAAGw0B,GACjDwB,EAAK3xC,EAAQ0vB,GAAAA,GAAAA,aAAsB/T,GAAW,IAC9C6U,EAAQxwB,EAAQ8xC,EAChBC,EAAWnsC,EAAa8e,QAAO,SAACvgB,EAAG6tC,GAAJ,OAAW7tC,GAAK6tC,IAAOr2B,EAAU,EAAI,EAArC,GAAyC,GACxEs2B,EAA4B,GAAhB,EAAIF,GAChBG,EAAU1hB,EAAQyhB,EACxB,OAAO,UAAC5sC,EAAA,EAAD,CAAK6D,QAAQ,OAAOsB,IAAK,EAAGkU,eAAe,gBAAgBvV,WAAW,SAAtE,WACL,UAACkF,EAAA,EAAD,CAAU9I,GAAI,CAAEkF,EAAG,GAAK2pB,SAAU,OAAQzqB,SAAU,EAAGT,QAAS,OAAQsB,IAAK,EAAGrB,WAAY,SAAUuV,eAAgB,UAAtH,UACG1Y,GAAAA,EAAS2V,GAAU5V,GAAAA,GAAAA,OAAc4V,GAAU5V,GAAAA,GAAAA,KAAY4V,OAE1D,SAAChC,GAAA,GAAD,CACE/W,MAAO5C,EAAQ,UAAY,UAC3B6Z,MAAgC,MAAzB9T,GAAAA,GAAAA,KAAY4V,GACnB7B,aAAc/T,GAAAA,GAAAA,KAAY4V,KAAY,SAACtW,EAAA,EAAD,CAAK4D,MAAM,MAAM7D,UAAU,SACjEpF,MAAOmyC,WAAWnyC,EAAMkuB,QAAQ,IAChCjsB,SAAU,SAAAE,GAAC,YAAUuB,IAANvB,GAAmBivC,EAASjvC,EAAhC,EACXoD,GAAI,CAAEiH,aAAc,EAAGjD,GAAI,EAAGuH,OAAQ,OAAQ7H,MAAO,OACrDQ,WAAY,CAAElE,GAAI,CAAEmE,UAAW,SAAWM,IAAK,MACjD,SAAC2P,GAAA,GAAD,CACE/W,MAAO5C,EAASkyC,EAAU,UAAY,UAAa,UACnDr4B,OAAK,EACL3S,gBAAgB,UAAC7B,EAAA,EAAD,CAAKE,GAAI,CAAEwL,WAAY,SAAU9H,MAAO,MAAOC,QAAS,OAAQwV,eAAgB,iBAAhF,WAAmG,6BAAO2R,EAAAA,GAAAA,IAAiByhB,EAAc95B,GAAOA,MAAY,mCAC5KhY,MAAOmyC,WAAW3hB,EAAMtC,QAAQ,IAChCjsB,SAAU,SAAAE,GAAC,YAAUuB,IAANvB,GAAmBivC,EAASjvC,EAAI2vC,EAApC,EACXvsC,GAAI,CAAEiH,aAAc,EAAGjD,GAAI,EAAG2nC,GAAI,EAAGpgC,OAAQ,OAAQ7H,MAAO,OAC5DQ,WAAY,CAAElE,GAAI,CAAEmE,UAAW,QAASikC,GAAI,IAAQ3jC,IAAK,EAAGE,KAAM,MACpE,SAACgmB,GAAA,EAAD,CAAkB5lB,OAAO,SAACuF,EAAA,EAAD,UAAa1L,EAAE4tC,EAAQ,wDAA8D,CAAE/xC,MAAOiyC,MAA2B9hB,UAAU,MAA5J,UACE,SAAC9hB,EAAA,EAAD,CAAU9I,GAAI,CAAEmE,UAAW,SAAUe,EAAG,GAAK2pB,SAAU,OAAvD,UACE,UAAC,KAAD,CAAWxxB,MAAOsvC,EAAU,eAAYxuC,EAAxC,kBAAuD,8BAASiuC,EAAGzjB,QAAQ,GAApB,gBAK9D,C,gBEjac,SAASkkB,KACtB,IACQzwC,GADcsJ,EAAAA,EAAAA,YAAWC,EAAAA,GAAzBC,UACAxJ,IACF+S,GAAeC,EAAAA,EAAAA,KACrB,IAAMhT,EAAI4rC,WAAW,YAAc,OAAO,KAE1C,IAAMtvB,EAAaI,EAAAA,EAAAA,MAAiB,SAAAzV,GAAC,OAAIjH,EAAIuR,cAAchQ,SAAS0F,EAA/B,IAErC,OAAO,SAACmE,GAAA,EAAD,CAAgBnK,MAAOqb,EAAY3T,OAAO,6BAAS+nC,EAAAA,GAAAA,IAAI,WAAD,OAAYp0B,MAAlE,SACJq0B,EAAAA,GAAAA,KAAqB,SAAA12B,GAAM,OAC1B,SAACrb,GAAA,EAAD,CAAuB6C,SAAU6a,IAAerC,EAAQzT,SAAU8V,IAAerC,EAAQnP,QAAS,kBAAMiI,GAAa69B,EAAAA,EAAAA,IAAkB5wC,EAAoBia,GAAzD,EAAlG,UACE,6BAAQ,SAAC,KAAD,CAAWhZ,MAAOgZ,EAAlB,UAA2By2B,EAAAA,GAAAA,IAAI,WAAD,OAAYz2B,SADrCA,EADW,KAI/B,C,+BCdc,SAAS42B,KACtB,IAAQruC,GAAMC,EAAAA,EAAAA,GAAe,MAArBD,EACAiS,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SAEAzU,GADcsJ,EAAAA,EAAAA,YAAWC,EAAAA,GAAzBC,UACAxJ,IACFgvB,GAASC,EAAAA,EAAAA,GAAUxa,GACnBq8B,GAAe9pC,EAAAA,EAAAA,cAAY,kBAAMyN,EAASvL,OAAOnG,IAAI,SAAU,CAAEisB,OAAmB,MAAXA,EAAiB,IAAM,KAArE,GAA6E,CAACA,EAAQva,IACvH,OAAMzU,EAAI4rC,WAAW,aACd,UAAClhC,EAAA,EAAD,CAAQI,QAASgmC,EAAc/lC,UAAsB,MAAXikB,GAAiB,SAAC+hB,GAAA,EAAD,KAAa,SAACC,GAAA,EAAD,IAAxE,WAAkF,4BAASxuC,EAAE,UAAD,OAAWwsB,MAAvG,QADmC,IAE3C,CCmBc,SAASiiB,KACtB,IAAMvK,GAAWC,EAAAA,EAAAA,MACTlyB,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACFhD,GAAUzK,EAAAA,EAAAA,cAAY,kBAAM0/B,EAAS,cAAf,GAA+B,CAACA,IACtDngB,GAAiB2qB,EAAAA,EAAAA,MAAjB3qB,aAEN,OADoB9R,EAASyZ,MAAMjlB,KAAK1H,SAASglB,IAExC,SAAC,KAAD,CAAU2Z,GAAG,iBAEf,SAACx8B,EAAA,EAAD,CAAK6rC,GAAI,EAAGhoC,QAAQ,OAAOoG,cAAc,SAAS9E,IAAK,EAAvD,UACL,SAAC,EAAAmL,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,CAAUnT,QAAQ,cAAcuG,MAAM,OAAO6H,OAAQ,MAAzE,SACGoX,IAAgB,SAAC4qB,GAAD,CAAsB5qB,aAAcA,EAAc9U,QAASA,OAGjF,CAMD,SAAS0/B,GAAT,GAAqF,IAAD,MAApD5qB,EAAoD,EAApDA,aAAc9U,EAAsC,EAAtCA,QACtCjI,GAAYivB,EAAAA,EAAAA,GAAalS,GACvB9R,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SACFua,GAASC,EAAAA,EAAAA,GAAUxa,GACnB7B,GAAiBtQ,EAAAA,EAAAA,IAAW,kBAAM4sB,EAAAA,EAAAA,IAAmB3I,EAAcyI,EAAvC,GAAgD,CAACzI,EAAcyI,IAC3FwM,GAAWC,EAAAA,EAAAA,GAAYlV,GACbwnB,GAAhB,iBAA+BvS,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAWjV,UAA1C,QAA2D,CAAC,GAApDxU,OACR,cAAuCq/B,EAAAA,EAAAA,IAAS,CAAEpnC,KAAM,4BAA6BqnC,KAAK,WAA1F,QAAsG,CAAExwC,OAAQ,CAAEywC,IAAK,cAAjHzwC,OAAUywC,IAAAA,OAAhB,MAAsB,WAAtB,EACQ9uC,GAAMC,EAAAA,EAAAA,GAAe,CAAC,gBAAiB,mBAAvCD,GAER+uC,EAAAA,EAAAA,IAASzxC,EAAAA,EAAAA,UAAQ,2BAAS0C,EAAE,iBAAD,QAAkBqpC,EAAAA,EAAAA,IAAkBtlB,EAAcyI,KAA5D,cAA4ExsB,EAAE,uBAAD,OAAwB8uC,IAArG,GAA+G,CAAC9uC,EAAG+jB,EAAcyI,EAAQsiB,KAE1J,IAAM7nC,GAAoB0xB,EAAAA,EAAAA,GAAmB,iBAAC3xB,QAAD,IAACA,OAAD,EAACA,EAAWxJ,WAAZ,QAAmB,IAE1DguC,GAA+CluC,EAAAA,EAAAA,UAAQ,WAC3D,GAAK07B,GAAauS,EAClB,MAAO,CACLrkC,KAAMqkC,EACNvS,SAAAA,EACAzf,aAASha,EAEZ,GAAE,CAACgsC,EAAYvS,IAEVgW,GAAyD1xC,EAAAA,EAAAA,UAAQ,WACrE,GAAK0J,GAAcoJ,EACnB,MAAO,CACLpJ,UAAAA,EACAoJ,eAAAA,EACAnJ,kBAAAA,EAEH,GAAE,CAACD,EAAWoJ,EAAgBnJ,IAC/B,OAAO,SAACiD,EAAA,EAAD,UACJshC,GAAoBwD,GAAwB,SAACjoC,EAAA,WAAD,CAA2BlL,MAAOmzC,EAAlC,UAAyD,SAAC7nC,EAAA,WAAD,CAAsBtL,MAAO2vC,EAA7B,UACpG,SAAC,IAAD,WAAoB,UAAClhC,EAAA,EAAD,CAAalJ,GAAI,CAAE2D,QAAS,OAAQoG,cAAe,SAAU9E,IAAK,GAAlE,WAClB,UAACnF,EAAA,EAAD,CAAK6D,QAAQ,OAAb,WACE,UAAC7D,EAAA,EAAD,CAAK6D,QAAQ,OAAOsB,IAAK,EAAGgpB,SAAS,OAAO7pB,SAAU,EAAtD,WACE,SAAC2K,EAAD,KACA,SAAC89B,GAAD,KACA,SAACI,GAAD,KACA,SAACY,GAAD,KACA,SAACC,EAAA,EAAD,KACA,SAACC,GAAD,SAEClgC,IAAW,SAACkC,EAAA,EAAD,CAAa7I,QAAS2G,QAEtC,UAAC/N,EAAA,EAAD,CAAK6D,QAAQ,OAAOsB,IAAK,EAAGgpB,SAAS,OAArC,UACGroB,IAAa,SAAC2E,EAAA,EAAD,CAAaC,MAAO5E,EAAU4E,MAAOC,UAAW7E,EAAU6E,UAAW/H,QAASmD,KAC5F,SAAC,KAAD,CAAemB,KAAK,WACpB,SAAC,KAAD,KACA,SAAC,KAAD,CAAgBA,KAAK,cAEvB,SAACkK,EAAA,EAAD,WACE,SAAC88B,GAAD,CAAQN,IAAKA,OAEf,SAACO,GAAD,KACA,SAAC/8B,EAAA,EAAD,WACE,SAAC88B,GAAD,CAAQN,IAAKA,gBAGmC,SAACp9B,EAAA,EAAD,CAAUnT,QAAQ,cAAcuG,MAAM,OAAO6H,OAAQ,OAG9G,CACD,SAAS0iC,KACP,OAAO,SAAC,EAAA79B,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,CAAUnT,QAAQ,cAAcuG,MAAM,OAAO6H,OAAQ,MAAzE,UACL,UAAC,KAAD,YAEE,SAAC,KAAD,CAAOxN,OAAK,EAACC,SAAS,SAACykC,GAAD,OACtB,SAAC,KAAD,CAAOr8B,KAAK,UAAUpI,SAAS,SAAC,GAAD,OAC/B,SAAC,KAAD,CAAOoI,KAAK,aAAapI,SAAS,SAAC4nC,GAAD,OAClC,SAAC,KAAD,CAAOx/B,KAAK,YAAYpI,SAAS,SAAC64B,GAAD,OACjC,SAAC,KAAD,CAAOzwB,KAAK,eAAepI,SAAS,SAAC4qC,GAAD,UAGzC,CACD,SAASoF,GAAT,GAA2C,IAAzBN,EAAwB,EAAxBA,IACR9uC,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACR,OAAO,UAACsvC,EAAA,EAAD,CACLzzC,MAAOizC,EACPvwC,QAAQ,aACRgxC,0BAAwB,EACxBnuC,GAAI,CACF,uBAAwB,CACtBuT,WAAY,8BACZjH,gBAAiB,0BAPhB,WAWL,SAAC8hC,EAAA,EAAD,CAAKpuC,GAAI,CAAE6uB,SAAU,OAASp0B,MAAM,WAAWsB,MAAO6C,EAAE,iBAAkBP,MAAM,SAACgwC,EAAA,EAAD,IAAYxuC,UAAWw8B,EAAAA,GAAYC,GAAG,MACtH,SAAC8R,EAAA,EAAD,CAAKpuC,GAAI,CAAE6uB,SAAU,OAASp0B,MAAM,SAASsB,MAAO6C,EAAE,eAAgBP,MAAM,SAACiwC,EAAA,EAAD,IAAezuC,UAAWw8B,EAAAA,GAAYC,GAAG,YACrH,SAAC8R,EAAA,EAAD,CAAKpuC,GAAI,CAAE6uB,SAAU,OAASp0B,MAAM,YAAYsB,MAAO6C,EAAE,kBAAmBP,MAAM,SAACkwC,EAAA,EAAD,IAAY1uC,UAAWw8B,EAAAA,GAAYC,GAAG,eACxH,SAAC8R,EAAA,EAAD,CAAKpuC,GAAI,CAAE6uB,SAAU,OAASp0B,MAAM,WAAWsB,MAAO6C,EAAE,iBAAkBP,MAAM,SAACo+B,EAAA,EAAD,IAAgB58B,UAAWw8B,EAAAA,GAAYC,GAAG,cAC1H,SAAC8R,EAAA,EAAD,CAAKpuC,GAAI,CAAE6uB,SAAU,OAASp0B,MAAM,cAAcsB,MAAO6C,EAAE,oBAAqBP,MAAM,SAACmwC,EAAA,EAAD,IAAa3uC,UAAWw8B,EAAAA,GAAYC,GAAG,kBAEhI,CAGD,SAASuR,KACP,IAAQjvC,GAAMC,EAAAA,EAAAA,GAAe,kBAArBD,EACR,GAAgCs0B,EAAAA,EAAAA,KAAhC,eAAOtlB,EAAP,KAAayV,EAAb,KAAqBxV,EAArB,KACqBoJ,GAAiBvR,EAAAA,EAAAA,YAAWC,EAAAA,GAAzCC,UAAaqR,WACfw3B,EAAY1vC,OAAOsG,KAAK4R,GAAYzZ,OAC1C,OAAO,iCACL,UAACsJ,EAAA,EAAD,CAAQzJ,MAAM,OAAO8J,WAAW,SAACunC,EAAA,EAAD,IAAcxnC,QAASmc,EAAvD,UACGzkB,EADH,wCACwB6vC,IAAa,SAAClnC,EAAA,EAAD,CAASvH,GAAI,CAAEmI,GAAI,GAAK9K,MAAM,UAA9B,SAA0CoxC,QAE/E,SAAC93B,GAAD,CAAW/I,KAAMA,EAAMC,QAASA,MAEnC,CACD,SAASkgC,KACP,IAAQY,GAAgBjpC,EAAAA,EAAAA,YAAWgK,EAAAA,GAA3Bi/B,YACR,OAAO,iCACL,UAAC7nC,EAAA,EAAD,CAAQzJ,MAAM,OAAO8J,WAAW,SAACynC,EAAA,EAAD,IAAe1nC,QAASynC,EAAxD,sBAA+E,IAA/E,aACA,SAACn/B,GAAD,MAEH,C,uaCjJc,SAASqwB,EAAT,GAA+G,IAAD,EAAxFxT,EAAwF,EAAxFA,SAAUnlB,EAA8E,EAA9EA,QAAS65B,EAAqE,EAArEA,OAAQ8N,EAA6D,EAA7DA,SAA6D,IAAnD7f,SAAAA,OAAmD,SAAjCjC,EAAiC,EAAjCA,aAClFnuB,GAAMC,EAAAA,EAAAA,GAAe,CAAC,cAAe,OAArCD,EACAiS,GAAanL,EAAAA,EAAAA,YAAWoL,EAAAA,GAAxBD,SAEFyb,GADiBC,EAAAA,EAAAA,GAAUF,GAE3B/d,GAAc5P,EAAAA,EAAAA,IAAW,kBAAY,OAAN4tB,QAAM,IAANA,GAAAA,EAAQlwB,IAAM2Q,EAAAA,EAAAA,IAAgBuf,EAAOlwB,UAAO+B,CAAlD,GAA6D,QAACmuB,QAAD,IAACA,OAAD,EAACA,EAAQlwB,MAE/F0N,GAAS1G,EAAAA,EAAAA,cAAY,SAAC0rC,GAAD,OAAwBA,EAAGxP,iBAAH,OAAqBhxB,QAArB,IAAqBA,OAArB,EAAqBA,EAAaZ,WAA1D,GAAsE,CAACY,IAE5F0I,GAAc5T,EAAAA,EAAAA,cAAY,SAAAjD,GAAQ,OAAI,SAAC,IAAD,CAAgB+G,QAAS,yBAAMA,QAAN,IAAMA,OAAN,EAAMA,EAAUmlB,EAAhB,EAAzB,SAAsDlsB,GAA1D,GAAsF,CAAC+G,EAASmlB,IAClI0iB,GAAmB3rC,EAAAA,EAAAA,cAAY,SAAAjD,GAAQ,OAAI,SAAC,IAAD,UAAOA,GAAX,GAA4B,IACnE6uC,GAAc5rC,EAAAA,EAAAA,cAAY,SAACsU,GAAD,OAAoB2U,GAAYxb,EAAS4c,QAAQtuB,IAAIktB,EAAU,CAAE/C,SAAU5R,GAA3E,GAAiF,CAAC7G,EAAUwb,IAEtH7H,GAAStoB,EAAAA,EAAAA,UAAQ,kBAAMoS,GAAege,IAAUE,EAAAA,EAAAA,IAAc,CAACle,EAAYxI,MAAM2mB,EAAAA,EAAAA,IAAiBH,IAAjF,GAA4F,CAAChe,EAAage,IAEjI,IAAKA,IAAWhe,IAAgBkW,EAAQ,OAAO,KAC/C,IAAQha,EAA0D8hB,EAA1D9hB,MAAOC,EAAmD6hB,EAAnD7hB,UAAWuB,GAAwCsgB,EAAxCtgB,WAAY8Q,GAA4BwP,EAA5BxP,GAAtC,GAAkEwP,EAAxBhD,SAAAA,QAA1C,OAAqD,GAArD,GAAyDsgB,GAAStd,EAATsd,KACnDtK,GAAgB9a,EAAOje,IAAIuO,EAAAA,GAAAA,OAAAA,MAAmBra,MAC9CkvC,GAAQ,CAAC70B,EAAAA,GAAAA,OAAAA,KAAmBA,EAAAA,GAAAA,OAAAA,IAAkBA,EAAAA,GAAAA,OAAAA,MAAmB3Y,KAAI,SAAAke,GAAC,OAAImK,EAAOje,IAAI8T,EAAf,IACtEkqB,GAAMj2B,EAAYI,OAAOjE,GAE/B,OAAO,SAAC,EAAA2F,SAAD,CAAUC,UAAU,SAAC,IAAD,CAAUlT,QAAQ,cAAc6C,GAAI,CAAE0D,MAAO,OAAQ6H,OAAQ,OAAQulB,UAAW,OAApG,UACL,UAAC,IAAD,CAAW9wB,GAAI,CAAEuL,OAAQ,OAAQ5H,QAAS,OAAQoG,cAAe,SAAUoP,eAAgB,iBAA3F,WACE,UAAC,IAAD,CAAoBwQ,YAAaziB,EAAS0iB,QAAS5S,EAAai4B,aAAcF,EAA9E,WACE,UAAC,IAAD,CAAKpgC,UAAS,eAAUL,EAAYpP,OAAtB,QAAoCc,GAAI,CAAE6pB,SAAU,WAAY7Z,GAAI,EAAGhM,GAAI,GAAzF,WACIkD,IAAW,SAAC,IAAD,CAAY7J,MAAM,UAAU6J,QAAS,kBAAM2J,EAAS4c,QAAQtuB,IAAI2d,GAAI,CAAE8sB,MAAOA,IAAxC,EAAiD5pC,GAAI,CAAE6pB,SAAU,WAAY6Z,MAAO,EAAGjZ,OAAQ,EAAGC,OAAQ,GAA/I,SACVkf,IAAO,SAAC,IAAD,KAAW,SAAC,IAAD,OAErB,UAAC,IAAD,CAAK5pC,GAAI,CAAE6pB,SAAU,WAAYa,OAAQ,GAAzC,WACE,UAAC,IAAD,CAAK7qB,UAAU,MAAMG,GAAI,CAAE2D,QAAS,OAAQC,WAAY,SAAUqB,IAAK,EAAGuL,GAAI,GAA9E,WACE,SAAC,IAAD,CAASxQ,GAAI,CAAEkvB,SAAU,SAAWzgB,IAAG,UAAEG,EAAAA,EAAAA,mBAAF,aAAE,EAAqB0wB,OAC9D,SAAC,IAAD,CAAY4P,QAAM,EAAClvC,GAAI,CAAEmE,UAAW,SAAUmI,gBAAiB,yBAA0BrF,aAAc,MAAOjD,GAAI,GAAlH,UAAuH,4BAASsK,EAAY3H,aAE9I,UAAC,IAAD,CAAY9G,UAAU,OAAO1C,QAAQ,KAArC,iBAA+CqN,MAC/C,UAAC,IAAD,CAAY3K,UAAU,OAAO1C,QAAQ,KAAKE,MAAM,iBAAhD,cAAmEwN,EAAAA,GAAkBJ,OACrF,UAAC,IAAD,CAAYtN,QAAQ,KAApB,yBAAoC,4BAAS6O,SAC7C,SAAC,IAAD,WAAY,SAAC,IAAD,CAAc9L,MAAOoO,EAAYpP,OAAQ2P,SAAO,UAE9D,SAAC,IAAD,CAAK7O,GAAI,CAAEuL,OAAQ,OAAQse,SAAU,WAAY6Z,MAAO,EAAGzjC,IAAK,GAAhE,UACE,SAAC,IAAD,CACEJ,UAAU,MACV4O,IAAG,OAAE81B,SAAF,IAAEA,GAAAA,GAAO,GACZ7gC,MAAM,OACN6H,OAAO,OACPvL,GAAI,CAAEsU,MAAO,iBAInB,SAAC,IAAD,UACGq1B,GAAMxtC,KAAI,SAAAkV,GACT,IAAKA,EAAKkB,KAAKnW,IAAK,OAAO,KAC3B,IAAM+yC,GAAa38B,EAAAA,EAAAA,IAAYnB,EAAK5W,MAAO4W,EAAKoB,KAAOpB,EAAKoB,UAAWtU,EAAJ,GACnE,OAAO,UAAC,IAAD,CAAyB6B,GAAI,CAAE2D,QAAS,QAAxC,WACL,UAAC,IAAD,CAAYS,SAAU,EAAtB,UAA0B3D,EAAAA,EAAS4Q,EAAKkB,KAAKnW,KAA7C,IAAqDoE,EAAAA,GAAAA,IAAW6Q,EAAKkB,KAAKnW,SAC1E,SAAC,IAAD,UAAa+yC,MAFE99B,EAAKkB,KAAKnW,IAI5B,UAGL,UAAC,IAAD,CAAK4D,GAAI,CAAEkF,EAAG,EAAGvB,QAAS,OAAQsB,IAAK,EAAGkU,eAAgB,gBAAiBvV,WAAY,UAAvF,WACE,SAAC,IAAD,CAAK5D,GAAI,CAAEoE,SAAU,GAArB,SACG4qB,GACG,SAAC,IAAD,CAAsB1F,SAAUA,GAAU0lB,YAAaA,EAAallC,OAAQA,KAC5E,SAAC,IAAD,CAAcwf,SAAUA,QAE9B,UAAC,IAAD,CAAatpB,GAAI,CAAEuL,OAAQ,QAA3B,YACKw1B,IAAU,SAAC,IAAD,CAASh8B,OAAO,SAAC,IAAD,UAAanG,EAAb,wCAAgDgsB,UAAU,MAAM6S,OAAK,EAArF,UACX,SAAC,IAAD,CAAQpgC,MAAM,OAAO6J,QAAS,kBAAM65B,EAAOjkB,GAAb,EAA9B,UACE,SAAC,IAAD,CAAiBze,KAAM+wC,EAAAA,IAAQzgC,UAAU,gBAG1CkgC,IAAY,SAAC,IAAD,CAAQxxC,MAAM,QAAQ6J,QAAS,kBAAM2nC,EAAS/xB,GAAf,EAAoBla,WAAY0mB,IAAYsgB,GAA3E,UACb,SAAC,IAAD,CAAiBvrC,KAAMgxC,EAAAA,IAAY1gC,UAAU,YAE9Coe,YAKV,C,gMCvGYuiB,EAAY,IACZC,EAAY,GAAKD,EACjBE,EAAU,GAAKD,EACfE,EAAS,GAAKD,EAEpB,SAASE,EAAUjD,GACxB,IAAIkD,EAAelD,EAAK,IACpBmD,EAAUpwB,KAAKqwB,MAAOpD,EAAK,IAAQ,IACnCqD,EAAUtwB,KAAKqwB,MAAOpD,EAAE,IAAkB,IAE9C,MAAO,CAAEsD,MADGvwB,KAAKqwB,MAAOpD,EAAE,MACVqD,QAAAA,EAASF,QAAAA,EAASD,aAAAA,EACnC,CACM,SAASK,EAAWvD,GAEzB,MAAkCiD,EAAUjD,GAAtCsD,EAAN,EAAMA,MAAOD,EAAb,EAAaA,QAASF,EAAtB,EAAsBA,QAClBK,EAAW,UAEf,OADIF,IAAOE,EAAW,SAChB,GAAN,OAAUF,EAAK,UAAMA,EAAN,KAAiB,IAAhC,QAAqCG,EAAAA,EAAAA,IAAWJ,EAAS,IAAK,GAA9D,aAAoEI,EAAAA,EAAAA,IAAWN,EAAS,IAAK,GAA7F,YAAmGK,EACpG,CACM,SAAS5nB,EAAaokB,GAE3B,MAAgDiD,EAAUjD,GAApDsD,EAAN,EAAMA,MAAOD,EAAb,EAAaA,QAASF,EAAtB,EAAsBA,QAASD,EAA/B,EAA+BA,aAC3BM,EAAW,UAEf,OADIF,IAAOE,EAAW,SAChB,GAAN,OAAUF,EAAK,UAAMA,EAAN,KAAiB,IAAhC,QAAqCG,EAAAA,EAAAA,IAAWJ,EAAS,IAAK,GAA9D,aAAoEI,EAAAA,EAAAA,IAAWN,EAAS,IAAK,GAA7F,aAAmGM,EAAAA,EAAAA,IAAWP,EAAc,IAAK,GAAjI,YAAuIM,EACxI,C,gJCvBYE,EAAiB,CAAC,QAAS,SAAU,QAE3C,SAASxQ,EAAkB7yB,GAChC,MAAO,CACLtC,MAAO,SAAA4lC,GAAE,uBAAIA,EAAG5lC,OAAS4lC,EAAG3lC,UAAY,UAA/B,QAAqC,CAArC,EACTvL,OAAQ,SAAAkxC,GAAE,OAAItjC,EAAasjC,EAAGh0C,KAAK8C,MAAzB,EACVyH,KAAM,SAAAypC,GAAE,OAAIjuC,EAAAA,EAAAA,EAAA,0BAA0BiuC,EAAGh0C,KAAjC,EAEX,CACM,SAASojC,EAAoB1yB,GAClC,MAAO,CACL5N,OAAQ,SAACkxC,EAAItmC,GAAL,OAAgBA,EAAOnM,SAASmP,EAAasjC,EAAGh0C,KAAK8C,OAArD,EACRwO,WAAY,SAAC0iC,EAAItmC,GAAL,OAAgBA,EAAOnM,SAASmP,EAAasjC,EAAGh0C,KAAKsR,WAArD,EACZ/G,KAAM,SAACypC,EAAItmC,GAAL,OAAgB3H,EAAAA,EAAAA,EAAA,0BAA0BiuC,EAAGh0C,MAAOuR,cAAchQ,SAASmM,EAAO6D,cAAlF,EAET,CAEM,IAAM+xB,EAAiE,CAC5E/4B,KAAM,CAAC,QACP6D,MAAO,CAAC,QAAS,SAAU,QAC3BtL,OAAQ,CAAC,SAAU,QAAS,Q","sources":["Components/MenuItemWithImage.tsx","Components/Artifact/ArtifactAutocomplete.tsx","Components/Artifact/ArtifactLevelSlider.tsx","Components/Card/CardHeaderCustom.tsx","Components/Conditional/ConditionalSelector.tsx","Components/Conditional/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","Components/LevelSelect.tsx","Components/RefinementDropdown.tsx","Components/TextButton.tsx","Components/Weapon/WeaponSelectionModal.tsx","PageCharacter/CharacterDisplay/CharSelectDropdown.tsx","PageCharacter/CharacterDisplay/FormulaModal.tsx","Components/ExpandButton.tsx","Components/StatInput.tsx","Components/EnemyEditor.tsx","PageCharacter/CharacterDisplay/StatModal.tsx","Context/OptimizationTargetContext.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/common.ts","Components/Artifact/SetEffectDisplay.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/useBuildSetting.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ArtifactSetConfig.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/AssumeFullLevelToggle.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BonusStatsCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildAlert.tsx","Components/Artifact/ArtifactCardNano.tsx","Components/Character/StatDisplayComponent.tsx","Components/Weapon/WeaponCardNano.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildDisplayItem.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/MainStatSelectionCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/StatFilterCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseEquipped.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseExcluded.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/foreground.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/CompareBuildButton.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/ArtifactSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/WeaponSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/EquipmentSection.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTalent.tsx","PageCharacter/CharacterDisplay/Tabs/TabTeambuffs.tsx","PageCharacter/CharacterDisplay/Tabs/TabTheorycraft/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTheorycraft/useCharTC.tsx","PageCharacter/CharacterDisplay/TravelerElementSelect.tsx","PageCharacter/CharacterDisplay/TravelerGenderSelect.tsx","PageCharacter/CharacterDisplay/index.tsx","PageWeapon/WeaponCard.tsx","Util/TimeUtil.ts","Util/WeaponSort.ts"],"sourcesContent":["import { ListItemIcon, ListItemText, MenuItem, Theme } from \"@mui/material\";\r\n\r\ntype MenuItemWithImageProps = {\r\n  value: string\r\n  image?: Displayable\r\n  text: Displayable\r\n  theme: Theme\r\n  isSelected?: boolean\r\n  addlElement?: Displayable\r\n  props?: object\r\n}\r\n\r\nexport default function MenuItemWithImage({ value, image = \"\", text, theme, isSelected, addlElement, props }: MenuItemWithImageProps) {\r\n  return <MenuItem key={value} value={value} {...props}>\r\n    <ListItemIcon>{image}</ListItemIcon>\r\n    <ListItemText primaryTypographyProps={{ style: { fontWeight: isSelected ? theme.typography.fontWeightMedium : theme.typography.fontWeightRegular } }}>\r\n      {text}\r\n    </ListItemText>\r\n    {addlElement && addlElement}\r\n  </MenuItem>\r\n}\r\n","import { Autocomplete, AutocompleteProps, AutocompleteRenderGroupParams, Box, Chip, List, ListSubheader, TextField, useTheme } from '@mui/material';\r\nimport { useMemo } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\r\nimport i18n from '../../i18n';\r\nimport KeyMap from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { allMainStatKeys, allSubstatKeys, MainStatKey, SubstatKey } from '../../Types/artifact';\r\nimport { allElementsWithPhy, ArtifactRarity, ArtifactSetKey } from '../../Types/consts';\r\nimport MenuItemWithImage from '../MenuItemWithImage';\r\nimport SolidColoredTextField from '../SolidColoredTextfield';\r\nimport { StarsDisplay } from '../StarDisplay';\r\nimport StatIcon from '../StatIcon';\r\n\r\ntype Grouper = string | number | undefined\r\n\r\ntype ArtifactMultiAutocompleteKey = ArtifactSetKey | MainStatKey | SubstatKey\r\ntype ArtifactMultiAutocompleteOption<T extends ArtifactMultiAutocompleteKey, G extends Grouper> = {\r\n  key: T\r\n  label: string\r\n  grouper?: G\r\n}\r\ntype ArtifactMultiAutocompleteProps<T extends ArtifactMultiAutocompleteKey, G extends Grouper> = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<T, G>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\r\n  allArtifactKeysWithGrouper: readonly { key: T, grouper?: G }[]\r\n  selectedArtifactKeys: T[]\r\n  setArtifactKeys: (keys: T[]) => void\r\n  getName: (key: T) => string\r\n  getImage: (key: T) => JSX.Element\r\n  label: string\r\n}\r\nfunction ArtifactMultiAutocomplete<T extends ArtifactMultiAutocompleteKey, G extends Grouper>({ allArtifactKeysWithGrouper, selectedArtifactKeys, setArtifactKeys, getName, getImage, label, ...props }:\r\n  ArtifactMultiAutocompleteProps<T, G>) {\r\n  const theme = useTheme()\r\n\r\n  const handleChange = (_, value: ArtifactMultiAutocompleteOption<T, G>[]) => {\r\n    setArtifactKeys(value.map(v => v.key))\r\n  }\r\n  const options = useMemo(() => allArtifactKeysWithGrouper.map(({ key, grouper }) => ({ key, label: getName(key), grouper })), [allArtifactKeysWithGrouper, getName])\r\n  return <Autocomplete\r\n    autoHighlight\r\n    multiple\r\n    disableCloseOnSelect\r\n    options={options}\r\n    value={selectedArtifactKeys.map(key => ({ key: key, label: getName(key) }))}\r\n    onChange={handleChange}\r\n    getOptionLabel={(option) => option.label}\r\n    isOptionEqualToValue={(option, value) => option.key === value.key}\r\n    renderInput={(params) => <TextField\r\n      {...params}\r\n      label={label}\r\n      variant=\"filled\"\r\n      InputLabelProps={{ style: { color: theme.palette.text.primary } }}\r\n      color={selectedArtifactKeys.length ? \"success\" : \"primary\"}\r\n      type=\"search\"\r\n    />}\r\n    renderOption={(props, option) => (\r\n      <MenuItemWithImage\r\n        key={option.key}\r\n        value={option.key}\r\n        image={getImage(option.key)}\r\n        text={option.label}\r\n        theme={theme}\r\n        isSelected={selectedArtifactKeys.includes(option.key)}\r\n        props={props}\r\n      />\r\n    )}\r\n    renderTags={(selected, getTagProps) => selected.map((value, index) => {\r\n      const element = allElementsWithPhy.find(ele => value.key === `${ele}_dmg_`)\r\n      const color = element ? element : undefined\r\n      return <Chip {...getTagProps({ index })} key={value.key} icon={getImage(value.key)} label={value.label} color={color} />\r\n    })}\r\n    {...props}\r\n  />\r\n}\r\n\r\ntype ArtifactSetMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<ArtifactSetKey, ArtifactRarity>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\r\n  artSetKeys: ArtifactSetKey[]\r\n  setArtSetKeys: (keys: ArtifactSetKey[]) => void\r\n}\r\nexport function ArtifactSetMultiAutocomplete({ artSetKeys, setArtSetKeys, ...props }: ArtifactSetMultiAutocompleteProps) {\r\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\r\n  const { t } = useTranslation([\"artifact\", \"artifactNames_gen\"])\r\n  if (!artifactSheets) return null\r\n\r\n  const allArtifactSetsAndRarities = Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\r\n    .flatMap(([rarity, sets]) => sets.map(set => ({ key: set, grouper: +rarity as ArtifactRarity })))\r\n    .sort(sortByRarityAndName)\r\n\r\n  return <ArtifactMultiAutocomplete<ArtifactSetKey, ArtifactRarity>\r\n    allArtifactKeysWithGrouper={allArtifactSetsAndRarities}\r\n    selectedArtifactKeys={artSetKeys}\r\n    setArtifactKeys={setArtSetKeys}\r\n    getName={(key: ArtifactSetKey) => artifactSheets(key).nameRaw}\r\n    getImage={(key: ArtifactSetKey) => artifactSheets(key).defIcon}\r\n    label={t(\"artifact:autocompleteLabels.sets\")}\r\n    groupBy={(option) => option.grouper?.toString() ?? \"\"}\r\n    renderGroup={(params: AutocompleteRenderGroupParams) => params.group && <List key={params.group} component={Box}>\r\n      <ListSubheader key={`${params.group}Header`} sx={{ top: \"-1em\" }}>\r\n        {params.group} <StarsDisplay stars={+params.group as ArtifactRarity} />\r\n      </ListSubheader>\r\n      {params.children}\r\n    </List>}\r\n    {...props}\r\n  />\r\n}\r\n\r\ntype ArtifactMainStatMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<MainStatKey, undefined>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\r\n  mainStatKeys: MainStatKey[]\r\n  setMainStatKeys: (keys: MainStatKey[]) => void\r\n}\r\nexport function ArtifactMainStatMultiAutocomplete({ mainStatKeys, setMainStatKeys, ...props }: ArtifactMainStatMultiAutocompleteProps) {\r\n  const { t } = useTranslation(\"artifact\")\r\n  return <ArtifactMultiAutocomplete<MainStatKey, undefined>\r\n    allArtifactKeysWithGrouper={allMainStatKeys.map(key => ({ key }))}\r\n    selectedArtifactKeys={mainStatKeys}\r\n    setArtifactKeys={setMainStatKeys}\r\n    getName={(key: MainStatKey) => KeyMap.getArtStr(key)}\r\n    getImage={(key: MainStatKey) => StatIcon[key]}\r\n    label={t(\"autocompleteLabels.mainStats\")}\r\n    {...props}\r\n  />\r\n}\r\n\r\ntype ArtifactSubstatMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<SubstatKey, undefined>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\r\n  substatKeys: SubstatKey[]\r\n  setSubstatKeys: (keys: SubstatKey[]) => void\r\n}\r\nexport function ArtifactSubstatMultiAutocomplete({ substatKeys, setSubstatKeys, ...props }: ArtifactSubstatMultiAutocompleteProps) {\r\n  const { t } = useTranslation(\"artifact\")\r\n  return <ArtifactMultiAutocomplete<SubstatKey, undefined>\r\n    allArtifactKeysWithGrouper={allSubstatKeys.map(key => ({ key }))}\r\n    selectedArtifactKeys={substatKeys}\r\n    setArtifactKeys={setSubstatKeys}\r\n    getName={(key: SubstatKey) => KeyMap.getArtStr(key)}\r\n    getImage={(key: SubstatKey) => StatIcon[key]}\r\n    label={t(\"autocompleteLabels.substats\")}\r\n    {...props}\r\n  />\r\n}\r\n\r\ntype ArtifactSingleAutocompleteKey = ArtifactSetKey | MainStatKey | SubstatKey | \"\"\r\ntype ArtifactSingleAutocompleteOption<T extends ArtifactSingleAutocompleteKey, G extends Grouper> = {\r\n  key: T\r\n  label: string\r\n  grouper?: G\r\n}\r\ntype ArtifactSingleAutocompleteProps<T extends ArtifactSingleAutocompleteKey, G extends Grouper> = Omit<AutocompleteProps<ArtifactSingleAutocompleteOption<T, G>, false, true, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\r\n  allArtifactKeysWithGrouper: readonly { key: T, grouper?: G }[]\r\n  selectedArtifactKey: T\r\n  setArtifactKey: (key: T | \"\") => void\r\n  getName: (key: T) => string\r\n  getImage: (key: T) => JSX.Element\r\n  label: string\r\n  disable?: (v: any) => boolean\r\n  showDefault?: boolean\r\n  defaultText?: string\r\n  defaultIcon?: Displayable\r\n}\r\nfunction ArtifactSingleAutocomplete<T extends ArtifactSingleAutocompleteKey, G extends Grouper>({ allArtifactKeysWithGrouper, selectedArtifactKey, setArtifactKey, getName, getImage, label, disable = () => false, showDefault = false, defaultText = \"\", defaultIcon = \"\", ...props }:\r\n  ArtifactSingleAutocompleteProps<T, G>) {\r\n  const theme = useTheme();\r\n\r\n  const options = useMemo(() =>\r\n    (showDefault\r\n      ? [{ key: \"\" as T, label: defaultText }]\r\n      : []\r\n    ).concat(allArtifactKeysWithGrouper.map(({ key, grouper }) => (\r\n      { key, label: getName(key), grouper }\r\n    ))), [allArtifactKeysWithGrouper, getName, defaultText, showDefault])\r\n\r\n  return <Autocomplete\r\n    autoHighlight\r\n    options={options}\r\n    clearIcon={selectedArtifactKey ? undefined : \"\"} // Hide the clear icon if the value is already default\r\n    value={{ key: selectedArtifactKey, label: getName(selectedArtifactKey) }}\r\n    onChange={(event, newValue, reason) => (event.type !== \"change\" || reason !== \"clear\") && setArtifactKey(newValue ? newValue.key : \"\")}\r\n    getOptionLabel={(option) => option.label ? option.label : defaultText}\r\n    isOptionEqualToValue={(option, value) => option.key === value.key}\r\n    getOptionDisabled={option => disable(option.key)}\r\n    renderInput={(props) => <SolidColoredTextField\r\n      {...props}\r\n      label={label}\r\n      startAdornment={getImage(selectedArtifactKey)}\r\n      hasValue={selectedArtifactKey ? true : false}\r\n    />}\r\n    renderOption={(props, option) => (\r\n      <MenuItemWithImage\r\n        key={option.key}\r\n        value={option.key}\r\n        image={getImage(option.key)}\r\n        text={option.label}\r\n        theme={theme}\r\n        isSelected={selectedArtifactKey === option.key}\r\n        props={props}\r\n      />\r\n    )}\r\n    {...props}\r\n  />\r\n}\r\n\r\ntype ArtifactSetSingleAutocompleteProps = Omit<AutocompleteProps<ArtifactSingleAutocompleteOption<ArtifactSetKey | \"\", ArtifactRarity>, false, true, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\r\n  artSetKey: ArtifactSetKey | \"\"\r\n  setArtSetKey: (key: ArtifactSetKey | \"\") => void\r\n  label?: string\r\n  disable?: (v: any) => boolean\r\n  showDefault?: boolean\r\n  defaultText?: string\r\n  defaultIcon?: Displayable\r\n}\r\nexport function ArtifactSetSingleAutocomplete({ artSetKey, setArtSetKey, label = \"\", ...props }: ArtifactSetSingleAutocompleteProps) {\r\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\r\n  const { t } = useTranslation([\"artifact\", \"artifactNames_gen\"])\r\n  label = label ? label : t(\"artifact:autocompleteLabels.set\")\r\n  if (!artifactSheets) return null\r\n\r\n  const allArtifactSetsAndRarities = Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\r\n    .flatMap(([rarity, sets]) => sets.map(set => ({ key: set, grouper: +rarity as ArtifactRarity })))\r\n    .sort(sortByRarityAndName)\r\n\r\n  return <ArtifactSingleAutocomplete<ArtifactSetKey | \"\", ArtifactRarity>\r\n    allArtifactKeysWithGrouper={allArtifactSetsAndRarities}\r\n    selectedArtifactKey={artSetKey}\r\n    setArtifactKey={setArtSetKey}\r\n    getName={(key: ArtifactSetKey | \"\") => key && artifactSheets(key).nameRaw}\r\n    getImage={(key: ArtifactSetKey | \"\") => key ? artifactSheets(key).defIcon : <></>}\r\n    label={label}\r\n    groupBy={(option) => option.grouper?.toString() ?? \"\"}\r\n    renderGroup={(params: AutocompleteRenderGroupParams) => params.group && <List key={params.group} component={Box}>\r\n      <ListSubheader key={`${params.group}Header`} sx={{ top: \"-1em\" }}>\r\n        {params.group} <StarsDisplay stars={+params.group as ArtifactRarity} />\r\n      </ListSubheader>\r\n      {params.children}\r\n    </List>}\r\n    {...props}\r\n  />\r\n}\r\n\r\nfunction sortByRarityAndName(a: { key: ArtifactSetKey, grouper: ArtifactRarity }, b: { key: ArtifactSetKey, grouper: ArtifactRarity }) {\r\n  if (a.grouper > b.grouper) {\r\n    return -1\r\n  }\r\n  if (a.grouper < b.grouper) {\r\n    return 1\r\n  }\r\n\r\n  const aName = i18n.t(`artifactNames_gen:${a.key}`)\r\n  const bName = i18n.t(`artifactNames_gen:${b.key}`)\r\n  if (aName < bName) {\r\n    return -1\r\n  }\r\n  if (aName > bName) {\r\n    return 1\r\n  }\r\n\r\n  return 0\r\n}\r\n","import { Card, Slider } from \"@mui/material\"\r\nimport { useCallback, useEffect, useState } from \"react\"\r\nimport { clamp } from \"../../Util/Util\"\r\nimport CustomNumberInput from \"../CustomNumberInput\"\r\n\r\nexport default function ArtifactLevelSlider({ levelLow, levelHigh, setLow, setHigh, setBoth, dark = false, disabled = false, showLevelText = false }: {\r\n  levelLow: number,\r\n  levelHigh: number,\r\n  setLow: (low: number) => void,\r\n  setHigh: (high: number) => void,\r\n  setBoth: (low: number, high: number) => void,\r\n  dark?: boolean,\r\n  disabled?: boolean,\r\n  showLevelText?: boolean,\r\n}) {\r\n  const [sliderLow, setsliderLow] = useState(levelLow)\r\n  const [sliderHigh, setsliderHigh] = useState(levelHigh)\r\n  const setSlider = useCallback(\r\n    (e: unknown, value: number | number[]) => {\r\n      if (typeof value == \"number\") throw new TypeError()\r\n      const [l, h] = value\r\n      setsliderLow(l)\r\n      setsliderHigh(h)\r\n    },\r\n    [setsliderLow, setsliderHigh])\r\n  useEffect(() => setsliderLow(levelLow), [setsliderLow, levelLow])\r\n\r\n  useEffect(() => setsliderHigh(levelHigh), [setsliderHigh, levelHigh])\r\n  return <Card sx={{ width: \"100%\", display: \"flex\", alignItems: \"center\", bgcolor: dark ? \"contentDark.main\" : \"contentLight.main\" }}>\r\n    <CustomNumberInput\r\n      value={sliderLow}\r\n      onChange={val => setLow(clamp(val, 0, levelHigh))}\r\n      sx={{ px: 1, pl: showLevelText ? 2 : undefined, width: showLevelText ? 100 : 50, }}\r\n      inputProps={{ sx: { textAlign: showLevelText ? \"right\" : \"center\" } }}\r\n      startAdornment={showLevelText ? \"Level: \" : undefined}\r\n      disabled={disabled}\r\n    />\r\n    <Slider sx={{ width: 100, flexGrow: 1, mx: 2 }}\r\n      getAriaLabel={() => 'Arifact Level Range'}\r\n      value={[sliderLow, sliderHigh]}\r\n      onChange={setSlider}\r\n      onChangeCommitted={(e, value) => setBoth(value[0], value[1])}\r\n      valueLabelDisplay=\"auto\"\r\n      min={0} max={20} step={1} marks\r\n      disabled={disabled}\r\n    />\r\n    <CustomNumberInput\r\n      value={sliderHigh}\r\n      onChange={val => setHigh(clamp(val, levelLow, 20))}\r\n      sx={{ px: 1, width: 50, }}\r\n      inputProps={{ sx: { textAlign: \"center\" } }}\r\n      disabled={disabled}\r\n    />\r\n  </Card>\r\n}\r\n","import { Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nexport default function CardHeaderCustom({ avatar, title, action }: { avatar?: Displayable, title: Displayable, action?: Displayable }) {\r\n  return <Box display=\"flex\" gap={1} p={2} alignItems=\"center\" >\r\n    {avatar}\r\n    <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>{title}</Typography>\r\n    {action && <Typography variant=\"caption\">{action}</Typography>}\r\n  </Box>\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\r\nimport { Button, ButtonGroup, ButtonProps, Divider, MenuItem } from '@mui/material';\r\nimport React, { useCallback, useContext } from 'react';\r\nimport { CharacterContext } from '../../Context/CharacterContext';\r\nimport { DataContext } from '../../Context/DataContext';\r\nimport { DocumentConditional, IDocumentConditionalExclusive, IDocumentConditionalMultiple } from '../../Types/sheet';\r\nimport { deepClone, deletePropPath, layeredAssignment } from '../../Util/Util';\r\nimport DropdownButton from '../DropdownMenu/DropdownButton';\r\nimport SqBadge from '../SqBadge';\r\nimport { Translate } from '../Translate';\r\n\r\ninterface ConditionalSelectorProps {\r\n  conditional: DocumentConditional,\r\n  disabled?: boolean,\r\n}\r\nexport default function ConditionalSelector({ conditional, disabled = false, }: ConditionalSelectorProps) {\r\n  if (Object.keys(conditional.states).length === 1 && \"path\" in conditional) {\r\n    return <SimpleConditionalSelector conditional={conditional} disabled={disabled} />\r\n  } else if (\"path\" in conditional) {\r\n    return <ExclusiveConditionalSelector conditional={conditional} disabled={disabled} />\r\n  } else /*if (\"path\" in Object.entries(conditional.states)[0]) */ {\r\n    return <MultipleConditionalSelector conditional={conditional} disabled={disabled} />\r\n  }\r\n}\r\n\r\ninterface SimpleConditionalSelectorProps extends ConditionalSelectorProps {\r\n  conditional: IDocumentConditionalExclusive\r\n}\r\nfunction SimpleConditionalSelector({ conditional, disabled }: SimpleConditionalSelectorProps) {\r\n  const { character, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const setConditional = useCallback((v?: string) => {\r\n    const conditionalValues = deepClone(character.conditional)\r\n    if (v) {\r\n      layeredAssignment(conditionalValues, conditional.path, v)\r\n    } else {\r\n      deletePropPath(conditionalValues, conditional.path)\r\n    }\r\n    characterDispatch({ conditional: conditionalValues })\r\n  }, [conditional, character, characterDispatch])\r\n\r\n  const conditionalValue = data.get(conditional.value).value\r\n  const [stateKey, st] = Object.entries(conditional.states)[0]\r\n  const badge = getStateBadge(st.name)\r\n  const condName = getCondName(conditional.name)\r\n\r\n  return <Button fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} onClick={() => setConditional(conditionalValue ? undefined : stateKey)} disabled={disabled} startIcon={conditionalValue ? <CheckBox /> : <CheckBoxOutlineBlank />}>\r\n    {condName} {badge}\r\n  </Button>\r\n}\r\n\r\ninterface ExclusiveConditionalSelectorProps extends ConditionalSelectorProps {\r\n  conditional: IDocumentConditionalExclusive\r\n}\r\nfunction ExclusiveConditionalSelector({ conditional, disabled }: ExclusiveConditionalSelectorProps) {\r\n  const { character, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const setConditional = useCallback((v?: string) => {\r\n    const conditionalValues = deepClone(character.conditional)\r\n    if (v) {\r\n      layeredAssignment(conditionalValues, conditional.path, v)\r\n    } else {\r\n      deletePropPath(conditionalValues, conditional.path)\r\n    }\r\n    characterDispatch({ conditional: conditionalValues })\r\n  }, [conditional, character, characterDispatch])\r\n\r\n  const conditionalValue = data.get(conditional.value).value\r\n  const state = conditionalValue ? conditional.states[conditionalValue] : undefined\r\n  const badge = state ? getStateBadge(state.name) : <SqBadge color=\"secondary\">Not Active</SqBadge>\r\n  const condName = getCondName(conditional.name)\r\n\r\n  return <DropdownButton fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} title={<span>{condName} {badge}</span>} disabled={disabled}>\r\n    <MenuItem onClick={() => setConditional()} selected={!state} disabled={!state}>\r\n      <span>Not Active</span>\r\n    </MenuItem>\r\n    <Divider />\r\n    {Object.entries(conditional.states).map(([stateKey, st]) =>\r\n      <MenuItem key={stateKey} onClick={() => setConditional(stateKey)} selected={conditionalValue === stateKey} disabled={conditionalValue === stateKey} >{st.name}</MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n\r\ninterface MultipleConditionalSelectorProps extends ConditionalSelectorProps {\r\n  conditional: IDocumentConditionalMultiple\r\n}\r\nfunction MultipleConditionalSelector({ conditional, disabled }: MultipleConditionalSelectorProps) {\r\n  const { character, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const setConditional = useCallback((path: readonly string[], v?: string) => {\r\n    const conditionalValues = deepClone(character.conditional)\r\n    if (v) {\r\n      layeredAssignment(conditionalValues, path, v)\r\n    } else {\r\n      deletePropPath(conditionalValues, path)\r\n    }\r\n    characterDispatch({ conditional: conditionalValues })\r\n  }, [character, characterDispatch])\r\n\r\n  return <ButtonGroup fullWidth orientation=\"vertical\" disableElevation color=\"secondary\" >\r\n    {Object.entries(conditional.states).map(([stateKey, st]) => {\r\n      const conditionalValue = data.get(st.value).value\r\n      const isSelected = conditionalValue === stateKey\r\n      return <Button\r\n        color={isSelected ? \"success\" : \"primary\"}\r\n        disabled={disabled}\r\n        fullWidth\r\n        key={stateKey}\r\n        onClick={() => setConditional(st.path, conditionalValue ? undefined : stateKey)}\r\n        size=\"small\"\r\n        startIcon={isSelected ? <CheckBox /> : <CheckBoxOutlineBlank />}\r\n        sx={{ borderRadius: 0 }}\r\n      >\r\n        {getCondName(st.name)}\r\n      </Button>\r\n    })}\r\n  </ButtonGroup>\r\n}\r\n\r\nfunction isElement(disp: Displayable): disp is JSX.Element {\r\n  return (typeof disp !== \"string\")\r\n}\r\n\r\n// Use colored badges instead of colored text inside these buttons\r\nfunction getStateBadge(stateName: Displayable | undefined): Displayable {\r\n  if (!stateName) return \"\"\r\n\r\n  let badgeColor: ButtonProps['color'] = \"primary\"\r\n  let badgeText = stateName\r\n  if (stateName && isElement(stateName)) {\r\n    if (stateName.props.color) {\r\n      badgeColor = stateName.props.color\r\n      badgeText = <span>{stateName.props.children}</span>\r\n    }\r\n  }\r\n  return <SqBadge sx={{ ml: 0.5 }} color={badgeColor}>{badgeText}</SqBadge>\r\n}\r\n\r\n// Use colored badges instead of colored text inside these buttons\r\nfunction getCondName(condName: Displayable): Displayable {\r\n  if (isElement(condName)) {\r\n    const key = condName.props.key18\r\n    const ns = condName.props.ns\r\n    const values = condName.props.values\r\n    return <Translate ns={ns} key18={key} values={values} useBadge />\r\n  }\r\n  return condName\r\n}\r\n","import { CardContent } from \"@mui/material\"\r\nimport { useContext } from \"react\"\r\nimport { DataContext } from \"../../Context/DataContext\"\r\nimport { DocumentConditional, DocumentSection } from \"../../Types/sheet\"\r\nimport { evalIfFunc } from \"../../Util/Util\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport { HeaderDisplay } from \"../DocumentDisplay\"\r\nimport FieldsDisplay from \"../FieldDisplay\"\r\nimport ConditionalSelector from \"./ConditionalSelector\"\r\n\r\ntype ConditionalDisplayProps = {\r\n  conditional: DocumentConditional,\r\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\r\n  hideDesc?: boolean,\r\n}\r\n\r\nexport default function ConditionalDisplay({ conditional, hideHeader = false, hideDesc = false }: ConditionalDisplayProps) {\r\n  const { data } = useContext(DataContext)\r\n  let fields\r\n  if (\"path\" in conditional) {\r\n    const condVal = data.get(conditional.value).value\r\n    fields = condVal && conditional.states[condVal]?.fields\r\n  } else /* if (\"path\" in Object.entries(conditional.states)[0]) */ {\r\n    fields = Object.values(conditional.states).flatMap(state => {\r\n      const stateVal = data.get(state.value).value\r\n      return stateVal ? state.fields : []\r\n    })\r\n  }\r\n  return <CardDark>\r\n    {!evalIfFunc(hideHeader, conditional) && <HeaderDisplay header={conditional.header} hideDesc={hideDesc} />}\r\n    <CardContent sx={{ p: 0, \"&:last-child\": { pb: 0 } }}>\r\n      <ConditionalSelector conditional={conditional} />\r\n    </CardContent>\r\n    {fields && <FieldsDisplay fields={fields} />}\r\n  </CardDark>\r\n}\r\n","import { Box, Divider, Typography } from \"@mui/material\"\r\nimport { useContext } from \"react\"\r\nimport { DataContext } from \"../Context/DataContext\"\r\nimport { DocumentSection, IDocumentFields, IDocumentHeader, IDocumentText } from \"../Types/sheet\"\r\nimport { evalIfFunc } from \"../Util/Util\"\r\nimport CardDark from \"./Card/CardDark\"\r\nimport CardHeaderCustom from \"./Card/CardHeaderCustom\"\r\nimport ConditionalDisplay from \"./Conditional/ConditionalDisplay\"\r\nimport FieldsDisplay from \"./FieldDisplay\"\r\nimport InfoTooltip from \"./InfoTooltip\"\r\n\r\ntype DocumentDisplayProps = {\r\n  sections: DocumentSection[],\r\n  teamBuffOnly?: boolean,\r\n  hideDesc?: boolean,\r\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\r\n}\r\n\r\nexport default function DocumentDisplay({ sections, teamBuffOnly, hideDesc = false, hideHeader = false }: DocumentDisplayProps) {\r\n  const { data } = useContext(DataContext)\r\n  if (!sections.length) return null\r\n  const sectionDisplays = sections.map((s, i) => {\r\n    // If we can't show this section, return null\r\n    if (s.canShow && !data.get(s.canShow).value) return null\r\n    // If we are showing only teambuffs, and this section is not a teambuff, return null\r\n    if (teamBuffOnly && !s.teamBuff) return null\r\n    return <SectionDisplay section={s} key={i} hideDesc={hideDesc} hideHeader={hideHeader} />\r\n  }).filter(s => s)\r\n  if (!sectionDisplays.length) return null\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>{sectionDisplays}</Box>\r\n}\r\n\r\nfunction SectionDisplay({ section, hideDesc = false, hideHeader = false }: { section: DocumentSection, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\r\n  if (\"fields\" in section) {\r\n    return <FieldsSectionDisplay section={section} hideDesc={hideDesc} hideHeader={hideHeader} />\r\n  } else if (\"states\" in section) {\r\n    return <ConditionalDisplay conditional={section} hideDesc={hideDesc} hideHeader={hideHeader} />\r\n  } else /* if (\"text\" in section) */ {\r\n    return <TextSectionDisplay section={section} />\r\n  }\r\n}\r\n\r\nfunction FieldsSectionDisplay({ section, hideDesc, hideHeader }: { section: IDocumentFields, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\r\n  return <CardDark>\r\n    {!evalIfFunc(hideHeader, section) && section.header &&\r\n      <HeaderDisplay header={section.header} hideDesc={hideDesc} hideDivider={section.fields.length === 0} />\r\n    }\r\n    <FieldsDisplay fields={section.fields} />\r\n  </CardDark>\r\n}\r\n\r\nfunction TextSectionDisplay({ section }: { section: IDocumentText }) {\r\n  const { data } = useContext(DataContext)\r\n  return <div>\r\n    {evalIfFunc(section.text, data)}\r\n  </div>\r\n}\r\n\r\nexport function HeaderDisplay({ header, hideDesc, hideDivider }: { header: IDocumentHeader, hideDesc?: boolean, hideDivider?: boolean | ((section: DocumentSection) => boolean) }) {\r\n  const { data } = useContext(DataContext)\r\n  let { icon, title, action } = header\r\n  icon = evalIfFunc(icon, data)\r\n  const description = !hideDesc && evalIfFunc(header.description, data)\r\n  const displayTitle = hideDesc ? title : <span>{title} <InfoTooltip title={<Typography>{description}</Typography>} /></span>\r\n  return <>\r\n    <CardHeaderCustom avatar={icon} title={displayTitle} action={action} />\r\n    {!hideDivider && <Divider />}\r\n  </>\r\n}\r\n","import { Button, ButtonGroup, MenuItem } from '@mui/material';\r\nimport { useCallback } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ambiguousLevel, ambiguousLevelLow, ascensionMaxLevel, ascensionMaxLevelLow, maxLevel, maxLevelLow, milestoneLevels, milestoneLevelsLow } from '../Data/LevelData';\r\nimport { Ascension } from '../Types/consts';\r\nimport { clamp } from '../Util/Util';\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from './CustomNumberInput';\r\nimport DropdownButton from './DropdownMenu/DropdownButton';\r\n\r\nexport default function LevelSelect({ level, ascension, setBoth, useLow = false }: { level: number, ascension: Ascension, setBoth: (action: { level?: number, ascension?: Ascension }) => void, useLow?: boolean }) {\r\n  const { t } = useTranslation(\"ui\")\r\n  const ascensionMaxLevels = useLow ? ascensionMaxLevelLow : ascensionMaxLevel\r\n  const setLevel = useCallback((level: number = 1) => {\r\n    level = clamp(level, 1, useLow ? maxLevelLow : maxLevel)\r\n    const ascension = ascensionMaxLevels.findIndex(ascenML => level <= ascenML) as Ascension\r\n    setBoth({ level, ascension })\r\n  }, [setBoth, ascensionMaxLevels, useLow])\r\n  const setAscension = useCallback(() => {\r\n    const lowerAscension = ascensionMaxLevels.findIndex(ascenML => level !== 90 && level === ascenML) as Ascension\r\n    if (ascension === lowerAscension) setBoth({ ascension: (ascension + 1) as Ascension })\r\n    else setBoth({ ascension: lowerAscension })\r\n  }, [setBoth, ascensionMaxLevels, ascension, level])\r\n  return <ButtonGroup sx={{ bgcolor: t => t.palette.contentDark.main }} >\r\n    <CustomNumberInputButtonGroupWrapper >\r\n      <CustomNumberInput onChange={setLevel} value={level}\r\n        startAdornment=\"Lv. \"\r\n        inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\", width: \"3em\" } }}\r\n        sx={{ height: \"100%\", pl: 2 }} />\r\n    </CustomNumberInputButtonGroupWrapper>\r\n    <Button sx={{ pl: 1, whiteSpace: 'nowrap' }} disabled={!(useLow ? ambiguousLevelLow : ambiguousLevel)(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\r\n    <DropdownButton title={t(\"selectlevel\")} sx={{ flexGrow: 1 }}>\r\n      {[...(useLow ? milestoneLevelsLow : milestoneLevels)].map(([lv, as]) => {\r\n        const selected = lv === level && as === ascension\r\n        return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => setBoth({ level: lv, ascension: as })}>\r\n          {lv === ascensionMaxLevels[as] ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevels[as]}`}\r\n        </MenuItem>\r\n      })}\r\n    </DropdownButton>\r\n  </ButtonGroup>\r\n}\r\n","import { MenuItem } from \"@mui/material\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { allRefinement, Refinement } from \"../Types/consts\"\r\nimport DropdownButton from \"./DropdownMenu/DropdownButton\"\r\n\r\nexport default function RefinementDropdown({ refinement, setRefinement }: { refinement: Refinement, setRefinement: (r: Refinement) => void }) {\r\n  const { t } = useTranslation(\"ui\")\r\n  return <DropdownButton title={t(\"refinement\", { value: refinement })}>\r\n    {allRefinement.map(r =>\r\n      <MenuItem key={r} onClick={() => setRefinement(r)} selected={refinement === r} disabled={refinement === r}>\r\n        {t(\"refinement\", { value: r })}\r\n      </MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n","import { Button, ButtonProps, styled } from \"@mui/material\";\r\n\r\nconst DisabledButton = styled(Button)(({ theme }) => ({\r\n  \"&.Mui-disabled\": {\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.text.secondary,\r\n  }\r\n}))\r\n\r\nexport default function TextButton({ children, disabled, ...props }: ButtonProps) {\r\n  return <DisabledButton {...props} disabled  >\r\n    {children}\r\n  </DisabledButton>\r\n}\r\n","import { Box, CardActionArea, CardContent, Divider, Grid, TextField, Typography } from \"@mui/material\"\r\nimport { ChangeEvent, useDeferredValue, useEffect, useState } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Assets from \"../../Assets/Assets\"\r\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { allWeaponKeys, allWeaponTypeKeys, WeaponKey, WeaponTypeKey } from \"../../Types/consts\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport CardLight from \"../Card/CardLight\"\r\nimport CloseButton from \"../CloseButton\"\r\nimport ImgIcon from \"../Image/ImgIcon\"\r\nimport ModalWrapper from \"../ModalWrapper\"\r\nimport { StarsDisplay } from \"../StarDisplay\"\r\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\"\r\n\r\ntype WeaponSelectionModalProps = {\r\n  show: boolean,\r\n  ascension?: number,\r\n  onHide: () => void,\r\n  onSelect: (wKey: WeaponKey) => void,\r\n  filter?: (sheet: WeaponSheet) => boolean,\r\n  weaponTypeFilter?: WeaponTypeKey,\r\n}\r\n\r\nexport default function WeaponSelectionModal({ show, ascension = 0, onHide, onSelect, filter = () => true, weaponTypeFilter }: WeaponSelectionModalProps) {\r\n  const { t } = useTranslation([\"page_weapon\", \"weaponNames_gen\"])\r\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\r\n  const [weaponFilter, setWeaponfilter] = useState<WeaponTypeKey[]>(weaponTypeFilter ? [weaponTypeFilter] : [...allWeaponTypeKeys])\r\n\r\n  useEffect(() => weaponTypeFilter && setWeaponfilter([weaponTypeFilter]), [weaponTypeFilter])\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const deferredSearchTerm = useDeferredValue(searchTerm)\r\n\r\n  const weaponIdList = !weaponSheets ? [] : allWeaponKeys.filter(wKey => filter(weaponSheets(wKey)))\r\n    .filter(wKey => weaponFilter.includes(weaponSheets(wKey).weaponType))\r\n    .filter(wKey => !deferredSearchTerm || t(`weaponNames_gen:${wKey}`).toLowerCase().includes(deferredSearchTerm.toLowerCase()))\r\n    .sort((a, b) => weaponSheets(b).rarity - weaponSheets(a).rarity)\r\n\r\n  if (!weaponSheets) return null\r\n\r\n  return <ModalWrapper open={show} onClose={onHide}>\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container spacing={1}>\r\n          <Grid item>\r\n            <WeaponToggle value={weaponFilter} onChange={setWeaponfilter} disabled={!!weaponTypeFilter} size=\"small\" />\r\n          </Grid >\r\n          <Grid item flexGrow={1}>\r\n            <TextField\r\n              autoFocus\r\n              size=\"small\"\r\n              value={searchTerm}\r\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\r\n              label={t(\"weaponName\")}\r\n              sx={{ height: \"100%\" }}\r\n              InputProps={{\r\n                sx: { height: \"100%\" }\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <CloseButton onClick={onHide} />\r\n          </Grid >\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent><Grid container spacing={1}>\r\n        {weaponIdList.map(weaponKey => {\r\n          const weaponSheet = weaponSheets(weaponKey)\r\n          return <Grid item key={weaponKey} lg={3} md={4}>\r\n            <CardLight sx={{ height: \"100%\" }} >\r\n              <CardActionArea onClick={() => { onHide(); onSelect(weaponKey) }} sx={{ display: \"flex\" }}>\r\n                <Box component=\"img\" src={weaponSheet.getImg(ascension)} sx={{ width: 100, height: \"auto\" }} className={` grad-${weaponSheet.rarity}star`} />\r\n                <Box sx={{ flexGrow: 1, px: 1 }}>\r\n                  <Typography variant=\"subtitle1\">{weaponSheet.name}</Typography>\r\n                  <Typography><ImgIcon src={Assets.weaponTypes?.[weaponSheet.weaponType]} /> <StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\r\n                </Box>\r\n              </CardActionArea>\r\n            </CardLight>\r\n          </Grid>\r\n        })}\r\n      </Grid></CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <CloseButton large onClick={onHide} />\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n","import { Button } from '@mui/material';\r\nimport { useContext, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { CharacterSelectionModal } from '../CharacterSelectionModal';\r\nimport ThumbSide from '../../Components/Character/ThumbSide';\r\nimport { CharacterContext } from '../../Context/CharacterContext';\r\nimport useCharSelectionCallback from '../../ReactHooks/useCharSelectionCallback';\r\n\r\nexport default function CharSelectDropdown() {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { characterSheet } = useContext(CharacterContext)\r\n  const [showModal, setshowModal] = useState(false)\r\n  const setCharacter = useCharSelectionCallback()\r\n  return <>\r\n    <CharacterSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={setCharacter} />\r\n    <Button color=\"info\" onClick={() => setshowModal(true)} startIcon={<ThumbSide src={characterSheet?.thumbImgSide} />} >{characterSheet?.name ?? t(\"selectCharacter\")}</Button>\r\n  </>\r\n}\r\n","import { ExpandMore } from '@mui/icons-material';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CardContent, CardHeader, Divider, Skeleton, Typography } from '@mui/material';\r\nimport { MutableRefObject, Suspense, useCallback, useContext, useEffect, useRef, useState } from 'react';\r\nimport AmpReactionModeText from '../../Components/AmpReactionModeText';\r\nimport CardDark from '../../Components/Card/CardDark';\r\nimport CardHeaderCustom from '../../Components/Card/CardHeaderCustom';\r\nimport CardLight from '../../Components/Card/CardLight';\r\nimport CloseButton from '../../Components/CloseButton';\r\nimport ColorText from '../../Components/ColoredText';\r\nimport ImgIcon from '../../Components/Image/ImgIcon';\r\nimport ModalWrapper from \"../../Components/ModalWrapper\";\r\nimport SqBadge from '../../Components/SqBadge';\r\nimport { DataContext } from '../../Context/DataContext';\r\nimport { FormulaDataContext } from '../../Context/FormulaDataContext';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport { getDisplayHeader, getDisplaySections } from '../../Formula/DisplayUtil';\r\nimport { DisplaySub, Variant } from '../../Formula/type';\r\nimport { NodeDisplay } from '../../Formula/uiData';\r\nimport KeyMap, { valueString } from '../../KeyMap';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport { allAmpReactions, AmpReactionKey } from '../../Types/consts';\r\n\r\nexport default function FormulaModal() {\r\n  const { modalOpen } = useContext(FormulaDataContext)\r\n  const { setFormulaData } = useContext(FormulaDataContext)\r\n  const onCloseHandler = useCallback(() => setFormulaData?.(undefined, undefined), [setFormulaData])\r\n  return <ModalWrapper open={!!modalOpen} onClose={onCloseHandler}>\r\n    <CardDark>\r\n      <CardHeader title=\"Formulas & Calculations\" action={<CloseButton onClick={onCloseHandler} />} />\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <CalculationDisplay />\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n\r\nfunction CalculationDisplay() {\r\n  const { data } = useContext(DataContext)\r\n  const { data: contextData } = useContext(FormulaDataContext)\r\n  const sections = getDisplaySections(contextData ?? data)\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />} >\r\n    <Box sx={{ mr: -1, mb: -1 }}>\r\n      {sections.map(([key, Nodes]) =>\r\n        <FormulaCalc key={key} displayNs={Nodes} sectionKey={key} />)}\r\n    </Box>\r\n  </Suspense>\r\n}\r\nfunction FormulaCalc({ sectionKey, displayNs }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\r\n  const { data } = useContext(DataContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const { data: contextData } = useContext(FormulaDataContext)\r\n  const header = usePromise(() => getDisplayHeader(contextData ?? data, sectionKey, database), [contextData, data, sectionKey])\r\n  if (!header) return null\r\n  if (Object.entries(displayNs).every(([_, node]) => node.isEmpty)) return null\r\n  const { title, icon, action } = header\r\n  return <CardLight sx={{ mb: 1 }}>\r\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\r\n    <Divider />\r\n    <CardContent>\r\n      {Object.entries(displayNs).map(([key, node]) => !node.isEmpty && <FormulaAccordian key={key} node={node} />)}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction FormulaAccordian({ node }: { node: NodeDisplay }) {\r\n  const { node: contextNode } = useContext(FormulaDataContext)\r\n  const [expanded, setExpanded] = useState(false);\r\n  const handleChange = useCallback((e: React.SyntheticEvent, isExpanded: boolean) => setExpanded(isExpanded), [])\r\n  const scrollRef = useRef<HTMLDivElement>() as MutableRefObject<HTMLDivElement | null>\r\n\r\n  useEffect(() => {\r\n    if (node === contextNode) setTimeout(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), 300)\r\n  }, [scrollRef, node, contextNode])\r\n\r\n  return <Accordion sx={{ bgcolor: \"contentDark.main\" }} expanded={node === contextNode || expanded} onChange={handleChange} ref={scrollRef} >\r\n    <AccordionSummary expandIcon={<ExpandMore />} >\r\n      <Typography><ColorText color={node.info.variant}>{KeyMap.get(node.info.key ?? \"\")}</ColorText> <strong>{valueString(node.value, node.unit)}</strong></Typography>\r\n      {allAmpReactions.includes(node.info.variant as any) && <Box sx={{ display: \"inline-block\", ml: \"auto\", mr: 2 }}>\r\n        <AmpReactionModeText reaction={node.info.variant as AmpReactionKey} trigger={node.info.subVariant as Variant} />\r\n      </Box>}\r\n    </AccordionSummary>\r\n    <AccordionDetails >\r\n      {node.formulas.map((subform, i) => <Typography key={i}>{subform}</Typography>)}\r\n    </AccordionDetails>\r\n  </Accordion>\r\n}\r\n","import { IconButton, IconButtonProps, styled } from \"@mui/material\";\r\n\r\ninterface ExpandMoreProps extends IconButtonProps {\r\n  expand: boolean;\r\n}\r\nconst ExpandButton = styled((props: ExpandMoreProps) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n  marginLeft: 'auto',\r\n  transition: (theme as any).transitions.create('transform', {\r\n    duration: (theme as any).transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nexport default ExpandButton","import { Replay } from \"@mui/icons-material\"\r\nimport { Button, ButtonGroup, ButtonGroupProps, styled } from \"@mui/material\"\r\nimport { ReactNode } from \"react\"\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"./CustomNumberInput\"\r\nimport TextButton from \"./TextButton\"\r\n\r\ntype StatInputInput = ButtonGroupProps & {\r\n  name: Displayable,\r\n  children?: ReactNode,\r\n  value: number,\r\n  placeholder?: string,\r\n  defaultValue?: number,\r\n  onValueChange: (newValue: number | undefined) => void,\r\n  percent?: boolean,\r\n  disabled?: boolean,\r\n  onReset?: () => void\r\n}\r\nconst FlexButtonGroup = styled(ButtonGroup)({\r\n  display: \"flex\"\r\n})\r\n\r\nexport default function StatInput({ name, children, value, placeholder, defaultValue = 0, onValueChange, percent = false, disabled = false, onReset, ...restProps }: StatInputInput) {\r\n\r\n  return <FlexButtonGroup {...restProps} >\r\n    {children}\r\n    <TextButton sx={{ px: 1 }}>\r\n      {name}\r\n    </TextButton>\r\n    <CustomNumberInputButtonGroupWrapper sx={{ flexBasis: \"10em\", flexGrow: 1 }} >\r\n      <CustomNumberInput\r\n        sx={{ px: 1 }}\r\n        inputProps={{\r\n          sx: { textAlign: \"right\" }\r\n        }}\r\n        float={percent}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onValueChange}\r\n        disabled={disabled}\r\n        endAdornment={percent ? \"%\" : undefined}\r\n      />\r\n    </CustomNumberInputButtonGroupWrapper>\r\n    <Button sx={{ flexShrink: 2 }} size=\"small\" color=\"error\" onClick={() => onReset ? onReset() : onValueChange(defaultValue)} disabled={disabled || value === defaultValue} >\r\n      <Replay />\r\n    </Button>\r\n  </FlexButtonGroup>\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank, ExpandMore } from \"@mui/icons-material\";\r\nimport { Button, CardContent, Chip, Collapse, Grid, Typography } from \"@mui/material\";\r\nimport { useCallback, useContext, useState } from 'react';\r\nimport { CharacterContext } from \"../Context/CharacterContext\";\r\nimport { DataContext } from \"../Context/DataContext\";\r\nimport { uiInput as input } from \"../Formula\";\r\nimport KeyMap, { valueString } from '../KeyMap';\r\nimport { allElementsWithPhy, ElementKeyWithPhy } from \"../Types/consts\";\r\nimport CardLight from \"./Card/CardLight\";\r\nimport ColorText from \"./ColoredText\";\r\nimport ExpandButton from \"./ExpandButton\";\r\nimport StatIcon from \"./StatIcon\";\r\nimport StatInput from \"./StatInput\";\r\n\r\nexport function EnemyExpandCard() {\r\n  const { data } = useContext(DataContext)\r\n  const [expanded, setexpanded] = useState(false)\r\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\r\n  const eLvlNode = data.get(input.enemy.level)\r\n  const eDefRed = data.get(input.enemy.defRed)\r\n  const eDefIgn = data.get(input.enemy.defIgn)\r\n  return <CardLight>\r\n    <CardContent sx={{ display: \"flex\" }}>\r\n      <Grid container spacing={1} flexGrow={1} alignItems=\"center\">\r\n        <Grid item>\r\n          <Chip size=\"small\" color=\"success\" label={<span>{KeyMap.get(eLvlNode.info.key)} <strong>{eLvlNode.value}</strong></span>} />\r\n        </Grid>\r\n        {allElementsWithPhy.map(element => <Grid item key={element}>\r\n          <Typography key={element} ><EnemyResText element={element} /></Typography>\r\n        </Grid>)}\r\n        <Grid item>\r\n          <Typography>DEF Reduction {valueString(eDefRed.value, eDefRed.unit)}</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography>DEF Ignore {valueString(eDefIgn.value, eDefIgn.unit)}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <ExpandButton\r\n        expand={expanded}\r\n        onClick={toggle}\r\n        aria-expanded={expanded}\r\n        aria-label=\"show more\"\r\n        size=\"small\"\r\n        sx={{ p: 0 }}\r\n      >\r\n        <ExpandMore />\r\n      </ExpandButton>\r\n    </CardContent>\r\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <EnemyEditor />\r\n      </CardContent>\r\n    </Collapse>\r\n  </CardLight>\r\n}\r\n\r\nexport function EnemyResText({ element }: { element: ElementKeyWithPhy }) {\r\n  const { data } = useContext(DataContext)\r\n  const node = data.get(input.enemy[`${element}_res_`])\r\n  const immune = !isFinite(node.value)\r\n  const content = immune ? <span >{StatIcon[element]} IMMUNE</span> :\r\n    <span >{StatIcon[element]}RES <strong>{valueString(node.value, node.unit)}</strong></span>\r\n  return <ColorText color={element}>{content}</ColorText>\r\n}\r\n\r\nexport function EnemyEditor({ bsProps = { xs: 12, md: 6 } }: { bsProps?: object }) {\r\n  const { character: { enemyOverride }, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const defaultVal = 10\r\n\r\n  const eLvl = enemyOverride.enemyLevel ?? data.get(input.lvl).value\r\n  const eDefRed = enemyOverride.enemyDefIgn_ ?? 0\r\n  const eDefIgn = enemyOverride.enemyDefRed_ ?? 0\r\n  return <Grid container spacing={1}>\r\n    <Grid item {...bsProps}>\r\n      <Button fullWidth sx={{ height: \"100%\" }} size=\"small\" component=\"a\" color=\"warning\" href=\"https://genshin-impact.fandom.com/wiki/Resistance#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\r\n        To get the specific resistance values of enemies, please visit the wiki.\r\n      </Button>\r\n    </Grid>\r\n    <Grid item {...bsProps}>\r\n      <StatInput\r\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n        name={<b>{KeyMap.get(\"enemyLevel\")}</b>}\r\n        value={eLvl}\r\n        placeholder={KeyMap.getStr(\"enemyLevel\")}\r\n        defaultValue={data.get(input.lvl).value}\r\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value })}\r\n        onReset={() => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value: undefined })}\r\n      />\r\n    </Grid>\r\n    {allElementsWithPhy.map(eleKey => {\r\n      const statKey = `${eleKey}_enemyRes_`\r\n      const val = enemyOverride[statKey]\r\n      const elementImmunity = val === Number.MAX_VALUE\r\n      return <Grid item key={eleKey} {...bsProps}>\r\n        <StatInput\r\n          sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n          name={<ColorText color={eleKey}><b>{KeyMap.get(statKey)}</b></ColorText>}\r\n          value={val ? (elementImmunity ? Infinity : val) : 10}\r\n          placeholder={elementImmunity ? \"Immune \" : KeyMap.getStr(statKey)}\r\n          defaultValue={defaultVal}\r\n          onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey, value })}\r\n          disabled={elementImmunity}\r\n          percent\r\n        >\r\n          <Button color={eleKey} onClick={() => characterDispatch({ type: \"enemyOverride\", statKey, value: elementImmunity ? defaultVal : Number.MAX_VALUE })} startIcon={elementImmunity ? <CheckBox /> : <CheckBoxOutlineBlank />} >\r\n            Immunity\r\n          </Button>\r\n        </StatInput>\r\n      </Grid>\r\n    })}\r\n    <Grid item {...bsProps}>\r\n      <StatInput\r\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n        name={<b>{KeyMap.get(\"enemyDefIgn_\")}</b>}\r\n        value={eDefRed}\r\n        placeholder={KeyMap.getStr(\"enemyDefIgn_\")}\r\n        defaultValue={0}\r\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefIgn_\", value })}\r\n        percent\r\n      />\r\n    </Grid>\r\n    <Grid item {...bsProps}>\r\n      <StatInput\r\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\r\n        name={<b>{KeyMap.get(\"enemyDefRed_\")}</b>}\r\n        value={eDefIgn}\r\n        placeholder={KeyMap.getStr(\"enemyDefRed_\")}\r\n        defaultValue={0}\r\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefRed_\", value })}\r\n        percent\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12}>\r\n      <small>Note: Genshin Impact halves resistance shred values below 0%. For the sake of calculations enter the RAW value and GO will do the rest. (e.g. 10% - 20% = -10%)</small>\r\n    </Grid>\r\n  </Grid>\r\n}\r\n","import { CardContent, CardHeader, Grid, ListItem, Stack, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { useCallback, useContext, useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CardDark from \"../../Components/Card/CardDark\";\r\nimport CardLight from \"../../Components/Card/CardLight\";\r\nimport CloseButton from \"../../Components/CloseButton\";\r\nimport ColorText from \"../../Components/ColoredText\";\r\nimport { EnemyExpandCard } from \"../../Components/EnemyEditor\";\r\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../Components/FieldDisplay\";\r\nimport ModalWrapper from \"../../Components/ModalWrapper\";\r\nimport StatEditorList from \"../../Components/StatEditorList\";\r\nimport StatIcon from \"../../Components/StatIcon\";\r\nimport { CharacterContext } from \"../../Context/CharacterContext\";\r\nimport { DataContext } from \"../../Context/DataContext\";\r\nimport { allInputPremodKeys, uiInput as input } from \"../../Formula\";\r\nimport { ReadNode } from \"../../Formula/type\";\r\nimport KeyMap, { allEleDmgKeys, allEleResKeys, valueString } from \"../../KeyMap\";\r\nimport { allElements, ElementKeyWithPhy } from \"../../Types/consts\";\r\n\r\nconst cols = {\r\n  xs: 1, md: 2, lg: 3\r\n}\r\n\r\nexport default function StatModal({ open, onClose }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  return <ModalWrapper open={open} onClose={onClose}>\r\n    <CardDark>\r\n      <CardHeader title={t`addStats.title`} action={<CloseButton onClick={onClose} />} />\r\n      <CardContent sx={{ pt: 0 }}>\r\n        <Stack spacing={1}>\r\n          <BonusStatsEditor />\r\n          <EnemyExpandCard />\r\n          <MainStatsCards />\r\n        </Stack>\r\n      </CardContent></CardDark>\r\n  </ModalWrapper>\r\n}\r\nconst keys = [...allInputPremodKeys]\r\nconst wrapperFunc = (e: JSX.Element) => <Grid item xs={1}>{e}</Grid>\r\nfunction BonusStatsEditor() {\r\n  const { character: { bonusStats }, characterDispatch } = useContext(CharacterContext)\r\n  const setFilter = useCallback((bonusStats) => characterDispatch({ bonusStats }), [characterDispatch],)\r\n  return <CardLight>\r\n    <CardContent sx={{ display: \"flex\" }}>\r\n      <Grid container columns={cols} sx={{ pt: 1 }} spacing={1}>\r\n        <StatEditorList statKeys={keys} statFilters={bonusStats} setStatFilters={setFilter} wrapperFunc={wrapperFunc} />\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n\r\nconst mainBaseKeys = [\"hp\", \"atk\", \"def\"] as const\r\nconst mainSubKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"] as const\r\nconst mainReadNodes = [...mainBaseKeys, ...mainSubKeys].map(k => input.total[k])\r\nconst mainEditKeys = [\"atk_\", \"atk\", \"hp_\", \"hp\", \"def_\", \"def\", ...mainSubKeys] as const\r\n\r\nconst otherStatKeys = [\r\n  ...allEleDmgKeys,\r\n  ...allEleResKeys,\r\n  \"stamina\", \"incHeal_\", \"shield_\", \"cdRed_\"\r\n] as const\r\n\r\nconst miscStatkeys = allInputPremodKeys.filter(k => !mainEditKeys.includes(k as any) && !otherStatKeys.includes(k as any))\r\n\r\n\r\nfunction StatDisplayContent({ nodes, extra }: { nodes: ReadNode<number>[], extra?: Displayable }) {\r\n  const { data, oldData } = useContext(DataContext)\r\n  return <FieldDisplayList >\r\n    {nodes.map(rn => <NodeFieldDisplay component={ListItem} key={rn.info?.key} node={data.get(rn)} oldValue={oldData?.get(rn)?.value} />)}\r\n    {extra}\r\n  </FieldDisplayList>\r\n}\r\n\r\nfunction MainStatsCards() {\r\n  const { characterSheet } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const specialNode = data.get(input.special)\r\n  const charEle = characterSheet.elementKey\r\n  const isMelee = characterSheet.isMelee()\r\n\r\n  const otherStatReadNodes = useMemo(() => {\r\n    const nodes = otherStatKeys.map(k => input.total[k])\r\n    const eles: ElementKeyWithPhy[] = [...allElements].filter(k => k !== charEle)\r\n    if (isMelee) eles.concat([\"physical\"])\r\n\r\n    return nodes.filter(n => !(!data.get(n).value && eles.some(e => n.info?.key?.includes?.(e))))\r\n  }, [data, charEle, isMelee])\r\n\r\n\r\n  const miscStatReadNodes = useMemo(() => miscStatkeys.map(k => input.total[k]).filter(n => data.get(n).value), [data])\r\n\r\n  return <CardLight><CardContent>\r\n    <Grid container columns={cols} spacing={1}>\r\n      <Grid item xs={1}>\r\n        <StatDisplayCard title=\"Main Stats\">\r\n          <StatDisplayContent nodes={mainReadNodes}\r\n            extra={specialNode && <ListItem sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <span><b>Special:</b> <ColorText color={specialNode.info.variant}>{specialNode.info.key && StatIcon[specialNode.info.key]} {specialNode.info.key && KeyMap.get(specialNode.info.key)}</ColorText></span>\r\n              <span >{valueString(specialNode.value, specialNode.unit)}</span>\r\n            </ListItem>}\r\n          />\r\n        </StatDisplayCard>\r\n      </Grid>\r\n      <Grid item xs={1}>\r\n        <StatDisplayCard title=\"Other Stats\">\r\n          <StatDisplayContent nodes={otherStatReadNodes} />\r\n        </StatDisplayCard>\r\n      </Grid>\r\n      {!!miscStatReadNodes.length && <Grid item xs={1}>\r\n        <StatDisplayCard title=\"Misc Stats\">\r\n          <StatDisplayContent nodes={miscStatReadNodes} />\r\n        </StatDisplayCard>\r\n      </Grid>}\r\n    </Grid>\r\n  </CardContent></CardLight>\r\n}\r\nfunction StatDisplayCard({ title, children }) {\r\n  return <CardDark>\r\n    <CardContent sx={{ py: 1 }}>\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        <Typography variant=\"subtitle1\">{title}</Typography>\r\n      </Box>\r\n    </CardContent>\r\n    {children}\r\n  </CardDark>\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nexport const OptimizationTargetContext = createContext(undefined as string[] | undefined)\r\n","import { ArtSetExclusion } from \"../../../../Database/Data/BuildsettingData\";\r\nimport { forEachNodes, mapFormulas } from \"../../../../Formula/internal\";\r\nimport { allOperations, constantFold } from \"../../../../Formula/optimization\";\r\nimport { ConstantNode, NumNode } from \"../../../../Formula/type\";\r\nimport { constant, customRead, max, min } from \"../../../../Formula/utils\";\r\nimport { allSlotKeys, ArtifactSetKey, SlotKey } from \"../../../../Types/consts\";\r\nimport { assertUnreachable, objectKeyMap, objectMap, range } from \"../../../../Util/Util\";\r\n\r\ntype DynMinMax = { [key in string]: MinMax }\r\ntype MinMax = { min: number, max: number }\r\n\r\ntype MicropassOperation = \"reaffine\" | \"pruneArtRange\" | \"pruneNodeRange\" | \"pruneOrder\"\r\nexport function pruneAll(nodes: NumNode[], minimum: number[], arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion, forced: Dict<MicropassOperation, boolean>): { nodes: NumNode[], arts: ArtifactsBySlot } {\r\n  let should = forced\r\n  /** If `key` makes progress, all operations in `value` should be performed */\r\n  const deps: StrictDict<MicropassOperation, Dict<MicropassOperation, true>> = {\r\n    pruneOrder: { pruneNodeRange: true },\r\n    pruneArtRange: { pruneNodeRange: true },\r\n    pruneNodeRange: { reaffine: true },\r\n    reaffine: { pruneOrder: true, pruneArtRange: true, pruneNodeRange: true }\r\n  }\r\n  let count = 0\r\n  while (Object.values(should).some(x => x) && count++ < 20) {\r\n    if (should.pruneOrder) {\r\n      delete should.pruneOrder\r\n      const newArts = pruneOrder(arts, numTop, exclusion)\r\n      if (arts !== newArts) {\r\n        arts = newArts\r\n        should = { ...should, ...deps.pruneOrder }\r\n      }\r\n    }\r\n    if (should.pruneArtRange) {\r\n      delete should.pruneArtRange\r\n      const newArts = pruneArtRange(nodes, arts, minimum)\r\n      if (arts !== newArts) {\r\n        arts = newArts\r\n        should = { ...should, ...deps.pruneArtRange }\r\n      }\r\n    }\r\n    if (should.pruneNodeRange) {\r\n      delete should.pruneNodeRange\r\n      const newNodes = pruneNodeRange(nodes, arts)\r\n      if (nodes !== newNodes) {\r\n        nodes = newNodes\r\n        should = { ...should, ...deps.pruneNodeRange }\r\n      }\r\n    }\r\n    if (should.reaffine) {\r\n      delete should.reaffine\r\n      const { nodes: newNodes, arts: newArts } = reaffine(nodes, arts)\r\n      if (nodes !== newNodes || arts !== newArts) {\r\n        nodes = newNodes\r\n        arts = newArts\r\n        should = { ...should, ...deps.reaffine }\r\n      }\r\n    }\r\n  }\r\n  return { nodes, arts }\r\n}\r\n\r\nfunction reaffine(nodes: NumNode[], arts: ArtifactsBySlot, forceRename: boolean = false): { nodes: NumNode[], arts: ArtifactsBySlot } {\r\n  const affineNodes = new Set<NumNode>(), topLevelAffine = new Set<NumNode>()\r\n\r\n  function visit(node: NumNode, isAffine: boolean) {\r\n    if (isAffine) affineNodes.add(node)\r\n    else node.operands.forEach(_op => {\r\n      const op = _op as NumNode\r\n      affineNodes.has(op) && topLevelAffine.add(op)\r\n    })\r\n  }\r\n\r\n  const dynKeys = new Set<string>()\r\n\r\n  forEachNodes(nodes, _ => { }, f => {\r\n    const operation = f.operation\r\n    switch (operation) {\r\n      case \"read\":\r\n        if (f.type !== \"number\" || f.path[0] !== \"dyn\" || f.accu !== \"add\")\r\n          throw new Error(`Found unsupported ${operation} node at path ${f.path} when computing affine nodes`)\r\n        dynKeys.add(f.path[1])\r\n        visit(f, true)\r\n        break\r\n      case \"add\": visit(f, f.operands.every(op => affineNodes.has(op))); break\r\n      case \"mul\": {\r\n        const nonConst = f.operands.filter(op => op.operation !== \"const\")\r\n        visit(f, nonConst.length === 0 || (nonConst.length === 1 && affineNodes.has(nonConst[0])))\r\n        break\r\n      }\r\n      case \"const\":\r\n        if (typeof f.value === \"string\" || f.value === undefined)\r\n          throw new Error(`Found constant ${f.value} while compacting`)\r\n        visit(f as NumNode, true); break\r\n      case \"res\": case \"threshold\": case \"sum_frac\":\r\n      case \"max\": case \"min\": visit(f, false); break\r\n      case \"data\": case \"subscript\": case \"lookup\": case \"match\": case \"prio\": case \"small\":\r\n        throw new Error(`Found unsupported ${operation} node when computing affine nodes`)\r\n      default: assertUnreachable(operation)\r\n    }\r\n  })\r\n\r\n  if ([...topLevelAffine].every(({ operation }) => operation === \"read\" || operation === \"const\") &&\r\n    Object.keys(arts.base).length === dynKeys.size)\r\n    return { nodes, arts }\r\n\r\n  let current = -1\r\n  function nextDynKey(): string {\r\n    while (dynKeys.has(`${++current}`));\r\n    return `${current}`\r\n  }\r\n\r\n  nodes.forEach(node => affineNodes.has(node) && topLevelAffine.add(node))\r\n  const affine = [...topLevelAffine].filter(f => f.operation !== \"const\")\r\n  const affineMap = new Map(affine.map(node => [node,\r\n    !forceRename && node.operation === \"read\" && node.path[0] === \"dyn\"\r\n      ? node\r\n      : { ...customRead([\"dyn\", `${nextDynKey()}`]), accu: \"add\" as const }]))\r\n  nodes = mapFormulas(nodes, f => affineMap.get(f as NumNode) ?? f, f => f)\r\n\r\n  function reaffineArt(stat: DynStat): DynStat {\r\n    const values = constantFold([...affineMap.keys()], {\r\n      dyn: objectMap(stat, (value) => constant(value))\r\n    } as any, _ => true)\r\n    return Object.fromEntries([...affineMap.values()].map((v, i) => [v.path[1], (values[i] as ConstantNode<number>).value]))\r\n  }\r\n  const result = {\r\n    nodes, arts: {\r\n      base: reaffineArt(arts.base),\r\n      values: objectKeyMap(allSlotKeys, slot =>\r\n        arts.values[slot].map(({ id, set, values }) => ({ id, set, values: reaffineArt(values) })))\r\n    }\r\n  }\r\n  const offsets = Object.entries(reaffineArt({}))\r\n  for (const arts of Object.values(result.arts.values))\r\n    for (const { values } of arts)\r\n      for (const [key, baseValue] of offsets)\r\n        values[key] -= baseValue\r\n  return result\r\n}\r\n/** Remove artifacts that cannot be in top `numTop` builds */\r\nexport function pruneOrder(arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion): ArtifactsBySlot {\r\n  let progress = false\r\n  const noRainbow = !exclusion.rainbow?.length\r\n  const noSwitchIn = new Set(Object.entries(exclusion).filter(([_, v]) => v.length).map(([k]) => k) as ArtifactSetKey[])\r\n  const noSwitchOut = new Set(Object.entries(exclusion).filter(([_, v]) => v.includes(2) && !v.includes(4)).map(([k]) => k) as ArtifactSetKey[])\r\n  const values = objectKeyMap(allSlotKeys, slot => {\r\n    const list = arts.values[slot]\r\n    const newList = list.filter(art => {\r\n      let count = 0\r\n      return list.every(other => {\r\n        const greaterEqual = Object.entries(other.values).every(([k, o]) => o >= art.values[k])\r\n        const greater = Object.entries(other.values).some(([k, o]) => o > art.values[k])\r\n        if (greaterEqual && (greater || other.id > art.id) &&\r\n          ((noRainbow && !noSwitchIn.has(other.set!) && !noSwitchOut.has(art.set!)) || art.set === other.set))\r\n          count++\r\n        return count < numTop\r\n      })\r\n    })\r\n    if (newList.length !== list.length) progress = true\r\n    return newList\r\n  })\r\n  return progress ? { base: arts.base, values } : arts\r\n}\r\n/** Remove artifacts that cannot reach `minimum` in any build */\r\nfunction pruneArtRange(nodes: NumNode[], arts: ArtifactsBySlot, minimum: number[]): ArtifactsBySlot {\r\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\r\n  const wrap = { arts }\r\n  while (true) {\r\n    const artRanges = objectKeyMap(allSlotKeys, slot => computeArtRange(wrap.arts.values[slot]))\r\n    const otherArtRanges = objectKeyMap(allSlotKeys, key =>\r\n      addArtRange(Object.entries(artRanges).map(a => a[0] === key ? baseRange : a[1]).filter(x => x)))\r\n\r\n    let progress = false\r\n    const values = objectKeyMap(allSlotKeys, slot => {\r\n      const result = wrap.arts.values[slot].filter(art => {\r\n        const read = addArtRange([computeArtRange([art]), otherArtRanges[slot]])\r\n        const newRange = computeNodeRange(nodes, read)\r\n        return nodes.every((node, i) => newRange.get(node)!.max >= (minimum[i] ?? -Infinity))\r\n      })\r\n      if (result.length !== wrap.arts.values[slot].length)\r\n        progress = true\r\n      return result\r\n    })\r\n    if (!progress) break\r\n    wrap.arts = { base: wrap.arts.base, values }\r\n  }\r\n  return wrap.arts\r\n}\r\nfunction pruneNodeRange(nodes: NumNode[], arts: ArtifactsBySlot): NumNode[] {\r\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\r\n  const reads = addArtRange([baseRange, ...Object.values(arts.values).map(values => computeArtRange(values))])\r\n  const nodeRange = computeNodeRange(nodes, reads)\r\n\r\n  return mapFormulas(nodes, f => {\r\n    const { operation } = f\r\n    const operandRanges = f.operands.map(x => nodeRange.get(x)!)\r\n    switch (operation) {\r\n      case \"threshold\": {\r\n        const [value, threshold, pass, fail] = operandRanges\r\n        if (value.min >= threshold.max) return f.operands[2]\r\n        else if (value.max < threshold.min) return f.operands[3]\r\n        if (pass.max === pass.min &&\r\n          fail.max === fail.min &&\r\n          pass.min === fail.min && isFinite(pass.min))\r\n          return constant(pass.max)\r\n        break\r\n      }\r\n      case \"min\": {\r\n        const newOperands = f.operands.filter((_, i) => {\r\n          const op1 = operandRanges[i]\r\n          return operandRanges.every((op2, j) => op1.min <= op2.max)\r\n        })\r\n        if (newOperands.length < operandRanges.length) return min(...newOperands)\r\n        break\r\n      }\r\n      case \"max\": {\r\n        const newOperands = f.operands.filter((_, i) => {\r\n          const op1 = operandRanges[i]\r\n          return operandRanges.every(op2 => op1.max >= op2.min)\r\n        })\r\n        if (newOperands.length < operandRanges.length) return max(...newOperands)\r\n        break\r\n      }\r\n    }\r\n    return f\r\n  }, f => f)\r\n}\r\nfunction addArtRange(ranges: DynMinMax[]): DynMinMax {\r\n  const result: DynMinMax = {}\r\n  ranges.forEach(range => {\r\n    Object.entries(range).forEach(([key, value]) => {\r\n      if (result[key]) {\r\n        result[key].min += value.min\r\n        result[key].max += value.max\r\n      } else result[key] = { ...value }\r\n    })\r\n  })\r\n  return result\r\n}\r\nfunction computeArtRange(arts: ArtifactBuildData[]): DynMinMax {\r\n  const result: DynMinMax = {}\r\n  if (arts.length) {\r\n    Object.keys(arts[0].values)\r\n      .filter(key => arts.every(art => art.values[key]))\r\n      .forEach(key => result[key] = { min: arts[0].values[key], max: arts[0].values[key] })\r\n    arts.forEach(({ values }) => {\r\n      for (const [key, value] of Object.entries(values)) {\r\n        if (!result[key]) result[key] = { min: 0, max: value }\r\n        else {\r\n          if (result[key].max < value) result[key].max = value\r\n          if (result[key].min > value) result[key].min = value\r\n        }\r\n      }\r\n    })\r\n  }\r\n  return result\r\n}\r\nfunction computeNodeRange(nodes: NumNode[], reads: DynMinMax): Map<NumNode, MinMax> {\r\n  const range = new Map<NumNode, MinMax>()\r\n\r\n  forEachNodes(nodes, _ => { }, _f => {\r\n    const f = _f as NumNode\r\n    const { operation } = f\r\n    const operands = f.operands.map(op => range.get(op)!)\r\n    let current: MinMax\r\n    switch (operation) {\r\n      case \"read\":\r\n        if (f.path[0] !== \"dyn\")\r\n          throw new Error(`Found non-dyn path ${f.path} while computing range`)\r\n        current = reads[f.path[1]] ?? { min: 0, max: 0 }\r\n        break\r\n      case \"const\": current = computeMinMax([f.value]); break\r\n      case \"subscript\": current = computeMinMax(f.list); break\r\n      case \"add\": case \"min\": case \"max\":\r\n        current = {\r\n          min: allOperations[operation](operands.map(x => x.min)),\r\n          max: allOperations[operation](operands.map(x => x.max)),\r\n        }; break\r\n      case \"res\": current = {\r\n        min: allOperations[operation]([operands[0].max]),\r\n        max: allOperations[operation]([operands[0].min]),\r\n      }; break\r\n      case \"mul\": current = operands.reduce((accu, current) => computeMinMax([\r\n        accu.min * current.min, accu.min * current.max,\r\n        accu.max * current.min, accu.max * current.max,\r\n      ])); break\r\n      case \"threshold\":\r\n        if (operands[0].min >= operands[1].max) current = operands[2]\r\n        else if (operands[0].max < operands[1].min) current = operands[3]\r\n        else current = computeMinMax([], [operands[2], operands[3]])\r\n        break\r\n      case \"sum_frac\": {\r\n        const [x, c] = operands, sum = { min: x.min + c.min, max: x.max + c.max }\r\n        if (sum.min <= 0 && sum.max >= 0)\r\n          current = (x.min <= 0 && x.max >= 0) ? { min: NaN, max: NaN } : { min: -Infinity, max: Infinity }\r\n        else\r\n          // TODO: Check this\r\n          current = computeMinMax([\r\n            x.min / sum.min, x.min / sum.max,\r\n            x.max / sum.min, x.max / sum.max\r\n          ])\r\n        break\r\n      }\r\n      case \"data\": case \"lookup\": case \"match\":\r\n        throw new Error(`Unsupported ${operation} node`)\r\n      default: assertUnreachable(operation)\r\n    }\r\n    range.set(f, current)\r\n  })\r\n  return range\r\n}\r\nfunction computeMinMax(values: readonly number[], minMaxes: readonly MinMax[] = []): MinMax {\r\n  const max = Math.max(...values, ...minMaxes.map(x => x.max))\r\n  const min = Math.min(...values, ...minMaxes.map(x => x.min))\r\n  return { min, max }\r\n}\r\n\r\nexport function filterArts(arts: ArtifactsBySlot, filters: RequestFilter): ArtifactsBySlot {\r\n  return {\r\n    base: arts.base,\r\n    values: objectKeyMap(allSlotKeys, slot => {\r\n      const filter = filters[slot]\r\n      switch (filter.kind) {\r\n        case \"id\": return arts.values[slot].filter(art => filter.ids.has(art.id))\r\n        case \"exclude\": return arts.values[slot].filter(art => !filter.sets.has(art.set!))\r\n        case \"required\": return arts.values[slot].filter(art => filter.sets.has(art.set!))\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport function mergeBuilds(builds: Build[][], maxNum: number): Build[] {\r\n  return builds.flatMap(x => x).sort((a, b) => b.value - a.value).slice(0, maxNum)\r\n}\r\nexport function mergePlot(plots: PlotData[]): PlotData {\r\n  let scale = 0.01, reductionScaling = 2, maxCount = 1500\r\n  let keys = new Set(plots.flatMap(x => Object.values(x).map(v => Math.round(v.plot! / scale))))\r\n  while (keys.size > maxCount) {\r\n    scale *= reductionScaling\r\n    keys = new Set([...keys].map(key => Math.round(key / reductionScaling)))\r\n  }\r\n  const result: PlotData = {}\r\n  for (const plot of plots)\r\n    for (const build of Object.values(plot)) {\r\n      const x = Math.round(build.plot! / scale) * scale\r\n      if (!result[x] || result[x]!.value < build.value)\r\n        result[x] = build\r\n    }\r\n  return result\r\n}\r\n\r\nexport function countBuilds(arts: ArtifactsBySlot): number {\r\n  return allSlotKeys.reduce((_count, slot) => _count * arts.values[slot].length, 1)\r\n}\r\n\r\n\r\nexport function* filterFeasiblePerm(filters: Iterable<RequestFilter>, _artSets: ArtifactsBySlot): Iterable<RequestFilter> {\r\n  const artSets = objectMap(_artSets.values, values => new Set(values.map(v => v.set)))\r\n  filter_loop: for (const filter of filters) {\r\n    for (const [slot, f] of Object.entries(filter)) {\r\n      const available = artSets[slot]!\r\n      switch (f.kind) {\r\n        case \"required\": if ([...f.sets].every(s => !available.has(s))) continue filter_loop; break\r\n        case \"exclude\": if ([...available].every(s => f.sets.has(s!))) continue filter_loop; break\r\n        case \"id\": break\r\n      }\r\n    }\r\n    yield filter\r\n  }\r\n}\r\nexport function exclusionToAllowed(exclusion: number[] | undefined): Set<number> {\r\n  return new Set(exclusion?.includes(2)\r\n    ? exclusion.includes(4) ? [0, 1] : [0, 1, 4, 5]\r\n    : exclusion?.includes(4) ? [0, 1, 2, 3] : [0, 1, 2, 3, 4, 5])\r\n}\r\n/** A *disjoint* set of `RequestFilter` satisfying the exclusion rules */\r\nexport function* artSetPerm(exclusion: ArtSetExclusion, _artSets: ArtifactSetKey[]): Iterable<RequestFilter> {\r\n  /**\r\n   * This generation algorithm is separated into two parts:\r\n   * - \"Shape\" generation\r\n   *   - It first generates all build \"shapes\", e.g., AABBC, ABBCD\r\n   *   - It then filters the generated shapes according to the rainbow exclusion, e.g., removes ABBCD if excluding 3 rainbows\r\n   *   - It then merges the remaining shapes into wildcards, e.g. AABAA + AABAB + AABAC => AABA*\r\n   * - Shape filling\r\n   *   - From the given shapes, it tries to fill in all non-rainbow slots, e.g., slots A and B of AABBC, with actual artifacts\r\n   *   - It then fills the rainbow slots, e.g., slot C of AABBC while ensuring the exclusion rule of each sets\r\n   */\r\n  const artSets = [...new Set(_artSets)], allowedRainbows = exclusionToAllowed(exclusion.rainbow)\r\n  let shapes: number[][] = []\r\n  function populateShapes(current: number[], list: Set<number>, rainbows: number[]) {\r\n    if (current.length === 5) {\r\n      if (allowedRainbows.has(rainbows.length))\r\n        shapes.push(current)\r\n      return\r\n    }\r\n    for (const i of list) populateShapes([...current, i], list, rainbows.filter(j => j !== i))\r\n    populateShapes([...current, current.length], new Set([...list, current.length]), [...rainbows, current.length])\r\n  }\r\n  populateShapes([0], new Set([0]), [0])\r\n  function indexOfShape(shape: number[], replacing: number) {\r\n    if (range(replacing + 1, 4).some(i => shape[i] !== 5))\r\n      return undefined\r\n    shape = [...shape]\r\n    shape[replacing] = 5\r\n    return shape.reduce((a, b) => a * 6 + b, 0)\r\n  }\r\n  for (let replacing = 4; replacing >= 0; replacing--) {\r\n    const required: Map<number, number> = new Map()\r\n    for (const shape of shapes) {\r\n      const id = indexOfShape(shape, replacing)\r\n      if (id === undefined) continue\r\n      required.set(id, (required.get(id) ?? new Set(shape.slice(0, replacing)).size + 1) - 1)\r\n    }\r\n    for (const [id, remaining] of required.entries()) {\r\n      if (remaining === 0) {\r\n        const shape = [...shapes.find(shape => indexOfShape(shape, replacing) === id)!]\r\n        shape[replacing] = 5\r\n        shapes = shapes.filter(shape => indexOfShape(shape, replacing) !== id)\r\n        shapes.push(shape)\r\n      }\r\n    }\r\n  }\r\n\r\n  // Shapes are now calculated and merged, proceed to fill in the sets\r\n\r\n  const noFilter = { kind: \"exclude\" as const, sets: new Set<ArtifactSetKey>() }\r\n  const result: RequestFilter = objectKeyMap(allSlotKeys, _ => noFilter)\r\n\r\n  const counts = { ...objectMap(exclusion, _ => 0), ...objectKeyMap(artSets, _ => 0) }\r\n  const allowedCounts = objectMap(exclusion, exclusionToAllowed)\r\n\r\n  function* check(shape: number[]) {\r\n    const used: Set<ArtifactSetKey> = new Set()\r\n    let groupped: number[][] = [], rainbows: number[] = []\r\n    for (const i of shape) {\r\n      groupped.push([])\r\n      if (i === 5) rainbows.push(groupped.length - 1)\r\n      else groupped[i].push(groupped.length - 1)\r\n    }\r\n    groupped = groupped.filter(v => v.length).sort((a, b) => b.length - a.length)\r\n    let usableRainbows = rainbows.length\r\n\r\n    // Inception.. because js doesn't like functions inside a for-loop\r\n    function* check(i: number) {\r\n      if (i === groupped.length)\r\n        return yield* check_free(0)\r\n\r\n      for (const set of artSets) {\r\n        if (used.has(set)) continue\r\n        const length = groupped[i].length, allowedSet = allowedCounts[set]\r\n        let requiredRainbows = 0\r\n\r\n        if (allowedSet && !allowedSet.has(length)) {\r\n          // Look ahead and see if we have enough rainbows to fill to the next `allowedSet` if we use the current set\r\n          requiredRainbows = (range(length + 1, 5).find(l => allowedSet.has(l)) ?? 6) - length\r\n          if (requiredRainbows > usableRainbows) continue // Not enough rainbows. Next..\r\n        }\r\n\r\n        used.add(set)\r\n        counts[set] = groupped[i].length\r\n        groupped[i].forEach(j => result[allSlotKeys[j]] = { kind: \"required\", sets: new Set([set]) })\r\n        usableRainbows -= requiredRainbows\r\n\r\n        yield* check(i + 1)\r\n\r\n        usableRainbows += requiredRainbows\r\n        counts[set] = 0\r\n        used.delete(set)\r\n      }\r\n    }\r\n    // We separate filling rainbow slots from groupped slots because it has an entirely\r\n    // different set of rules regarding what can be filled and what states to be kept.\r\n    function* check_free(i: number) {\r\n      const remaining = rainbows.length - i, isolated: ArtifactSetKey[] = [], missing: ArtifactSetKey[] = [], rejected: ArtifactSetKey[] = []\r\n      let required = 0\r\n      for (const set of artSets) {\r\n        const allowedSet = allowedCounts[set], count = counts[set]\r\n        if (!allowedSet) continue\r\n        if (range(1, remaining).every(j => !allowedSet.has(count + j))) rejected.push(set)\r\n        else if (!allowedSet.has(count)) {\r\n          required += [...allowedSet].find(x => x > count)! - count\r\n          missing.push(set)\r\n        }\r\n        else if (range(0, remaining).some(j => !allowedSet.has(count + j))) isolated.push(set)\r\n      }\r\n      if (required > remaining) return\r\n      if (i === rainbows.length) {\r\n        yield { ...result }\r\n        return\r\n      }\r\n      if (required === remaining) {\r\n        for (const set of missing) {\r\n          counts[set]++\r\n          result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\r\n          yield* check_free(i + 1)\r\n          counts[set]--\r\n        }\r\n        return\r\n      }\r\n      for (const set of [...isolated, ...missing]) {\r\n        counts[set]++\r\n        result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\r\n        yield* check_free(i + 1)\r\n        counts[set]--\r\n      }\r\n      result[allSlotKeys[rainbows[i]]] = { kind: \"exclude\", sets: new Set([...missing, ...rejected, ...isolated]) }\r\n      yield* check_free(i + 1)\r\n    }\r\n    yield* check(0)\r\n  }\r\n  for (const shape of shapes) yield* check(shape)\r\n}\r\n\r\nexport type RequestFilter = StrictDict<SlotKey,\r\n  { kind: \"required\", sets: Set<ArtifactSetKey> } |\r\n  { kind: \"exclude\", sets: Set<ArtifactSetKey> } |\r\n  { kind: \"id\", ids: Set<string> }\r\n>\r\n\r\nexport type DynStat = { [key in string]: number }\r\nexport type ArtifactBuildData = {\r\n  id: string\r\n  set?: ArtifactSetKey\r\n  values: DynStat\r\n}\r\nexport type ArtifactsBySlot = { base: DynStat, values: StrictDict<SlotKey, ArtifactBuildData[]> }\r\n\r\nexport type PlotData = Dict<number, Build>\r\nexport interface Build {\r\n  value: number\r\n  plot?: number\r\n  artifactIds: string[]\r\n}\r\n","import { Box } from \"@mui/material\"\r\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\r\nimport DocumentDisplay from \"../DocumentDisplay\"\r\n\r\ntype Data = {\r\n  setKey: ArtifactSetKey,\r\n  setNumKey: SetNum,\r\n  hideHeader?: boolean,\r\n  conditionalsOnly?: boolean\r\n}\r\n\r\nexport default function SetEffectDisplay({ setKey, setNumKey, hideHeader = false, conditionalsOnly = false }: Data) {\r\n  const sheet = usePromise(() => ArtifactSheet.get(setKey), [setKey])\r\n  if (!sheet) return null\r\n\r\n  const document = conditionalsOnly ? sheet.setEffectDocument(setNumKey)?.filter(section => \"states\" in section) : sheet.setEffectDocument(setNumKey)\r\n  return <Box display=\"flex\" flexDirection=\"column\">\r\n    {document ? <DocumentDisplay sections={document} hideHeader={hideHeader} /> : null}\r\n  </Box>\r\n}\r\n","import { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { DatabaseContext } from \"../../../../Database/Database\";\r\nimport { BuildSetting, BuildSettingReducerAction } from \"../../../../Database/Data/BuildsettingData\";\r\nimport { CharacterKey } from \"../../../../Types/consts\";\r\n\r\nexport default function useBuildSetting(characterKey: CharacterKey) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [buildSetting, setBuildSetting] = useState(() => database.buildSettings.get(characterKey))\r\n  useEffect(() => setBuildSetting(database.buildSettings.get(characterKey)), [database, characterKey])\r\n  useEffect(() =>\r\n    database.buildSettings.follow(characterKey, (k, r, v) => r === \"update\" && setBuildSetting(v)),\r\n    [characterKey, setBuildSetting, database])\r\n  const buildSettingDispatch = useCallback((action: BuildSettingReducerAction) => characterKey && database.buildSettings.set(characterKey, action), [characterKey, database],)\r\n\r\n  return { buildSetting: buildSetting as BuildSetting, buildSettingDispatch }\r\n}\r\n","import { faBan, faChartLine } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { CheckBoxOutlineBlank, CheckBox, Replay, Settings } from '@mui/icons-material';\r\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Stack, Typography } from '@mui/material';\r\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\r\nimport SetEffectDisplay from '../../../../../Components/Artifact/SetEffectDisplay';\r\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\r\nimport CardDark from '../../../../../Components/Card/CardDark';\r\nimport CardLight from '../../../../../Components/Card/CardLight';\r\nimport CloseButton from '../../../../../Components/CloseButton';\r\nimport ColorText from '../../../../../Components/ColoredText';\r\nimport InfoTooltip from '../../../../../Components/InfoTooltip';\r\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\r\nimport SqBadge from '../../../../../Components/SqBadge';\r\nimport { StarsDisplay } from '../../../../../Components/StarDisplay';\r\nimport { Translate } from '../../../../../Components/Translate';\r\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\r\nimport { DatabaseContext } from '../../../../../Database/Database';\r\nimport { DataContext, dataContextObj } from '../../../../../Context/DataContext';\r\nimport { UIData } from '../../../../../Formula/uiData';\r\nimport { constant } from '../../../../../Formula/utils';\r\nimport useForceUpdate from '../../../../../ReactHooks/useForceUpdate';\r\nimport usePromise from '../../../../../ReactHooks/usePromise';\r\nimport { allArtifactSets, allSlotKeys, ArtifactSetKey, SetNum, SlotKey } from '../../../../../Types/consts';\r\nimport { deepClone, objectKeyMap } from '../../../../../Util/Util';\r\nimport useBuildSetting from '../useBuildSetting';\r\n\r\nexport default function ArtifactSetConfig({ disabled }: { disabled?: boolean, }) {\r\n  const { t } = useTranslation([\"page_character_optimize\", \"sheet\"])\r\n  const dataContext = useContext(DataContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const { character: { key: characterKey, conditional }, characterDispatch } = useContext(CharacterContext)\r\n  const { buildSetting: { artSetExclusion }, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const [open, setOpen] = useState(false)\r\n  const onOpen = useCallback(() => setOpen(true), [setOpen])\r\n  const onClose = useCallback(() => setOpen(false), [setOpen])\r\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\r\n  const artSetKeyList = useMemo(() => artifactSheets ? Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets)).reverse().flatMap(([, sets]) => sets).filter(key => !key.includes(\"Prayers\")) : [], [artifactSheets])\r\n\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n  useEffect(() => database.arts.followAny(forceUpdate), [database, forceUpdate])\r\n\r\n  const artSlotCount = useMemo(() => {\r\n    const artSlotCount: Dict<ArtifactSetKey, Record<SlotKey, number>> = Object.fromEntries(artSetKeyList.map(k => [k, Object.fromEntries(allSlotKeys.map(sk => [sk, 0]))]))\r\n    database.arts.values.map(art => artSlotCount[art.setKey] && artSlotCount[art.setKey]![art.slotKey]++)\r\n    return dbDirty && artSlotCount\r\n  }, [dbDirty, database, artSetKeyList])\r\n  const allowRainbow2 = !artSetExclusion.rainbow?.includes(2)\r\n  const allowRainbow4 = !artSetExclusion.rainbow?.includes(4)\r\n\r\n  const { allow2, allow4, exclude2, exclude4 } = useMemo(() => ({\r\n    allow2: artSetKeyList.filter(k => !artSetExclusion[k]?.includes(2)).length,\r\n    allow4: artSetKeyList.filter(k => !artSetExclusion[k]?.includes(4)).length,\r\n    exclude2: artSetKeyList.filter(k => artSetExclusion[k]?.includes(2)).length,\r\n    exclude4: artSetKeyList.filter(k => artSetExclusion[k]?.includes(4)).length,\r\n  }), [artSetKeyList, artSetExclusion])\r\n  const artifactCondCount = useMemo(() =>\r\n    (Object.keys(conditional)).filter(k =>\r\n      allArtifactSets.includes(k as ArtifactSetKey) && Object.keys(conditional[k]).length !== 0).length\r\n    , [conditional])\r\n  const fakeDataContextObj = useMemo(() => ({\r\n    ...dataContext,\r\n    data: new UIData({ ...dataContext.data.data[0], artSet: objectKeyMap(allArtifactSets, _ => constant(4)) }, undefined)\r\n  }), [dataContext])\r\n  const resetArtConds = useCallback(() => {\r\n    const tconditional = Object.fromEntries(Object.entries(conditional).filter(([k, v]) => !allArtifactSets.includes(k as any)))\r\n    characterDispatch({ conditional: tconditional })\r\n  }, [conditional, characterDispatch]);\r\n  const setAllExclusion = useCallback(\r\n    (setnum: number, exclude = true) => {\r\n      const artSetExclusion_ = deepClone(artSetExclusion)\r\n      artSetKeyList.forEach(k => {\r\n        if (exclude) artSetExclusion_[k] = [...(artSetExclusion_[k] ?? []), setnum];\r\n        else if (artSetExclusion_[k]) artSetExclusion_[k] = artSetExclusion_[k].filter(n => n !== setnum);\r\n      })\r\n      buildSettingDispatch({ artSetExclusion: artSetExclusion_ })\r\n    },\r\n    [artSetKeyList, artSetExclusion, buildSettingDispatch],\r\n  )\r\n\r\n  return <>\r\n    <CardLight sx={{ display: \"flex\" }}>\r\n      <CardContent sx={{ flexGrow: 1 }} >\r\n        <Typography>\r\n          <strong>{t`artSetConfig.title`}</strong>\r\n        </Typography>\r\n        <Stack spacing={1}>\r\n          <Typography>{t`artSetConfig.setEffCond`} <SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"artSetConfig.enabled\")}</SqBadge></Typography>\r\n          <Typography>{t`sheet:2set`} <SqBadge color=\"success\">{allow2} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!exclude2 && \" / \"}{!!exclude2 && <SqBadge color=\"secondary\">{exclude2} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\r\n          <Typography>{t`sheet:4set`} <SqBadge color=\"success\">{allow4} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!exclude4 && \" / \"}{!!exclude4 && <SqBadge color=\"secondary\">{exclude4} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\r\n          <Typography>{t`artSetConfig.2rainbow`} <SqBadge color={allowRainbow2 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow2 ? t<string>(\"artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\r\n          <Typography>{t`artSetConfig.4rainbow`} <SqBadge color={allowRainbow4 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow4 ? t<string>(\"artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\r\n        </Stack>\r\n\r\n      </CardContent>\r\n      <Button onClick={onOpen} disabled={disabled} color=\"info\" sx={{ borderRadius: 0 }}>\r\n        <Settings />\r\n      </Button>\r\n    </CardLight>\r\n    {artifactSheets && <ModalWrapper open={open} onClose={onClose} ><CardDark>\r\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\r\n        <Typography variant=\"h6\" >{t`artSetConfig.title`}</Typography>\r\n        <CloseButton onClick={onClose} />\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent >\r\n        <CardLight sx={{ mb: 1 }}><CardContent>\r\n          <Box display=\"flex\" gap={1}>\r\n            <Typography><strong>{t`artSetConfig.modal.setCond.title`}</strong></Typography>\r\n            <Typography sx={{ flexGrow: 1 }}><SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"artSetConfig.selected\")}</SqBadge></Typography>\r\n            <Button size='small' onClick={resetArtConds} color=\"error\" startIcon={<Replay />}>{t`artSetConfig.modal.setCond.reset`}</Button>\r\n          </Box>\r\n          <Typography>{t`artSetConfig.modal.setCond.text`}</Typography>\r\n        </CardContent></CardLight>\r\n        <CardLight sx={{ mb: 1 }}><CardContent>\r\n          <Typography sx={{ flexGrow: 1 }}><strong>\r\n            <Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.title\" >Artifact Sets <ColorText color='success'>Allowed<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Excluded<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText></Trans>\r\n          </strong></Typography>\r\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.intro\">You can allow/exclude which sets you want the builder to consider. In the following examples, <strong>A</strong> is on-set, and <strong>R</strong> is rainbow(off-set)</Trans></Typography>\r\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.2set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 2-Set</ColorText></strong> would exclude 2-Set builds: <strong><ColorText color='secondary' variant='light'>AA</ColorText>RRR</strong> and <strong><ColorText color='secondary' variant='light'>AAA</ColorText>RR</strong>.</Trans></Typography>\r\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.4set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 4-Set</ColorText></strong> would exclude 4-Set builds: <strong><ColorText color='secondary' variant='light'>AAAA</ColorText>R</strong> and <strong><ColorText color='secondary' variant='light'>AAAAA</ColorText></strong>.</Trans></Typography>\r\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.2rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 3-Rainbow</ColorText></strong> would exclude 2-Set + 3-Rainbow builds: <strong>AA<ColorText color='secondary' variant='light'>RRR</ColorText></strong> and <strong>AAA<ColorText color='secondary' variant='light'>RR</ColorText></strong>.</Trans></Typography>\r\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.4rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 5-Rainbow</ColorText></strong> would exclude full 5-Rainbow builds: <strong><ColorText color='secondary' variant='light'>RRRRR</ColorText></strong>.</Trans></Typography>\r\n        </CardContent></CardLight>\r\n        <Grid container columns={{ xs: 2, lg: 3 }} sx={{ mb: 1 }} spacing={1}>\r\n          <Grid item xs={1}>\r\n            <AllSetAllowExcludeCard setNum={2} numAllow={allow2} numExclude={exclude2} setAllExclusion={setAllExclusion} />\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <AllSetAllowExcludeCard setNum={4} numAllow={allow4} numExclude={exclude4} setAllExclusion={setAllExclusion} />\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            <CardLight>\r\n              <CardContent>\r\n                <Typography gutterBottom><strong><Trans t={t} i18nKey=\"artSetConfig.alExRainbow\"><ColorText color='success'>Allow <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Exclude <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText> Rainbow Builds</Trans></strong></Typography>\r\n                <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 2 })} color={allowRainbow2 ? \"success\" : \"secondary\"} startIcon={!allowRainbow2 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`artSetConfig.2rainbow`}</Button>\r\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 4 })} color={allowRainbow4 ? \"success\" : \"secondary\"} startIcon={!allowRainbow4 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`artSetConfig.4rainbow`}</Button>\r\n                </Box>\r\n              </CardContent>\r\n            </CardLight>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1} columns={{ xs: 2, lg: 3 }}>\r\n          {artSetKeyList.map(setKey => {\r\n            return <ArtifactSetCard key={setKey} setKey={setKey} sheet={artifactSheets(setKey)} fakeDataContextObj={fakeDataContextObj} slotCount={artSlotCount[setKey]!} />\r\n          })}\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent sx={{ py: 1 }}>\r\n        <CloseButton large onClick={onClose} />\r\n      </CardContent>\r\n    </CardDark></ModalWrapper >}\r\n  </>\r\n}\r\nfunction AllSetAllowExcludeCard({ numAllow, numExclude, setNum, setAllExclusion }: { numAllow: number, numExclude: number, setNum: 2 | 4, setAllExclusion: (setNum: 2 | 4, exclude?: boolean) => void }) {\r\n  const { t } = useTranslation([\"page_character_optimize\", \"sheet\"])\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Typography gutterBottom><strong>{t(`sheet:${setNum}set`)}</strong> <SqBadge color=\"success\">{numAllow} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!numExclude && \" / \"}{!!numExclude && <SqBadge color=\"secondary\">{numExclude} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\r\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n        <Button fullWidth disabled={!numExclude} onClick={() => setAllExclusion(setNum, false)} color='success' startIcon={<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" />}>{t(`artSetConfig.allowAll${setNum}set`)}</Button>\r\n        <Button fullWidth disabled={!numAllow} onClick={() => setAllExclusion(setNum, true)} color='secondary' startIcon={<FontAwesomeIcon icon={faBan} className=\"fa-fw\" />}>{t(`artSetConfig.excludeAll${setNum}set`)}</Button>\r\n      </Box>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction ArtifactSetCard({ sheet, setKey, fakeDataContextObj, slotCount }: { setKey: ArtifactSetKey, sheet: ArtifactSheet, fakeDataContextObj: dataContextObj, slotCount: Record<SlotKey, number> }) {\r\n  const { t } = useTranslation(\"sheet\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const setExclusionSet = buildSetting?.artSetExclusion?.[setKey] ?? []\r\n  const allow4 = !setExclusionSet.includes(4)\r\n  const slots = useMemo(() => Object.values(slotCount).reduce((tot, v) => tot + (v ? 1 : 0), 0), [slotCount])\r\n\r\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\r\n  const set4CondNums = useMemo(() => {\r\n    if (!allow4 || slots < 4) return []\r\n    return Object.keys(sheet.setEffects).filter(setNumKey => sheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\r\n  }, [sheet.setEffects, allow4, slots])\r\n  const exclude2 = setExclusionSet.includes(2)\r\n  const exclude4 = setExclusionSet.includes(4)\r\n  if (slots < 2) return null\r\n  return <Grid item key={setKey} xs={1}>\r\n    <CardLight sx={{ height: \"100%\" }}>\r\n      <Box className={`grad-${sheet.rarity[0]}star`} width=\"100%\" sx={{ display: \"flex\" }} >\r\n        <Box component=\"img\" src={sheet.defIconSrc} sx={{ height: 100, width: \"auto\", mx: -1 }} />\r\n        <Box sx={{ flexGrow: 1, px: 1, display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\r\n          <Typography variant=\"h6\">{sheet.name ?? \"\"}</Typography>\r\n          <Box display=\"flex\" gap={1}>\r\n            <Typography variant=\"subtitle1\">{sheet.rarity.map((ns, i) => <span key={ns}>{ns} <StarsDisplay stars={1} /> {i < (sheet.rarity.length - 1) ? \"/ \" : null}</span>)}</Typography>\r\n            {/* If there is ever a 2-Set conditional, we will need to change this */}\r\n            <InfoTooltip title={<Box>\r\n              <Typography><SqBadge color=\"success\">{t`2set`}</SqBadge></Typography>\r\n              <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.2\"} /></Typography>\r\n              <Box paddingTop={2} sx={{ opacity: setExclusionSet.includes(4) ? 0.6 : 1 }} >\r\n                <Typography><SqBadge color=\"success\">{t`4set`}</SqBadge></Typography>\r\n                <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.4\"} /></Typography>\r\n              </Box>\r\n            </Box>} />\r\n          </Box>\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>{Object.entries(slotCount).map(([slotKey, count]) => <Typography key={slotKey} sx={{ flexGrow: 1 }} variant=\"subtitle2\" ><SqBadge sx={{ width: \"100%\" }} color={count ? \"primary\" : \"secondary\"}>{artifactSlotIcon(slotKey)}{count}</SqBadge></Typography>)}</Box>\r\n        </Box>\r\n      </Box>\r\n      <ButtonGroup sx={{ \".MuiButton-root\": { borderRadius: 0 } }} fullWidth>\r\n        {slots >= 2 && <Button startIcon={exclude2 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 2 })} color={exclude2 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude2 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`2set`}</Button>}\r\n        {slots >= 4 && <Button startIcon={exclude4 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 4 })} color={exclude4 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude4 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`4set`}</Button>}\r\n      </ButtonGroup>\r\n\r\n      {!!set4CondNums.length && <DataContext.Provider value={fakeDataContextObj}>\r\n        <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n          {set4CondNums.map(setNumKey =>\r\n            <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\r\n          )}\r\n        </CardContent>\r\n      </DataContext.Provider>}\r\n    </CardLight>\r\n  </Grid >\r\n}\r\n","import { MenuItem } from \"@mui/material\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport DropdownButton from \"../../../../../Components/DropdownMenu/DropdownButton\"\r\n\r\nconst levels = [0, 4, 8, 12, 16, 20] as const\r\nexport default function AssumeFullLevelToggle({ mainStatAssumptionLevel = 0, setmainStatAssumptionLevel, disabled }) {\r\n  const { t } = useTranslation(\"page_character_optimize\")\r\n  return <DropdownButton fullWidth color={mainStatAssumptionLevel ? \"success\" : \"primary\"} disabled={disabled}\r\n    title={mainStatAssumptionLevel ? t(\"mainStat.assumptionLvl.lvl\", { lvl: mainStatAssumptionLevel }) : t(\"mainStat.assumptionLvl.no\")}>\r\n    {levels.map((lvl) => <MenuItem key={lvl} onClick={() => setmainStatAssumptionLevel(lvl)}>{lvl ? t(\"mainStat.assumptionLvl.lvl\", { lvl }) : t(\"mainStat.assumptionLvl.no\")}</MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n","import { CardContent, Divider, Typography } from '@mui/material';\r\nimport { useContext } from 'react';\r\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\r\nimport CardLight from '../../../../../Components/Card/CardLight';\r\nimport { NodeFieldDisplay } from '../../../../../Components/FieldDisplay';\r\nimport { DataContext } from '../../../../../Context/DataContext';\r\nimport { uiInput as input } from '../../../../../Formula';\r\nimport { NumNode } from '../../../../../Formula/type';\r\nexport default function BonusStatsCard() {\r\n  const { character: { bonusStats } } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const bonusStatsKeys = Object.keys(bonusStats)\r\n  if (!bonusStatsKeys.length) return null\r\n  const nodes = bonusStatsKeys.map(k => data.get(input.customBonus[k] as NumNode))\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Typography>Bonus Stats</Typography>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      {nodes.map(n => <NodeFieldDisplay key={n.info.key} node={n} />)}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n","import { Alert, Grid, LinearProgress, styled, Typography } from '@mui/material';\r\nimport { ReactNode } from 'react';\r\nimport { timeStringMs } from '../../../../../Util/TimeUtil';\r\n\r\nexport const warningBuildNumber = 10000000\r\nexport type BuildStatus = {\r\n  type: \"active\" | \"inactive\"\r\n  tested: number      // tested, including `failed`\r\n  failed: number      // tested but fail the filter criteria, e.g., not enough EM\r\n  skipped: number\r\n  total: number\r\n  startTime?: number\r\n  finishTime?: number\r\n}\r\n\r\nconst Monospace = styled(\"strong\")({\r\n  fontFamily: \"monospace\"\r\n})\r\n\r\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\r\n  height: 10,\r\n  borderRadius: 5,\r\n}));\r\nexport default function BuildAlert({ status: { type, tested, failed, skipped, total, startTime, finishTime }, characterName }: { status: BuildStatus, characterName: Displayable }) {\r\n  const hasTotal = isFinite(total)\r\n\r\n  const generatingBuilds = type !== \"inactive\"\r\n  const unskipped = total - skipped\r\n\r\n  const testedString = <Monospace>{tested.toLocaleString()}</Monospace>\r\n  const unskippedString = <Monospace>{unskipped.toLocaleString()}</Monospace>\r\n  const skippedText = !!skipped && <span>(<b>{<Monospace>{skipped.toLocaleString()}</Monospace>}</b> skipped)</span>\r\n\r\n  const durationString = <Monospace>{timeStringMs(Math.round((finishTime ?? performance.now()) - (startTime ?? NaN)))}</Monospace>\r\n\r\n  let color = \"success\" as \"success\" | \"warning\" | \"error\"\r\n  let title = \"\" as ReactNode\r\n  let subtitle = \"\" as ReactNode\r\n  let progress = undefined as undefined | number\r\n\r\n  if (generatingBuilds) {\r\n    progress = tested * 100 / (unskipped)\r\n    title = <Typography>Generating and testing {testedString}{hasTotal ? <>/{unskippedString}</> : undefined} build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\r\n    subtitle = <Typography>Time elapsed: {durationString}</Typography>\r\n  } else if (tested + skipped) {\r\n    progress = 100\r\n    title = <Typography>Generated and tested {testedString} Build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\r\n    subtitle = <Typography>Total duration: {durationString}</Typography>\r\n  } else {\r\n    return null\r\n  }\r\n\r\n  return <Alert severity={color} variant=\"filled\" sx={{\r\n    \"& .MuiAlert-message\": {\r\n      flexGrow: 1\r\n    }\r\n  }}>\r\n    {title}\r\n    {subtitle}\r\n    {progress !== undefined && <Grid container spacing={1} alignItems=\"center\">\r\n      {hasTotal && <Grid item>\r\n        <Typography>{`${progress.toFixed(1)}%`}</Typography>\r\n      </Grid>}\r\n      <Grid item flexGrow={1} >\r\n        <BorderLinearProgress variant={hasTotal ? \"determinate\" : \"indeterminate\"} value={progress} color=\"primary\" />\r\n      </Grid>\r\n    </Grid>}\r\n  </Alert>\r\n}\r\n","import { BusinessCenter } from \"@mui/icons-material\";\r\nimport { alpha, Box, CardActionArea, Chip, Typography, useTheme } from \"@mui/material\";\r\nimport { useCallback, useContext } from \"react\";\r\nimport Assets from \"../../Assets/Assets\";\r\nimport Artifact from \"../../Data/Artifacts/Artifact\";\r\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport KeyMap, { cacheValueString } from \"../../KeyMap\";\r\nimport useArtifact from \"../../ReactHooks/useArtifact\";\r\nimport useGender from \"../../ReactHooks/useGender\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport { ICachedSubstat } from \"../../Types/artifact\";\r\nimport { allElementsWithPhy, CharacterKey, SlotKey } from \"../../Types/consts\";\r\nimport { clamp } from \"../../Util/Util\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport CardDark from \"../Card/CardDark\";\r\nimport ColorText from \"../ColoredText\";\r\nimport ConditionalWrapper from \"../ConditionalWrapper\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport { StatColoredWithUnit } from \"../StatDisplay\";\r\nimport StatIcon from \"../StatIcon\";\r\nimport ArtifactTooltip from \"./ArtifactTooltip\";\r\n\r\ntype Data = {\r\n  artifactId?: string,\r\n  slotKey: SlotKey,\r\n  mainStatAssumptionLevel?: number,\r\n  onClick?: () => void,\r\n  showLocation?: boolean,\r\n  BGComponent?: React.ElementType\r\n}\r\n\r\nexport default function ArtifactCardNano({ artifactId, slotKey: pSlotKey, mainStatAssumptionLevel = 0, showLocation = false, onClick, BGComponent = CardDark }: Data) {\r\n  const art = useArtifact(artifactId)\r\n  const { database } = useContext(DatabaseContext)\r\n  const sheet = usePromise(() => ArtifactSheet.get(art?.setKey), [art?.setKey])\r\n  const actionWrapperFunc = useCallback(children => <CardActionArea onClick={onClick} sx={{ height: \"100%\" }}>{children}</CardActionArea>, [onClick],)\r\n  const theme = useTheme()\r\n  if (!art) return <BGComponent sx={{ display: \"flex\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n    <Box component=\"img\" src={Assets.slot[pSlotKey]} sx={{ width: \"25%\", height: \"auto\", opacity: 0.7 }} />\r\n  </BGComponent>\r\n\r\n  const { slotKey, rarity, level, mainStatKey, substats, location } = art\r\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\r\n  const mainStatUnit = KeyMap.unit(mainStatKey)\r\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\r\n  const color = element ? alpha(theme.palette[element].main, 0.6) : alpha(theme.palette.secondary.main, 0.6)\r\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\r\n    <Box display=\"flex\" height=\"100%\">\r\n      <Box className={`grad-${rarity}star`} sx={{ position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }} >\r\n        <ArtifactTooltip art={art}>\r\n          <Box\r\n            component=\"img\"\r\n            src={sheet?.slotIcons[slotKey] ?? \"\"}\r\n            sx={{ m: -1, maxHeight: \"110%\", maxWidth: \"110%\" }}\r\n          />\r\n        </ArtifactTooltip>\r\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\r\n          <Chip size=\"small\" label={<strong>{` +${level}`}</strong>} color={Artifact.levelVariant(level)} />\r\n          {showLocation && <Chip size=\"small\" label={<LocationIcon charKey={location && database.chars.LocationToCharacterKey(location)} />} color={\"secondary\"} sx={{\r\n            overflow: \"visible\", \".MuiChip-label\": {\r\n              overflow: \"visible\"\r\n            }\r\n          }} />}\r\n        </Box>\r\n        {/* mainstats */}\r\n        <Chip size=\"small\" sx={{ position: \"absolute\", bottom: 0, mb: 1, backgroundColor: color }}\r\n          label={<Typography sx={{ display: \"flex\", gap: 0.5, px: 1, zIndex: 1 }}>\r\n            <BootstrapTooltip placement=\"top\" title={<Typography><StatColoredWithUnit statKey={mainStatKey} /></Typography>} disableInteractive>\r\n              <span>{StatIcon[mainStatKey]}</span>\r\n            </BootstrapTooltip>\r\n            <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</ColorText>\r\n          </Typography>} />\r\n      </Box>\r\n      {/* substats */}\r\n      <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\" sx={{ p: 1, }}>\r\n        {substats.map((stat: ICachedSubstat, i: number) => <SubstatDisplay key={i + stat.key} stat={stat} />)}\r\n      </Box>\r\n    </Box>\r\n  </ConditionalWrapper></BGComponent >\r\n}\r\nfunction SubstatDisplay({ stat }: { stat: ICachedSubstat }) {\r\n  if (!stat.value) return null\r\n  const numRolls = stat.rolls?.length ?? 0\r\n  const rollColor = `roll${clamp(numRolls, 1, 6)}`\r\n  const unit = KeyMap.unit(stat.key)\r\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\r\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 0.5 }} color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">\r\n      <BootstrapTooltip placement=\"top\" title={<Typography>{stat.key && <StatColoredWithUnit statKey={stat.key} />}</Typography>} disableInteractive>\r\n        <span>{StatIcon[stat.key]}</span>\r\n      </BootstrapTooltip>\r\n      <span>{`${cacheValueString(stat.value, KeyMap.unit(stat.key))}${unit}`}</span>\r\n    </Typography>\r\n  </Box>)\r\n}\r\nfunction LocationIcon({ charKey }: { charKey: CharacterKey | \"\" }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const gender = useGender(database)\r\n  const characterSheet = usePromise(() => CharacterSheet.get(charKey, gender), [charKey, gender])\r\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\r\n}\r\n","import { Masonry } from \"@mui/lab\"\r\nimport { Divider, ListItem } from \"@mui/material\"\r\nimport { Box } from \"@mui/system\"\r\nimport { useContext, useMemo } from \"react\"\r\nimport { DataContext } from \"../../Context/DataContext\"\r\nimport { OptimizationTargetContext } from \"../../Context/OptimizationTargetContext\"\r\nimport { DatabaseContext } from \"../../Database/Database\"\r\nimport { getDisplayHeader, getDisplaySections } from \"../../Formula/DisplayUtil\"\r\nimport { DisplaySub } from \"../../Formula/type\"\r\nimport { NodeDisplay } from \"../../Formula/uiData\"\r\nimport { customRead } from \"../../Formula/utils\"\r\nimport usePromise from \"../../ReactHooks/usePromise\"\r\nimport { objectMap } from \"../../Util/Util\"\r\nimport CardDark from \"../Card/CardDark\"\r\nimport CardHeaderCustom from \"../Card/CardHeaderCustom\"\r\nimport { FieldDisplayList, NodeFieldDisplay } from \"../FieldDisplay\"\r\nimport ImgIcon from \"../Image/ImgIcon\"\r\nimport SqBadge from \"../SqBadge\"\r\n\r\nexport default function StatDisplayComponent() {\r\n  const { data } = useContext(DataContext)\r\n  const sections = useMemo(() =>\r\n    getDisplaySections(data).filter(([, ns]) => Object.values(ns).some(n => !n.isEmpty)),\r\n    [data])\r\n  return <Box sx={{ mr: -1, mb: -1 }}>\r\n    <Masonry columns={{ xs: 1, sm: 2, md: 3, xl: 4 }} spacing={1}>\r\n      {sections.map(([key, Nodes]) =>\r\n        <Section key={key} displayNs={Nodes} sectionKey={key} />)}\r\n    </Masonry >\r\n  </Box>\r\n}\r\n\r\nfunction Section({ displayNs, sectionKey }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\r\n  const optimizationTarget = useContext(OptimizationTargetContext)\r\n  const { data, oldData } = useContext(DataContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const header = usePromise(() => getDisplayHeader(data, sectionKey, database), [data, sectionKey])\r\n  const displayNsReads = useMemo(() => objectMap(displayNs, (n, nodeKey) => customRead([\"display\", sectionKey, nodeKey])), [displayNs, sectionKey]);\r\n  if (!header) return <CardDark></CardDark>\r\n\r\n  const { title, icon, action } = header\r\n  return <CardDark >\r\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\r\n    <Divider />\r\n    <FieldDisplayList sx={{ m: 0 }}>\r\n      {Object.entries(displayNs).map(([nodeKey, n]) =>\r\n        <NodeFieldDisplay key={nodeKey} node={n} oldValue={oldData ? oldData.get(displayNsReads[nodeKey]!).value : undefined} component={ListItem}\r\n          emphasize={JSON.stringify(optimizationTarget) === JSON.stringify([sectionKey, nodeKey])}\r\n        />)}\r\n    </FieldDisplayList>\r\n  </CardDark>\r\n}\r\n","import { BusinessCenter } from \"@mui/icons-material\";\r\nimport { Box, CardActionArea, Chip, Skeleton, Typography } from \"@mui/material\";\r\nimport { useCallback, useContext, useMemo } from \"react\";\r\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\r\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\r\nimport { DatabaseContext } from \"../../Database/Database\";\r\nimport { input } from \"../../Formula\";\r\nimport { computeUIData, dataObjForWeapon } from \"../../Formula/api\";\r\nimport { NodeDisplay } from '../../Formula/uiData';\r\nimport KeyMap, { valueString } from \"../../KeyMap\";\r\nimport useGender from \"../../ReactHooks/useGender\";\r\nimport usePromise from \"../../ReactHooks/usePromise\";\r\nimport useWeapon from \"../../ReactHooks/useWeapon\";\r\nimport { MainStatKey, SubstatKey } from \"../../Types/artifact\";\r\nimport { LocationKey } from \"../../Types/consts\";\r\nimport BootstrapTooltip from \"../BootstrapTooltip\";\r\nimport CardDark from \"../Card/CardDark\";\r\nimport ConditionalWrapper from \"../ConditionalWrapper\";\r\nimport ImgIcon from \"../Image/ImgIcon\";\r\nimport StatIcon from \"../StatIcon\";\r\nimport WeaponNameTooltip from \"./WeaponNameTooltip\";\r\n\r\ntype Data = {\r\n  weaponId?: string,\r\n  onClick?: () => void,\r\n  showLocation?: boolean,\r\n  BGComponent?: React.ElementType,\r\n}\r\n\r\nexport default function WeaponCardNano({ weaponId, showLocation = false, onClick, BGComponent = CardDark, }: Data) {\r\n  const weapon = useWeapon(weaponId)\r\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\r\n  const actionWrapperFunc = useCallback(children => <CardActionArea sx={{ height: \"100%\" }} onClick={onClick}>{children}</CardActionArea>, [onClick],)\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  if (!weapon || !weaponSheet || !UIData) return <BGComponent sx={{ height: \"100%\" }}><Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\" }} /></BGComponent>;\r\n  const { refinement, location } = weapon\r\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\r\n    <Box display=\"flex\" height=\"100%\" alignItems=\"stretch\" >\r\n      <Box className={`grad-${weaponSheet.rarity}star`} sx={{ height: \"100%\", position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"flex-end\" }} >\r\n        <WeaponNameTooltip sheet={weaponSheet}>\r\n          <Box\r\n            component=\"img\"\r\n            src={weaponSheet.getImg(weapon.ascension)}\r\n            sx={{ mx: -1, maxHeight: \"100%\", maxWidth: \"100%\" }}\r\n          />\r\n        </WeaponNameTooltip>\r\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\r\n          <Chip size=\"small\" label={<strong>{WeaponSheet.getLevelString(weapon)}</strong>} color=\"primary\" />\r\n          {showLocation && <Chip size=\"small\" label={<LocationIcon location={location} />} color={\"secondary\"} sx={{\r\n            overflow: \"visible\", \".MuiChip-label\": {\r\n              overflow: \"visible\"\r\n            }\r\n          }} />}\r\n        </Box>\r\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"flex-end\", alignItems: \"flex-end\" }} >\r\n          {weaponSheet.hasRefinement && <Chip size=\"small\" color=\"info\" label={<strong>R{refinement}</strong>} />}\r\n        </Box>\r\n      </Box>\r\n      <Box display=\"flex\" flexDirection=\"column\" sx={{ p: 1, }}>\r\n        <WeaponStat node={UIData.get(input.weapon.main)} />\r\n        <WeaponStat node={UIData.get(input.weapon.sub)} />\r\n      </Box>\r\n    </Box>\r\n  </ConditionalWrapper></BGComponent >\r\n}\r\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\r\n  if (!node.info.key) return null\r\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\r\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\r\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 1 }} component=\"span\">\r\n      <BootstrapTooltip placement=\"top\" title={<Typography>{node.info.key && KeyMap.getArtStr(node.info.key as MainStatKey | SubstatKey)}</Typography>} disableInteractive>\r\n        <span>{StatIcon[node.info.key]}</span>\r\n      </BootstrapTooltip>\r\n      <span>{val}</span>\r\n    </Typography>\r\n  </Box>)\r\n}\r\nfunction LocationIcon({ location }: { location: LocationKey }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const gender = useGender(database)\r\n  const characterSheet = usePromise(() => CharacterSheet.get(location ? database.chars.LocationToCharacterKey(location) : \"\", gender), [location, gender])\r\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\r\n}\r\n","import { ChevronRight } from '@mui/icons-material';\r\nimport { Button, CardContent, Grid, Skeleton, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport { ArtifactSlotKey } from 'pipeline';\r\nimport { Suspense, useCallback, useContext, useMemo, useState } from 'react';\r\nimport ArtifactCardNano from '../../../../../Components/Artifact/ArtifactCardNano';\r\nimport ArtifactSetTooltip from '../../../../../Components/Artifact/ArtifactSetTooltip';\r\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\r\nimport CardDark from '../../../../../Components/Card/CardDark';\r\nimport CardLight from '../../../../../Components/Card/CardLight';\r\nimport StatDisplayComponent from '../../../../../Components/Character/StatDisplayComponent';\r\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\r\nimport SqBadge from '../../../../../Components/SqBadge';\r\nimport WeaponCardNano from '../../../../../Components/Weapon/WeaponCardNano';\r\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\r\nimport { DataContext } from '../../../../../Context/DataContext';\r\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\r\nimport { DatabaseContext } from '../../../../../Database/Database';\r\nimport { uiInput as input } from '../../../../../Formula';\r\nimport ArtifactCard from '../../../../../PageArtifact/ArtifactCard';\r\nimport usePromise from '../../../../../ReactHooks/usePromise';\r\nimport { allSlotKeys, ArtifactSetKey, charKeyToLocCharKey, SlotKey } from '../../../../../Types/consts';\r\nimport useBuildSetting from '../useBuildSetting';\r\n\r\ntype NewOld = {\r\n  newId: string,\r\n  oldId?: string\r\n}\r\n\r\ntype BuildDisplayItemProps = {\r\n  index?: number,\r\n  compareBuild: boolean,\r\n  disabled?: boolean,\r\n  extraButtons?: JSX.Element\r\n}\r\n//for displaying each artifact build\r\nexport default function BuildDisplayItem({ index, compareBuild, extraButtons, disabled }: BuildDisplayItemProps) {\r\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\r\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\r\n  const { database } = useContext(DatabaseContext)\r\n  const dataContext = useContext(DataContext)\r\n\r\n  const { data, oldData } = dataContext\r\n  const [newOld, setNewOld] = useState(undefined as NewOld | undefined)\r\n  const close = useCallback(() => setNewOld(undefined), [setNewOld],)\r\n\r\n  const equipBuild = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this build to this character?\")) return\r\n    allSlotKeys.forEach(s => {\r\n      const aid = data.get(input.art[s].id).value\r\n      if (aid) database.arts.set(aid, { location: charKeyToLocCharKey(characterKey) })\r\n    })\r\n    database.weapons.set(data.get(input.weapon.id).value!, { location: charKeyToLocCharKey(characterKey) })\r\n  }, [characterKey, data, database])\r\n\r\n  const statProviderContext = useMemo(() => {\r\n    const dataContext_ = { ...dataContext }\r\n    if (!compareBuild) dataContext_.oldData = undefined\r\n    return dataContext_\r\n  }, [dataContext, compareBuild])\r\n\r\n  // Memoize Arts because of its dynamic onClick\r\n  const artNanos = useMemo(() => allSlotKeys.map(slotKey =>\r\n    <Grid item xs={1} key={slotKey} >\r\n      <ArtifactCardNano showLocation slotKey={slotKey} artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} onClick={() => {\r\n        const oldId = equippedArtifacts[slotKey]\r\n        const newId = data.get(input.art[slotKey].id).value!\r\n        setNewOld({ oldId: oldId !== newId ? oldId : undefined, newId })\r\n      }} />\r\n    </Grid>), [data, setNewOld, equippedArtifacts, mainStatAssumptionLevel])\r\n\r\n  if (!oldData) return null\r\n  const currentlyEquipped = allSlotKeys.every(slotKey => data.get(input.art[slotKey].id).value === oldData.get(input.art[slotKey].id).value) && data.get(input.weapon.id).value === oldData.get(input.weapon.id).value\r\n\r\n  return <CardLight>\r\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\r\n      {newOld && <CompareArtifactModal newOld={newOld} mainStatAssumptionLevel={mainStatAssumptionLevel} onClose={close} />}\r\n      <CardContent>\r\n        <Box display=\"flex\" gap={1} sx={{ pb: 1 }} flexWrap=\"wrap\">\r\n          {index !== undefined && <SqBadge color=\"info\"><Typography><strong>#{index + 1}{currentlyEquipped ? \" (Equipped)\" : \"\"}</strong></Typography></SqBadge>}\r\n          <SetBadges currentlyEquipped={currentlyEquipped} />\r\n          <Box sx={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          </Box>\r\n          <Button size='small' color=\"success\" onClick={equipBuild} disabled={disabled || currentlyEquipped}>Equip Build</Button>\r\n          {extraButtons}\r\n        </Box>\r\n        <Grid container spacing={1} sx={{ pb: 1 }} columns={{ xs: 2, sm: 3, md: 4, lg: 6 }}>\r\n          <Grid item xs={1}>\r\n            <WeaponCardNano showLocation weaponId={data.get(input.weapon.id).value} />\r\n          </Grid>\r\n          {artNanos}\r\n        </Grid>\r\n        <DataContext.Provider value={statProviderContext}>\r\n          <StatDisplayComponent />\r\n        </DataContext.Provider>\r\n      </CardContent>\r\n    </Suspense>\r\n  </CardLight>\r\n}\r\nfunction SetBadges({ currentlyEquipped = false }: { currentlyEquipped: boolean }) {\r\n  const { data } = useContext(DataContext)\r\n  const setToSlots: Partial<Record<ArtifactSetKey, SlotKey[]>> = {}\r\n  allSlotKeys.forEach(slotKey => {\r\n    const set = data.get(input.art[slotKey].set).value as ArtifactSetKey | undefined\r\n    if (!set) return\r\n    if (setToSlots[set]) setToSlots[set]!.push(slotKey)\r\n    else setToSlots[set] = [slotKey]\r\n  })\r\n  return <>{Object.entries(setToSlots).sort(([k1, slotarr1], [k2, slotarr2]) => slotarr2.length - slotarr1.length).map(([key, slotarr]) =>\r\n    <SetBadge key={key} setKey={key} currentlyEquipped={currentlyEquipped} slotarr={slotarr} />\r\n  )}</>\r\n\r\n}\r\nfunction SetBadge({ setKey, currentlyEquipped = false, slotarr }: { setKey: ArtifactSetKey, currentlyEquipped: boolean, slotarr: ArtifactSlotKey[] }) {\r\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\r\n  if (!artifactSheet) return null\r\n  const numInSet = slotarr.length\r\n  const setActive = Object.keys(artifactSheet.setEffects).map((setKey) => parseInt(setKey)).filter(setNum => setNum <= numInSet)\r\n  return <Box>\r\n    <ArtifactSetTooltip artifactSheet={artifactSheet} numInSet={numInSet} >\r\n      <SqBadge color={currentlyEquipped ? \"success\" : \"primary\"} ><Typography >\r\n        {slotarr.map(slotKey => artifactSlotIcon(slotKey))} {artifactSheet.name ?? \"\"}\r\n        {setActive.map(n => <SqBadge sx={{ ml: 0.5 }} key={n} color=\"success\">{n}</SqBadge>)}\r\n      </Typography></SqBadge>\r\n    </ArtifactSetTooltip>\r\n  </Box>\r\n}\r\n\r\nfunction CompareArtifactModal({ newOld: { newId, oldId }, mainStatAssumptionLevel, onClose }: { newOld: NewOld, mainStatAssumptionLevel: number, onClose: () => void }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const onEquip = useCallback(() => {\r\n    if (!window.confirm(\"Do you want to equip this artifact to this character?\")) return\r\n    database.arts.set(newId, { location: charKeyToLocCharKey(characterKey) })\r\n    onClose()\r\n  }, [newId, database, characterKey, onClose])\r\n\r\n  return <ModalWrapper open={!!newId} onClose={onClose} containerProps={{ maxWidth: oldId ? \"md\" : \"xs\" }}>\r\n    <CardDark>\r\n      <CardContent sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"stretch\", gap: 2, height: \"100%\" }}>\r\n        {oldId && <Box minWidth={320}><ArtifactCard artifactId={oldId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip /></Box>}\r\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\r\n        {oldId && <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\"><Button onClick={onEquip} sx={{ display: \"flex\" }}><ChevronRight sx={{ fontSize: 40 }} /></Button></Box>}\r\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\r\n        <Box minWidth={320}><ArtifactCard artifactId={newId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip /></Box>\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank, Download, Info } from '@mui/icons-material';\r\nimport { Button, CardContent, Collapse, Divider, Grid, MenuItem, styled, Tooltip, Typography } from '@mui/material';\r\nimport { useContext, useMemo, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { CartesianGrid, ComposedChart, Legend, Line, ResponsiveContainer, Scatter, XAxis, YAxis, ZAxis } from 'recharts';\r\nimport CardDark from '../../../../../Components/Card/CardDark';\r\nimport CardLight from '../../../../../Components/Card/CardLight';\r\nimport DropdownButton from '../../../../../Components/DropdownMenu/DropdownButton';\r\nimport { DataContext } from '../../../../../Context/DataContext';\r\nimport { uiInput as input } from '../../../../../Formula';\r\nimport { NumNode } from '../../../../../Formula/type';\r\nimport KeyMap from '../../../../../KeyMap';\r\nimport { MainStatKey, SubstatKey } from '../../../../../Types/artifact';\r\nimport { Build } from '../common';\r\n\r\nexport type ChartData = {\r\n  valueNode: NumNode,\r\n  plotNode: NumNode,\r\n  data: Build[]\r\n}\r\ntype ChartCardProps = {\r\n  chartData?: ChartData\r\n  plotBase: MainStatKey | SubstatKey | \"\",\r\n  setPlotBase: (key: MainStatKey | SubstatKey | \"\") => void\r\n  disabled?: boolean\r\n}\r\ntype Point = { x: number, y: number, min?: number }\r\nexport default function ChartCard({ chartData, plotBase, setPlotBase, disabled = false }: ChartCardProps) {\r\n  const { t } = useTranslation([\"page_character_optimize\", \"ui\"])\r\n  const [showDownload, setshowDownload] = useState(false)\r\n  const [showMin, setshowMin] = useState(true)\r\n  const { data } = useContext(DataContext)\r\n  const statKeys = [\"atk\", \"hp\", \"def\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\"]\r\n  if (data.get(input.weaponType).value !== \"catalyst\") statKeys.push(\"physical_dmg_\")\r\n  statKeys.push(`${data.get(input.charEle).value}_dmg_`)\r\n\r\n  const { displayData, downloadData } = useMemo(() => {\r\n    if (!chartData) return { displayData: null, downloadData: null }\r\n    const points = chartData.data.map(({ value: y, plot: x }) => ({ x, y })) as Point[]\r\n    const increasingX: Point[] = points.sort((a, b) => a.x - b.x)\r\n    const minimumData: Point[] = []\r\n    for (const point of increasingX) {\r\n      let last: Point | undefined\r\n      while ((last = minimumData.pop())) {\r\n        if (last.y > point.y) {\r\n          minimumData.push(last)\r\n          break\r\n        }\r\n      }\r\n      minimumData.push(point)\r\n    }\r\n\r\n    // Note:\r\n    // We can also just use `minimumData` if the plotter supports multiple data sources.\r\n    // It could be faster too since there're no empty entries in `minimumData`.\r\n    if (minimumData[0]?.x !== increasingX[0]?.x)\r\n      increasingX[0].min = minimumData[0].y\r\n    minimumData.forEach(x => { x.min = x.y })\r\n\r\n    const downloadData = {\r\n      minimum: minimumData.map(({ x, y }) => [x, y]),\r\n      allData: increasingX.map(({ x, y }) => [x, y]),\r\n    }\r\n    return { displayData: increasingX, downloadData }\r\n  }, [chartData])\r\n\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container spacing={1} alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography >{t`tcGraph.vs`}</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <DropdownButton size='small' title={plotBase ? KeyMap.get(plotBase) : t`tcGraph.notSel`}\r\n            color={plotBase ? \"success\" : \"primary\"}\r\n            disabled={disabled}\r\n          >\r\n            <MenuItem onClick={() => { setPlotBase(\"\") }}>{t`ui:unselect`}</MenuItem>\r\n            <Divider />\r\n            {statKeys.map(sKey => <MenuItem key={sKey} onClick={() => { setPlotBase(sKey as any) }}>{KeyMap.get(sKey)}</MenuItem>)}\r\n          </DropdownButton>\r\n        </Grid>\r\n        <Grid item flexGrow={1}>\r\n          <Tooltip placement=\"top\" title=\"Using data from the builder, this will generate a graph to visualize Optimization Target vs. a selected stat. The graph will show the maximum Optimization Target value per 0.01 of the selected stat.\">\r\n            <Info />\r\n          </Tooltip>\r\n        </Grid>\r\n        {!!downloadData && <Grid item>\r\n          <Button size='small' startIcon={showMin ? <CheckBox /> : <CheckBoxOutlineBlank />}\r\n            color={showMin ? \"success\" : \"secondary\"}\r\n            onClick={() => setshowMin(!showMin)}>{t`tcGraph.showMinStatThr`}</Button>\r\n        </Grid>}\r\n        {!!downloadData && <Grid item>\r\n          <Button size='small' color=\"info\" startIcon={<Download />} onClick={() => setshowDownload(!showDownload)}>{t`tcGraph.downloadData`}</Button>\r\n        </Grid>}\r\n      </Grid>\r\n    </CardContent>\r\n    {!!displayData && <Divider />}\r\n    {chartData && !!displayData && <CardContent>\r\n      <Collapse in={!!downloadData && showDownload}>\r\n        <CardDark sx={{ mb: 2 }}>\r\n          <CardContent>\r\n            <Typography>Min Data</Typography>\r\n            <DataDisplay data={downloadData?.minimum} />\r\n            <Typography>All Data</Typography>\r\n            <DataDisplay data={downloadData?.allData} />\r\n          </CardContent>\r\n        </CardDark>\r\n      </Collapse>\r\n      <Chart displayData={displayData} plotNode={chartData.plotNode} valueNode={chartData.valueNode} showMin={showMin} />\r\n    </CardContent>}\r\n  </CardLight >\r\n}\r\nconst TextArea = styled(\"textarea\")({\r\n  width: \"100%\",\r\n  fontFamily: \"monospace\",\r\n  resize: \"vertical\",\r\n  minHeight: \"5em\"\r\n})\r\nfunction DataDisplay({ data, }: { data?: object }) {\r\n  return <TextArea readOnly value={JSON.stringify(data)} onClick={e => {\r\n    const target = e.target as HTMLTextAreaElement;\r\n    target.selectionStart = 0;\r\n    target.selectionEnd = target.value.length;\r\n  }} />\r\n}\r\nfunction Chart({ displayData, plotNode, valueNode, showMin }: {\r\n  displayData: Point[],\r\n  plotNode: NumNode,\r\n  valueNode: NumNode,\r\n  showMin: boolean\r\n}) {\r\n  const { t } = useTranslation(\"page_character_optimize\")\r\n  const plotBaseUnit = KeyMap.unit(plotNode.info?.key)\r\n  const valueUnit = KeyMap.unit(valueNode.info?.key)\r\n  return <ResponsiveContainer width=\"100%\" height={600}>\r\n    <ComposedChart data={displayData}>\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey=\"x\" scale=\"linear\" unit={plotBaseUnit} domain={[\"auto\", \"auto\"]} tick={{ fill: 'white' }} type=\"number\" tickFormatter={n => n > 10000 ? n.toFixed() : n.toFixed(1)} />\r\n      <YAxis name=\"DMG\" domain={[\"auto\", \"auto\"]} unit={valueUnit} allowDecimals={false} tick={{ fill: 'white' }} type=\"number\" />\r\n      <ZAxis dataKey=\"y\" range={[3, 25]} />\r\n      <Legend />\r\n      <Scatter name={t`tcGraph.optTarget`} dataKey=\"y\" fill=\"#8884d8\" line lineType=\"fitting\" isAnimationActive={false} />\r\n      {showMin && <Line name={t`tcGraph.minStatReqThr`} dataKey=\"min\" stroke=\"#ff7300\" type=\"stepBefore\" connectNulls strokeWidth={2} isAnimationActive={false} />}\r\n    </ComposedChart>\r\n  </ResponsiveContainer>\r\n}\r\n","import { Replay } from '@mui/icons-material';\r\nimport { Button, CardContent, Divider, Grid, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport { useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\r\nimport BootstrapTooltip from '../../../../../Components/BootstrapTooltip';\r\nimport SqBadge from '../../../../../Components/SqBadge';\r\nimport { StatColoredWithUnit } from '../../../../../Components/StatDisplay';\r\nimport StatIcon from '../../../../../Components/StatIcon';\r\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\r\nimport Artifact from '../../../../../Data/Artifacts/Artifact';\r\nimport { allElementsWithPhy } from '../../../../../Types/consts';\r\nimport useBuildSetting from '../useBuildSetting';\r\n\r\nexport const artifactsSlotsToSelectMainStats = [\"sands\", \"goblet\", \"circlet\"] as const\r\n\r\nexport default function MainStatSelectionCard({ disabled = false, }: {\r\n  disabled?: boolean\r\n}) {\r\n  const { t } = useTranslation(\"artifact\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { buildSetting: { mainStatKeys }, buildSettingDispatch } = useBuildSetting(characterKey)\r\n\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n    {artifactsSlotsToSelectMainStats.map(slotKey => {\r\n      const numSel = mainStatKeys[slotKey].length\r\n      return <Box key={slotKey}>\r\n        <Divider />\r\n        <CardContent sx={{ pt: 1 }}>\r\n          <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\", pb: 1 }}>\r\n            <BootstrapTooltip placement=\"top\" title={<Typography>{t(`slotName.${slotKey}`)}</Typography>}>\r\n              <span>{artifactSlotIcon(slotKey)}</span>\r\n            </BootstrapTooltip>\r\n            <Box flexGrow={1}>\r\n              <SqBadge color=\"info\">{numSel ? `${numSel} Selected` : `Any`}</SqBadge>\r\n            </Box>\r\n            <Button color=\"error\" size=\"small\" disabled={!mainStatKeys[slotKey].length || disabled} sx={{ mt: -1, mb: -1 }}\r\n              onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey })}>\r\n              <Replay />\r\n            </Button>\r\n          </Box>\r\n          <Grid container spacing={1}>\r\n            {Artifact.slotMainStats(slotKey).map((mainStatKey, i) => {\r\n              const element = allElementsWithPhy.find(ele => mainStatKey.includes(ele))\r\n              const color = mainStatKeys[slotKey].includes(mainStatKey)\r\n                ? element ?? \"success\"\r\n                : \"secondary\"\r\n              return <Grid item key={mainStatKey} flexGrow={1} xs={(i < 3 && slotKey !== \"goblet\") ? 4 : undefined} >\r\n                <BootstrapTooltip placement=\"top\" title={<Typography><strong><StatColoredWithUnit statKey={mainStatKey} /></strong></Typography>} disableInteractive>\r\n                  <Button fullWidth size=\"small\" color={color} sx={{ fontSize: \"1.2em\", height: \"100%\", pointerEvents: disabled ? \"none\" : undefined, cursor: disabled ? \"none\" : undefined }}\r\n                    onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey, mainStatKey })}>\r\n                    {StatIcon[mainStatKey]}\r\n                  </Button>\r\n                </BootstrapTooltip>\r\n              </Grid>\r\n            })}\r\n          </Grid>\r\n        </CardContent>\r\n      </Box>\r\n    })}\r\n  </Box >\r\n}\r\n","import { Box, CardContent, Typography } from \"@mui/material\"\r\nimport { useCallback, useContext, useMemo } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport CardLight from \"../../../../../Components/Card/CardLight\"\r\nimport InfoTooltip from \"../../../../../Components/InfoTooltip\"\r\nimport StatEditorList from \"../../../../../Components/StatEditorList\"\r\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\"\r\nimport { DataContext } from \"../../../../../Context/DataContext\"\r\nimport { input } from \"../../../../../Formula\"\r\nimport { StatKey } from \"../../../../../KeyMap\"\r\nimport { ElementKey, WeaponTypeKey } from \"../../../../../Types/consts\"\r\nimport useBuildSetting from \"../useBuildSetting\"\r\n\r\nexport default function StatFilterCard({ disabled = false }: { disabled?: boolean }) {\r\n  const { t } = useTranslation(\"page_character_optimize\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const { buildSetting: { statFilters }, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const setStatFilters = useCallback((statFilters: Dict<StatKey, number>) => buildSettingDispatch({ statFilters }), [buildSettingDispatch],)\r\n\r\n  const statKeys = useMemo(() => {\r\n    const statKeys: StatKey[] = [\"atk\", \"hp\", \"def\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\"]\r\n    if (data.get(input.weaponType).value as WeaponTypeKey !== \"catalyst\") statKeys.push(\"physical_dmg_\")\r\n    const charEle = data.get(input.charEle).value as ElementKey\r\n    statKeys.push(`${charEle}_dmg_`)\r\n    return statKeys\r\n  }, [data])\r\n\r\n\r\n  return <Box>\r\n    <CardLight>\r\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\r\n        <Typography>{t`constraintFilter.title`}</Typography>\r\n        <InfoTooltip title={<Typography>{t`constraintFilter.tooltip`}</Typography>} />\r\n      </CardContent>\r\n    </CardLight>\r\n    <Box display=\"flex\" flexDirection=\"column\" gap={0.5}>\r\n      <StatEditorList statKeys={statKeys} statFilters={statFilters} setStatFilters={setStatFilters} disabled={disabled} />\r\n    </Box>\r\n  </Box>\r\n}\r\n","import { Add, CheckBox, CheckBoxOutlineBlank, Close, KeyboardArrowDown, KeyboardArrowUp, KeyboardDoubleArrowDown, KeyboardDoubleArrowUp, Replay, Settings } from \"@mui/icons-material\";\r\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Typography } from \"@mui/material\";\r\nimport { useCallback, useContext, useMemo } from \"react\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport ArtifactCardPico from \"../../../../../Components/Artifact/ArtifactCardPico\";\r\nimport CardDark from \"../../../../../Components/Card/CardDark\";\r\nimport CardLight from \"../../../../../Components/Card/CardLight\";\r\nimport CharacterCardPico from \"../../../../../Components/Character/CharacterCardPico\";\r\nimport CloseButton from \"../../../../../Components/CloseButton\";\r\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../../../../../Components/CustomNumberInput\";\r\nimport ModalWrapper from \"../../../../../Components/ModalWrapper\";\r\nimport SqBadge from \"../../../../../Components/SqBadge\";\r\nimport WeaponCardPico from \"../../../../../Components/Weapon/WeaponCardPico\";\r\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\r\nimport { initialTabOptimizeDBState } from \"../../../../../Database/Data/StateData\";\r\nimport { DatabaseContext } from \"../../../../../Database/Database\";\r\nimport useBoolState from \"../../../../../ReactHooks/useBoolState\";\r\nimport useCharacter from \"../../../../../ReactHooks/useCharacter\";\r\nimport useCharSelectionCallback from \"../../../../../ReactHooks/useCharSelectionCallback\";\r\nimport useDBState from \"../../../../../ReactHooks/useDBState\";\r\nimport { ICachedCharacter } from \"../../../../../Types/character\";\r\nimport { CharacterKey } from \"../../../../../Types/consts\";\r\nimport { CharacterSelectionModal } from \"../../../../CharacterSelectionModal\";\r\nimport useBuildSetting from \"../useBuildSetting\";\r\n\r\nexport default function UseEquipped({ disabled = false }: { disabled?: boolean }) {\r\n  const { t } = useTranslation(\"page_character_optimize\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { buildSetting: { useEquippedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, onOpen, onClose] = useBoolState(false)\r\n  const [{ equipmentPriority: tempEquipmentPriority }, setOptimizeDBState] = useDBState(\"TabOptimize\", initialTabOptimizeDBState)\r\n  //Basic validate for the equipmentPrio list to remove dups and characters that doesnt exist.\r\n  const equipmentPriority = useMemo(() => [...new Set(tempEquipmentPriority)].filter(ck => database.chars.get(ck)), [database, tempEquipmentPriority])\r\n  const setPrio = useCallback((equipmentPriority: CharacterKey[]) => setOptimizeDBState({ equipmentPriority }), [setOptimizeDBState])\r\n\r\n  const setPrioRank = useCallback((fromIndex, toIndex) => {\r\n    const arr = [...equipmentPriority]\r\n    var element = arr[fromIndex];\r\n    arr.splice(fromIndex, 1);\r\n    arr.splice(toIndex, 0, element);\r\n    setPrio(arr)\r\n  }, [equipmentPriority, setPrio])\r\n  const removePrio = useCallback((fromIndex) => {\r\n    const arr = [...equipmentPriority]\r\n    arr.splice(fromIndex, 1)\r\n    setPrio(arr)\r\n  }, [equipmentPriority, setPrio])\r\n  const addPrio = useCallback((ck: CharacterKey) => setPrio([...equipmentPriority, ck]), [equipmentPriority, setPrio])\r\n  const resetPrio = useCallback(() => setPrio([]), [setPrio])\r\n\r\n  const numAbove = useMemo(() => {\r\n    let numAbove = equipmentPriority.length\r\n    const index = equipmentPriority.indexOf(characterKey)\r\n    if (index >= 0) numAbove = index\r\n    return numAbove\r\n  }, [characterKey, equipmentPriority])\r\n  const numUseEquippedChar = useMemo(() => {\r\n    return database.chars.keys.length - 1 - numAbove\r\n  }, [numAbove, database])\r\n  const numUnlisted = useMemo(() => {\r\n    return database.chars.keys.length - equipmentPriority.length\r\n  }, [equipmentPriority, database])\r\n\r\n  return <Box display=\"flex\" gap={1}>\r\n    <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"sm\" }}><CardDark>\r\n      <CardContent>\r\n        <Grid container spacing={1}>\r\n          <Grid item flexGrow={1}>\r\n            <Typography variant=\"h6\">{t`useEquipped.modal.title`}</Typography>\r\n          </Grid>\r\n          <Grid item sx={{ mb: -1 }}>\r\n            <CloseButton onClick={onClose} />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent>\r\n        <CardLight sx={{ mb: 1 }}>\r\n          <CardContent>\r\n            <Typography gutterBottom><Trans t={t} i18nKey=\"useEquipped.modal.desc1\">When generating a build, the Optimizer will only consider equipped artifacts from characters below the current character or those not on the list.</Trans></Typography>\r\n            <Typography gutterBottom><Trans t={t} i18nKey=\"useEquipped.modal.desc2\">If the current character is not on the list, the Optimizer will only consider equipped artifacts from others characters that are not on the list.</Trans></Typography>\r\n          </CardContent>\r\n        </CardLight>\r\n        <Box display=\"flex\" flexDirection=\"column\" gap={2}>\r\n          {equipmentPriority.map((ck, i) =>\r\n            <SelectItem key={ck} characterKey={ck} rank={i + 1} maxRank={equipmentPriority.length} setRank={(num) => num && setPrioRank(i, num - 1)} onRemove={() => removePrio(i)} numAbove={numAbove} />)}\r\n          <Box sx={{ display: \"flex\", gap: 1 }}>\r\n            <NewItem onAdd={addPrio} list={equipmentPriority} />\r\n            <Button color=\"error\" onClick={resetPrio} startIcon={<Replay />}><Trans t={t} i18nKey=\"useEquipped.modal.clearList\">Clear List</Trans></Button>\r\n          </Box>\r\n          {!!numUseEquippedChar && <SqBadge color=\"success\"><Typography><Trans t={t} i18nKey=\"useEquipped.modal.usingNum\" count={numUnlisted}>Using artifacts from <strong>{{ count: numUnlisted }}</strong> unlisted characters</Trans></Typography></SqBadge>}\r\n        </Box>\r\n      </CardContent>\r\n    </CardDark ></ModalWrapper>\r\n    <ButtonGroup sx={{ display: \"flex\", width: \"100%\" }}>\r\n      <Button sx={{ flexGrow: 1 }} onClick={() => buildSettingDispatch({ useEquippedArts: !useEquippedArts })} disabled={disabled} startIcon={useEquippedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useEquippedArts ? \"success\" : \"secondary\"}>\r\n        <Box>\r\n          <span><Trans t={t} i18nKey=\"useEquipped.title\">Use Equipped Artifacts</Trans></span>\r\n          {useEquippedArts && <SqBadge><Trans t={t} i18nKey=\"useEquipped.usingNum\" count={numUseEquippedChar}>Using from <strong>{{ count: numUseEquippedChar }}</strong> characters</Trans></SqBadge>}\r\n        </Box>\r\n      </Button>\r\n      {useEquippedArts && <Button sx={{ flexShrink: 1 }} color=\"info\" onClick={onOpen} disabled={disabled}><Settings /></Button>}\r\n    </ButtonGroup>\r\n  </Box>\r\n}\r\n\r\nconst itemSize = 60\r\nfunction SelectItem({ characterKey, rank, maxRank, setRank, onRemove, numAbove }: {\r\n  characterKey: CharacterKey,\r\n  rank: number,\r\n  maxRank: number,\r\n  setRank: (r: number | undefined) => void,\r\n  onRemove: () => void,\r\n  numAbove: number,\r\n}) {\r\n  const { t } = useTranslation(\"page_character_optimize\")\r\n  const { database } = useContext(DatabaseContext)\r\n  const character = useCharacter(characterKey)\r\n  const onClick = useCharSelectionCallback()\r\n  if (!character) return null\r\n  const { equippedWeapon, equippedArtifacts } = character\r\n  return <CardLight sx={{ p: 1 }}  >\r\n    <Box sx={{ pb: 1, display: \"flex\", justifyContent: \"space-between\", gap: 1 }}>\r\n      <SqBadge color=\"info\">\r\n        <Typography>#{rank}</Typography>\r\n      </SqBadge>\r\n      <SqBadge sx={{ flexGrow: 1 }} color={numAbove === (rank - 1) ? \"warning\" : (rank - 1) < numAbove ? \"error\" : \"success\"}>\r\n        <Typography>{numAbove === (rank - 1) ? <Trans t={t} i18nKey=\"useEquipped.modal.status.curr\">Current character</Trans>\r\n          : (rank - 1) < numAbove ? <Trans t={t} i18nKey=\"useEquipped.modal.status.dont\">Don't Use artifacts</Trans> :\r\n            <Trans t={t} i18nKey=\"useEquipped.modal.status.use\">Use artifacts</Trans>}</Typography>\r\n      </SqBadge>\r\n      <Box>\r\n        <ButtonGroup sx={{ flexGrow: 1 }} size=\"small\">\r\n          <CustomNumberInputButtonGroupWrapper >\r\n            <CustomNumberInput onChange={setRank} value={rank}\r\n              // startAdornment=\"Rank:\"\r\n              inputProps={{ min: 1, max: maxRank, sx: { textAlign: \"center\" } }}\r\n              sx={{ width: \"100%\", height: \"100%\", pl: 2 }} />\r\n          </CustomNumberInputButtonGroupWrapper>\r\n          <Button disabled={rank === 1} onClick={() => setRank(1)} >\r\n            <KeyboardDoubleArrowUp />\r\n          </Button>\r\n          <Button disabled={rank === 1} onClick={() => setRank(rank - 1)}  >\r\n            <KeyboardArrowUp />\r\n          </Button>\r\n          <Button disabled={rank === maxRank} onClick={() => setRank(rank + 1)}  >\r\n            <KeyboardArrowDown />\r\n          </Button>\r\n          <Button disabled={rank === maxRank} onClick={() => setRank(maxRank)}  >\r\n            <KeyboardDoubleArrowDown />\r\n          </Button>\r\n          <Button color=\"error\" onClick={onRemove}>\r\n            <Close />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Box>\r\n    </Box>\r\n    <Grid container columns={7} spacing={1}>\r\n      <Grid item xs={1} >\r\n        <CharacterCardPico characterKey={characterKey} onClick={onClick} />\r\n      </Grid>\r\n      <Grid item xs={1}><WeaponCardPico weaponId={equippedWeapon} /></Grid>\r\n      {Object.entries(equippedArtifacts).map(([slotKey, aId]) => <Grid item xs={1} key={slotKey} ><ArtifactCardPico slotKey={slotKey} artifactObj={database.arts.get(aId)} /></Grid>)}\r\n    </Grid>\r\n\r\n  </CardLight>\r\n}\r\nfunction NewItem({ onAdd, list }: { onAdd: (ck: CharacterKey) => void, list: CharacterKey[] }) {\r\n  const { t } = useTranslation(\"page_character_optimize\")\r\n  const [show, onOpen, onClose] = useBoolState(false)\r\n  const filter = useCallback((char?: ICachedCharacter) => {\r\n    if (!char) return false\r\n    return !list.includes(char.key)\r\n  }, [list])\r\n  return <>\r\n    <CharacterSelectionModal show={show} onHide={onClose} onSelect={onAdd} filter={filter} />\r\n    <Button fullWidth sx={{ height: itemSize }} color=\"info\" onClick={onOpen} startIcon={<Add />} >\r\n      <Trans t={t} i18nKey=\"useEquipped.modal.add\">Add character to list</Trans>\r\n    </Button>\r\n  </>\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank } from \"@mui/icons-material\";\r\nimport { Box, Button } from \"@mui/material\";\r\nimport { useContext, useMemo } from \"react\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\r\nimport SqBadge from \"../../../../../Components/SqBadge\";\r\nimport { DatabaseContext } from \"../../../../../Database/Database\";\r\nimport useBuildSetting from \"../useBuildSetting\";\r\n\r\nexport default function UseExcluded({ disabled = false, artsDirty }: { disabled?: boolean, artsDirty: object }) {\r\n  const { t } = useTranslation(\"page_character_optimize\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { buildSetting: { useExcludedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const { database } = useContext(DatabaseContext)\r\n  const numExcludedArt = useMemo(() => artsDirty && database.arts.values.reduce((a, art) => a + ((art.exclude && art.location !== characterKey) ? 1 : 0), 0), [database, artsDirty, characterKey])\r\n  return <Button fullWidth onClick={() => buildSettingDispatch({ useExcludedArts: !useExcludedArts })} disabled={!numExcludedArt || disabled} startIcon={useExcludedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useExcludedArts ? \"success\" : \"secondary\"}>\r\n    <Box>\r\n      <span><Trans t={t} i18nKey=\"useExcluded.title\" count={numExcludedArt}>Use Excluded Artifacts</Trans></span>\r\n      {useExcludedArts && <SqBadge><Trans t={t} i18nKey=\"useExcluded.usingNum\" count={numExcludedArt}>Using <strong>{{ count: numExcludedArt }}</strong> excluded artifacts</Trans></SqBadge>}\r\n    </Box>\r\n  </Button>\r\n}\r\n","import Artifact from \"../../../../Data/Artifacts/Artifact\";\r\nimport { input } from \"../../../../Formula\";\r\nimport { computeUIData } from \"../../../../Formula/api\";\r\nimport { formulaString } from \"../../../../Formula/debug\";\r\nimport { Data, NumNode } from \"../../../../Formula/type\";\r\nimport { constant, setReadNodeKeys } from \"../../../../Formula/utils\";\r\nimport { allMainStatKeys, allSubstatKeys, ICachedArtifact } from \"../../../../Types/artifact\";\r\nimport { deepClone, objectKeyMap, objectMap } from \"../../../../Util/Util\";\r\nimport type { ArtifactBuildData, ArtifactsBySlot, DynStat } from \"./common\";\r\n\r\nconst dynamic = setReadNodeKeys(deepClone({ dyn: { ...input.art, ...input.artSet } }))\r\nexport const dynamicData = {\r\n  art: objectKeyMap([...allMainStatKeys, ...allSubstatKeys], key => dynamic.dyn[key]),\r\n  artSet: objectMap(input.artSet, (_, key) => dynamic.dyn[key]),\r\n}\r\n\r\nexport function compactArtifacts(arts: ICachedArtifact[], mainStatAssumptionLevel: number, allowPartial: boolean): ArtifactsBySlot {\r\n  const result: ArtifactsBySlot = {\r\n    base: {},\r\n    values: { flower: [], plume: [], goblet: [], circlet: [], sands: [] }\r\n  }\r\n  const keys = new Set<string>()\r\n\r\n  for (const art of arts) {\r\n    const mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.rarity, Math.max(Math.min(mainStatAssumptionLevel, art.rarity * 4), art.level))\r\n\r\n    const data: ArtifactBuildData = {\r\n      id: art.id, set: art.setKey,\r\n      values: {\r\n        [art.setKey]: 1,\r\n        [art.mainStatKey]: art.mainStatKey.endsWith('_') ? mainStatVal / 100 : mainStatVal,\r\n        ...Object.fromEntries(art.substats.map(substat =>\r\n          [substat.key, substat.key.endsWith('_') ? substat.accurateValue / 100 : substat.accurateValue]))\r\n      },\r\n    }\r\n    delete data.values[\"\"]\r\n    result.values[art.slotKey].push(data)\r\n    Object.keys(data.values).forEach(x => keys.add(x))\r\n  }\r\n  result.base = objectKeyMap([...keys], _ => 0)\r\n  if (allowPartial)\r\n    for (const value of Object.values(result.values))\r\n      value.push({ id: \"\", values: {} })\r\n  return result\r\n}\r\n\r\nexport function debugCompute(nodes: NumNode[], base: DynStat, arts: ArtifactBuildData[]) {\r\n  const stats = { ...base }\r\n  for (const art of arts) {\r\n    for (const [key, value] of Object.entries(art.values)) {\r\n      stats[key] = (stats[key] ?? 0) + value\r\n    }\r\n  }\r\n  const data = { dyn: Object.fromEntries(Object.entries(stats).map(([key, value]) => [key, constant(value)])) } as Data\r\n  const uiData = computeUIData([data])\r\n  return {\r\n    base, arts, stats,\r\n    data, uiData,\r\n    nodes: nodes.map(formulaString),\r\n    results: nodes.map(node => uiData.get(node)),\r\n  }\r\n}\r\n","import { CheckBox, CheckBoxOutlineBlank, Close, TrendingUp } from '@mui/icons-material';\r\nimport { Alert, Box, Button, ButtonGroup, CardContent, Divider, Grid, Link, MenuItem, Skeleton, ToggleButton, Typography } from '@mui/material';\r\nimport React, { Suspense, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// eslint-disable-next-line\r\n\r\nimport ArtifactLevelSlider from '../../../../Components/Artifact/ArtifactLevelSlider';\r\nimport BootstrapTooltip from '../../../../Components/BootstrapTooltip';\r\nimport CardLight from '../../../../Components/Card/CardLight';\r\nimport CharacterCard from '../../../../Components/Character/CharacterCard';\r\nimport DropdownButton from '../../../../Components/DropdownMenu/DropdownButton';\r\nimport { HitModeToggle, ReactionToggle } from '../../../../Components/HitModeEditor';\r\nimport SolidToggleButtonGroup from '../../../../Components/SolidToggleButtonGroup';\r\nimport { CharacterContext } from '../../../../Context/CharacterContext';\r\nimport { DataContext, dataContextObj } from '../../../../Context/DataContext';\r\nimport { OptimizationTargetContext } from '../../../../Context/OptimizationTargetContext';\r\nimport { defThreads, initialTabOptimizeDBState } from '../../../../Database/Data/StateData';\r\nimport { DatabaseContext } from '../../../../Database/Database';\r\nimport { mergeData, uiDataForTeam } from '../../../../Formula/api';\r\nimport { uiInput as input } from '../../../../Formula/index';\r\nimport { optimize } from '../../../../Formula/optimization';\r\nimport { NumNode } from '../../../../Formula/type';\r\nimport { UIData } from '../../../../Formula/uiData';\r\nimport KeyMap from '../../../../KeyMap';\r\nimport useCharacterReducer from '../../../../ReactHooks/useCharacterReducer';\r\nimport useCharSelectionCallback from '../../../../ReactHooks/useCharSelectionCallback';\r\nimport useDBState from '../../../../ReactHooks/useDBState';\r\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate';\r\nimport useTeamData, { getTeamData } from '../../../../ReactHooks/useTeamData';\r\nimport { ICachedArtifact } from '../../../../Types/artifact';\r\nimport { CharacterKey, charKeyToLocCharKey, LocationCharacterKey } from '../../../../Types/consts';\r\nimport { objPathValue, range } from '../../../../Util/Util';\r\nimport { FinalizeResult, Setup, WorkerCommand, WorkerResult } from './BackgroundWorker';\r\nimport { maxBuildsToShowList } from './Build';\r\nimport { artSetPerm, Build, filterFeasiblePerm, mergeBuilds, mergePlot, pruneAll, RequestFilter } from './common';\r\nimport ArtifactSetConfig from './Components/ArtifactSetConfig';\r\nimport AssumeFullLevelToggle from './Components/AssumeFullLevelToggle';\r\nimport BonusStatsCard from './Components/BonusStatsCard';\r\nimport BuildAlert, { BuildStatus } from './Components/BuildAlert';\r\nimport BuildDisplayItem from './Components/BuildDisplayItem';\r\nimport ChartCard, { ChartData } from './Components/ChartCard';\r\nimport MainStatSelectionCard from './Components/MainStatSelectionCard';\r\nimport OptimizationTargetSelector from './Components/OptimizationTargetSelector';\r\nimport StatFilterCard from './Components/StatFilterCard';\r\nimport UseEquipped from './Components/UseEquipped';\r\nimport UseExcluded from './Components/UseExcluded';\r\nimport { compactArtifacts, dynamicData } from './foreground';\r\nimport useBuildSetting from './useBuildSetting';\r\n\r\nexport default function TabBuild() {\r\n  const { t } = useTranslation(\"page_character_optimize\")\r\n  const { character: { key: characterKey, compareData } } = useContext(CharacterContext)\r\n  const { database } = useContext(DatabaseContext)\r\n\r\n  const [buildStatus, setBuildStatus] = useState({ type: \"inactive\", tested: 0, failed: 0, skipped: 0, total: 0 } as BuildStatus)\r\n  const generatingBuilds = buildStatus.type !== \"inactive\"\r\n\r\n  const [chartData, setchartData] = useState(undefined as ChartData | undefined)\r\n\r\n  const [artsDirty, setArtsDirty] = useForceUpdate()\r\n\r\n  const [{ equipmentPriority, threads = defThreads }, setOptimizeDBState] = useDBState(\"TabOptimize\", initialTabOptimizeDBState)\r\n  const maxWorkers = threads > defThreads ? defThreads : threads\r\n  const setMaxWorkers = useCallback(threads => setOptimizeDBState({ threads }), [setOptimizeDBState],)\r\n\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const onClickTeammate = useCharSelectionCallback()\r\n\r\n  const noArtifact = useMemo(() => !database.arts.values.length, [database])\r\n\r\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\r\n  const { plotBase, optimizationTarget, mainStatAssumptionLevel, allowPartial, builds, buildDate, maxBuildsToShow, levelLow, levelHigh } = buildSetting\r\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel)\r\n  const { characterSheet, target: data } = teamData?.[characterKey as CharacterKey] ?? {}\r\n  const buildsArts = useMemo(() => builds.map(build => build.map(i => database.arts.get(i)!)), [builds, database])\r\n\r\n  //register changes in artifact database\r\n  useEffect(() =>\r\n    database.arts.followAny(setArtsDirty),\r\n    [setArtsDirty, database])\r\n\r\n  // Provides a function to cancel the work\r\n  const cancelToken = useRef(() => { })\r\n  //terminate worker when component unmounts\r\n  useEffect(() => () => cancelToken.current(), [])\r\n  const generateBuilds = useCallback(async () => {\r\n    const { artSetExclusion, plotBase, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useExcludedArts, useEquippedArts, allowPartial, maxBuildsToShow, levelLow, levelHigh } = buildSetting\r\n    if (!characterKey || !optimizationTarget) return\r\n\r\n    let cantTakeList: Set<LocationCharacterKey> = new Set()\r\n    if (useEquippedArts) {\r\n      const index = equipmentPriority.indexOf(characterKey)\r\n      if (index < 0) equipmentPriority.forEach(ek => cantTakeList.add(charKeyToLocCharKey(ek)))\r\n      else equipmentPriority.slice(0, index).forEach(ek => cantTakeList.add(charKeyToLocCharKey(ek)))\r\n    }\r\n    const filteredArts = database.arts.values.filter(art => {\r\n      if (art.level < levelLow) return false\r\n      if (art.level > levelHigh) return false\r\n      const mainStats = mainStatKeys[art.slotKey]\r\n      if (mainStats?.length && !mainStats.includes(art.mainStatKey)) return false\r\n\r\n      // If its equipped on the selected character, bypass the check\r\n      if (art.location === charKeyToLocCharKey(characterKey)) return true\r\n\r\n      if (art.exclude && !useExcludedArts) return false\r\n      if (art.location && !useEquippedArts) return false\r\n      if (art.location && useEquippedArts && cantTakeList.has(art.location)) return false\r\n      return true\r\n    })\r\n    const split = compactArtifacts(filteredArts, mainStatAssumptionLevel, allowPartial)\r\n\r\n    const teamData = await getTeamData(database, characterKey, mainStatAssumptionLevel, [])\r\n    if (!teamData) return\r\n    const workerData = uiDataForTeam(teamData.teamData, characterKey)[characterKey as CharacterKey]?.target.data![0]\r\n    if (!workerData) return\r\n    Object.assign(workerData, mergeData([workerData, dynamicData])) // Mark art fields as dynamic\r\n    let optimizationTargetNode = objPathValue(workerData.display ?? {}, optimizationTarget) as NumNode | undefined\r\n    if (!optimizationTargetNode) return\r\n    const targetNode = optimizationTargetNode\r\n    const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters).map(([key, value]) => {\r\n      if (key.endsWith(\"_\")) value = value / 100 // TODO: Conversion\r\n      return { value: input.total[key], minimum: value }\r\n    }).filter(x => x.value && x.minimum > -Infinity)\r\n\r\n    setchartData(undefined)\r\n\r\n    const cancelled = new Promise<void>(r => cancelToken.current = r)\r\n\r\n    let nodes = [...valueFilter.map(x => x.value), optimizationTargetNode], arts = split!\r\n    const setPerms = filterFeasiblePerm(artSetPerm(artSetExclusion, Object.values(split.values).flatMap(x => x.map(x => x.set!))), split)\r\n\r\n    const minimum = [...valueFilter.map(x => x.minimum), -Infinity]\r\n    const status: Omit<BuildStatus, \"type\"> = { tested: 0, failed: 0, skipped: 0, total: NaN, startTime: performance.now() }\r\n    if (plotBase) {\r\n      nodes.push(input.total[plotBase])\r\n      minimum.push(-Infinity)\r\n    }\r\n\r\n    const prepruneArts = arts\r\n    nodes = optimize(nodes, workerData, ({ path: [p] }) => p !== \"dyn\");\r\n    ({ nodes, arts } = pruneAll(nodes, minimum, arts, maxBuildsToShow, artSetExclusion, {\r\n      reaffine: true, pruneArtRange: true, pruneNodeRange: true, pruneOrder: true\r\n    }))\r\n    nodes = optimize(nodes, {}, _ => false)\r\n\r\n    const plotBaseNode = plotBase ? nodes.pop() : undefined\r\n    optimizationTargetNode = nodes.pop()!\r\n\r\n    const wrap = { buildValues: Array(maxBuildsToShow).fill(0).map(_ => ({ src: \"\", val: -Infinity })) }\r\n\r\n    const minFilterCount = 8_000_000, maxRequestFilterInFlight = maxWorkers * 4\r\n    const unprunedFilters = setPerms[Symbol.iterator](), requestFilters: RequestFilter[] = []\r\n    const idleWorkers: number[] = [], splittingWorkers = new Set<number>()\r\n    const workers: Worker[] = []\r\n\r\n    function getThreshold(): number {\r\n      return wrap.buildValues[maxBuildsToShow - 1].val\r\n    }\r\n    function fetchContinueWork(): WorkerCommand {\r\n      return { command: \"split\", filter: undefined, minCount: minFilterCount, threshold: getThreshold() }\r\n    }\r\n    function fetchPruningWork(): WorkerCommand | undefined {\r\n      const { done, value } = unprunedFilters.next()\r\n      return done ? undefined : {\r\n        command: \"split\", minCount: minFilterCount,\r\n        threshold: getThreshold(), filter: value,\r\n      }\r\n    }\r\n    function fetchRequestWork(): WorkerCommand | undefined {\r\n      const filter = requestFilters.pop()\r\n      return !filter ? undefined : {\r\n        command: \"iterate\",\r\n        threshold: getThreshold(), filter\r\n      }\r\n    }\r\n\r\n    const filters = nodes\r\n      .map((value, i) => ({ value, min: minimum[i] }))\r\n      .filter(x => x.min > -Infinity)\r\n\r\n    const finalizedList: Promise<FinalizeResult>[] = []\r\n    for (let i = 0; i < maxWorkers; i++) {\r\n      const worker = new Worker(new URL('./BackgroundWorker.ts', import.meta.url))\r\n\r\n      const setup: Setup = {\r\n        command: \"setup\",\r\n        id: i, arts,\r\n        optimizationTarget: optimizationTargetNode,\r\n        plotBase: plotBaseNode,\r\n        maxBuilds: maxBuildsToShow,\r\n        filters\r\n      }\r\n      worker.postMessage(setup, undefined)\r\n      if (i === 0) {\r\n        const countCommand: WorkerCommand = { command: \"count\", exclusion: artSetExclusion, arts: [arts, prepruneArts] }\r\n        worker.postMessage(countCommand, undefined)\r\n      }\r\n      let finalize: (_: FinalizeResult) => void\r\n      const finalized = new Promise<FinalizeResult>(r => finalize = r)\r\n      worker.onmessage = async ({ data }: { data: { id: number } & WorkerResult }) => {\r\n        switch (data.command) {\r\n          case \"interim\":\r\n            status.tested += data.tested\r\n            status.failed += data.failed\r\n            status.skipped += data.skipped\r\n            if (data.buildValues) {\r\n              wrap.buildValues = wrap.buildValues.filter(({ src }) => src !== data.source)\r\n              wrap.buildValues.push(...data.buildValues.map(val => ({ src: data.source, val })))\r\n              wrap.buildValues.sort((a, b) => b.val - a.val).splice(maxBuildsToShow)\r\n            }\r\n            break\r\n          case \"split\":\r\n            if (data.filter) {\r\n              requestFilters.push(data.filter)\r\n              splittingWorkers.add(data.id)\r\n            } else splittingWorkers.delete(data.id)\r\n            idleWorkers.push(data.id)\r\n            break\r\n          case \"iterate\":\r\n            idleWorkers.push(data.id)\r\n            break\r\n          case \"finalize\":\r\n            worker.terminate()\r\n            finalize(data);\r\n            return\r\n          case \"count\":\r\n            const [pruned, prepruned] = data.counts\r\n            status.total = prepruned\r\n            status.skipped += prepruned - pruned\r\n            return\r\n          default: console.log(\"DEBUG\", data)\r\n        }\r\n        while (idleWorkers.length) {\r\n          const id = idleWorkers.pop()!, worker = workers[id]\r\n          let work: WorkerCommand | undefined\r\n          if (requestFilters.length < maxRequestFilterInFlight) {\r\n            work = fetchPruningWork()\r\n            if (!work && splittingWorkers.has(id)) work = fetchContinueWork()\r\n          }\r\n          if (!work) work = fetchRequestWork()\r\n          if (work) worker.postMessage(work)\r\n          else {\r\n            idleWorkers.push(id)\r\n            if (idleWorkers.length === 8 * maxWorkers) {\r\n              const command: WorkerCommand = { command: \"finalize\" }\r\n              workers.forEach(worker => worker.postMessage(command))\r\n            }\r\n            break\r\n          }\r\n        }\r\n      }\r\n\r\n      workers.push(worker)\r\n      cancelled.then(() => worker.terminate())\r\n      finalizedList.push(finalized)\r\n    }\r\n    for (let i = 0; i < 7; i++)\r\n      idleWorkers.push(...range(0, maxWorkers - 1))\r\n\r\n    const buildTimer = setInterval(() => setBuildStatus({ type: \"active\", ...status }), 100)\r\n    const results = await Promise.any([Promise.all(finalizedList), cancelled])\r\n    clearInterval(buildTimer)\r\n    cancelToken.current = () => { }\r\n\r\n    if (!results) {\r\n      status.tested = 0\r\n      status.failed = 0\r\n      status.skipped = 0\r\n      status.total = 0\r\n    } else {\r\n      if (plotBase) {\r\n        const plotData = mergePlot(results.map(x => x.plotData!))\r\n        const plotBaseNode = input.total[plotBase] as NumNode\r\n        let data = Object.values(plotData)\r\n        if (KeyMap.unit(targetNode.info?.key) === \"%\")\r\n          data = data.map(({ value, plot }) => ({ value: value * 100, plot })) as Build[]\r\n        if (KeyMap.unit(plotBaseNode!.info?.key) === \"%\")\r\n          data = data.map(({ value, plot }) => ({ value, plot: (plot ?? 0) * 100 })) as Build[]\r\n        setchartData({\r\n          valueNode: targetNode,\r\n          plotNode: plotBaseNode,\r\n          data\r\n        })\r\n      }\r\n      const builds = mergeBuilds(results.map(x => x.builds), maxBuildsToShow)\r\n      if (process.env.NODE_ENV === \"development\") console.log(\"Build Result\", builds)\r\n      buildSettingDispatch({ builds: builds.map(build => build.artifactIds), buildDate: Date.now() })\r\n    }\r\n    setBuildStatus({ ...status, type: \"inactive\", finishTime: performance.now() })\r\n  }, [characterKey, database, buildSettingDispatch, maxWorkers, buildSetting, equipmentPriority])\r\n\r\n  const characterName = characterSheet?.name ?? \"Character Name\"\r\n\r\n  const setPlotBase = useCallback(plotBase => {\r\n    buildSettingDispatch({ plotBase })\r\n    setchartData(undefined)\r\n  }, [buildSettingDispatch])\r\n  const dataContext: dataContextObj | undefined = useMemo(() => {\r\n    return data && teamData && { data, teamData }\r\n  }, [data, teamData])\r\n\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"> Opps! It looks like you haven't added any artifacts to GO yet! You should go to the <Link component={RouterLink} to=\"/artifact\">Artifacts</Link> page and add some!</Alert>}\r\n    {/* Build Generator Editor */}\r\n    {dataContext && <DataContext.Provider value={dataContext}>\r\n\r\n      <Grid container spacing={1} >\r\n        {/* 1*/}\r\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n          {/* character card */}\r\n          <Box><CharacterCard characterKey={characterKey} onClickTeammate={onClickTeammate} /></Box>\r\n        </Grid>\r\n\r\n        {/* 2 */}\r\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n          <CardLight>\r\n            <CardContent  >\r\n              <Typography gutterBottom>{t`mainStat.title`}</Typography>\r\n              <BootstrapTooltip placement=\"top\" title={<Box>\r\n                <Typography variant=\"h6\">{t`mainStat.levelAssTooltip.title`}</Typography>\r\n                <Typography>{t`mainStat.levelAssTooltip.desc`}</Typography>\r\n              </Box>}>\r\n                <Box>\r\n                  <AssumeFullLevelToggle mainStatAssumptionLevel={mainStatAssumptionLevel} setmainStatAssumptionLevel={mainStatAssumptionLevel => buildSettingDispatch({ mainStatAssumptionLevel })} disabled={generatingBuilds} />\r\n                </Box>\r\n              </BootstrapTooltip>\r\n            </CardContent>\r\n            {/* main stat selector */}\r\n            <MainStatSelectionCard disabled={generatingBuilds} />\r\n          </CardLight>\r\n          <BonusStatsCard />\r\n        </Grid>\r\n\r\n        {/* 3 */}\r\n        <Grid item xs={12} sm={6} lg={6} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n          <ArtifactSetConfig disabled={generatingBuilds} />\r\n\r\n          {/* use excluded */}\r\n          <UseExcluded disabled={generatingBuilds} artsDirty={artsDirty} />\r\n\r\n          {/* use equipped */}\r\n          <UseEquipped disabled={generatingBuilds} />\r\n\r\n          <Button fullWidth startIcon={allowPartial ? <CheckBox /> : <CheckBoxOutlineBlank />} color={allowPartial ? \"success\" : \"secondary\"} onClick={() => buildSettingDispatch({ allowPartial: !allowPartial })}>{t`allowPartial`}</Button>\r\n          { /* Level Filter */}\r\n          <CardLight>\r\n            <CardContent>{t`levelFilter`}</CardContent>\r\n            <ArtifactLevelSlider levelLow={levelLow} levelHigh={levelHigh}\r\n              setLow={levelLow => buildSettingDispatch({ levelLow })}\r\n              setHigh={levelHigh => buildSettingDispatch({ levelHigh })}\r\n              setBoth={(levelLow, levelHigh) => buildSettingDispatch({ levelLow, levelHigh })}\r\n              disabled={generatingBuilds}\r\n            />\r\n          </CardLight>\r\n\r\n          {/*Minimum Final Stat Filter */}\r\n          <StatFilterCard disabled={generatingBuilds} />\r\n\r\n        </Grid>\r\n      </Grid>\r\n      {/* Footer */}\r\n      <Grid container spacing={1}>\r\n        <Grid item flexGrow={1} >\r\n          <ButtonGroup>\r\n            <Button\r\n              disabled={!characterKey || generatingBuilds || !optimizationTarget || !objPathValue(data?.getDisplay(), optimizationTarget)}\r\n              color={characterKey ? \"success\" : \"warning\"}\r\n              onClick={generateBuilds}\r\n              startIcon={<TrendingUp />}\r\n            >Generate Builds</Button>\r\n            <DropdownButton disabled={generatingBuilds || !characterKey}\r\n              title={<span><b>{maxBuildsToShow}</b> {maxBuildsToShow === 1 ? \"Build\" : \"Builds\"}</span>}>\r\n              <MenuItem>\r\n                <Typography variant=\"caption\" color=\"info.main\">\r\n                  Decreasing the number of generated build will decrease build calculation time for large number of builds.\r\n                </Typography>\r\n              </MenuItem>\r\n              <Divider />\r\n              {maxBuildsToShowList.map(v => <MenuItem key={v}\r\n                onClick={() => buildSettingDispatch({ maxBuildsToShow: v })}>{v} {v === 1 ? \"Build\" : \"Builds\"}</MenuItem>)}\r\n            </DropdownButton>\r\n            <DropdownButton disabled={generatingBuilds || !characterKey}\r\n              title={<span><b>{maxWorkers}</b> {maxWorkers === 1 ? \"Thread\" : \"Threads\"}</span>}>\r\n              <MenuItem>\r\n                <Typography variant=\"caption\" color=\"info.main\">\r\n                  Increasing the number of threads will speed up build time, but will use more CPU power.\r\n                </Typography>\r\n              </MenuItem>\r\n              <Divider />\r\n              {range(1, defThreads).reverse().map(v => <MenuItem key={v}\r\n                onClick={() => setMaxWorkers(v)}>{v} {v === 1 ? \"Thread\" : \"Threads\"}</MenuItem>)}\r\n            </DropdownButton>\r\n            <Button\r\n              disabled={!generatingBuilds}\r\n              color=\"error\"\r\n              onClick={() => cancelToken.current()}\r\n              startIcon={<Close />}\r\n            >Cancel</Button>\r\n          </ButtonGroup>\r\n        </Grid>\r\n        <Grid item>\r\n          <span>Optimization Target: </span>\r\n          {<OptimizationTargetSelector\r\n            optimizationTarget={optimizationTarget}\r\n            setTarget={target => buildSettingDispatch({ optimizationTarget: target })}\r\n            disabled={!!generatingBuilds}\r\n          />}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {!!characterKey && <BuildAlert {...{ status: buildStatus, characterName, maxBuildsToShow }} />}\r\n      <Box >\r\n        <ChartCard disabled={generatingBuilds} chartData={chartData} plotBase={plotBase} setPlotBase={setPlotBase} />\r\n      </Box>\r\n      <CardLight>\r\n        <CardContent>\r\n          <Box display=\"flex\" alignItems=\"center\" gap={1} mb={1} >\r\n            <Typography sx={{ flexGrow: 1 }}>\r\n              {builds ? <span>Showing <strong>{builds.length}</strong> Builds generated for {characterName}. {!!buildDate && <span>Build generated on: <strong>{(new Date(buildDate)).toLocaleString()}</strong></span>}</span>\r\n                : <span>Select a character to generate builds.</span>}\r\n            </Typography>\r\n            <Button disabled={!builds.length} color=\"error\" onClick={() => buildSettingDispatch({ builds: [], buildDate: 0 })} >Clear Builds</Button>\r\n          </Box>\r\n          <Grid container display=\"flex\" spacing={1}>\r\n            <Grid item><HitModeToggle size=\"small\" /></Grid>\r\n            <Grid item><ReactionToggle size=\"small\" /></Grid>\r\n            <Grid item flexGrow={1} />\r\n            <Grid item><SolidToggleButtonGroup exclusive value={compareData} onChange={(e, v) => characterDispatch({ compareData: v })} size=\"small\">\r\n              <ToggleButton value={false} disabled={!compareData}>Show new builds</ToggleButton>\r\n              <ToggleButton value={true} disabled={compareData}>Compare vs. equipped</ToggleButton>\r\n            </SolidToggleButtonGroup></Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </CardLight>\r\n      <OptimizationTargetContext.Provider value={optimizationTarget}>\r\n        <BuildList buildsArts={buildsArts} characterKey={characterKey} data={data} compareData={compareData} disabled={!!generatingBuilds} />\r\n      </OptimizationTargetContext.Provider>\r\n    </DataContext.Provider>}\r\n  </Box>\r\n}\r\nfunction BuildList({ buildsArts, characterKey, data, compareData, disabled }: {\r\n  buildsArts: ICachedArtifact[][],\r\n  characterKey?: \"\" | CharacterKey,\r\n  data?: UIData,\r\n  compareData: boolean,\r\n  disabled: boolean,\r\n}) {\r\n  // Memoize the build list because calculating/rendering the build list is actually very expensive, which will cause longer optimization times.\r\n  const list = useMemo(() => <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\r\n    {buildsArts?.map((build, index) => characterKey && data && <DataContextWrapper\r\n      key={index + build.join()}\r\n      characterKey={characterKey}\r\n      build={build}\r\n      oldData={data}\r\n    >\r\n      <BuildDisplayItem index={index} compareBuild={compareData} disabled={disabled} />\r\n    </DataContextWrapper>\r\n    )}\r\n  </Suspense>, [buildsArts, characterKey, data, compareData, disabled])\r\n  return list\r\n}\r\n\r\ntype Prop = {\r\n  children: React.ReactNode\r\n  characterKey: CharacterKey,\r\n  build: ICachedArtifact[],\r\n  oldData: UIData,\r\n}\r\nfunction DataContextWrapper({ children, characterKey, build, oldData }: Prop) {\r\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\r\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, build)\r\n  const providerValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [teamData, oldData, characterKey])\r\n  if (!providerValue) return null\r\n  return <DataContext.Provider value={providerValue}>\r\n    {children}\r\n  </DataContext.Provider>\r\n}\r\n","import { Close, Difference } from \"@mui/icons-material\"\r\nimport { Button, Skeleton, Tooltip, Typography } from \"@mui/material\"\r\nimport { Suspense, useContext, useMemo } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { CharacterContext } from \"../../../../Context/CharacterContext\"\r\nimport { HitModeToggle, ReactionToggle } from \"../../../../Components/HitModeEditor\"\r\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\r\nimport { DatabaseContext } from \"../../../../Database/Database\"\r\nimport { DataContext } from \"../../../../Context/DataContext\"\r\nimport useBoolState from \"../../../../ReactHooks/useBoolState\"\r\nimport useTeamData from \"../../../../ReactHooks/useTeamData\"\r\nimport { objectMap } from \"../../../../Util/Util\"\r\nimport useBuildSetting from \"../TabOptimize/useBuildSetting\"\r\nimport BuildDisplayItem from \"../TabOptimize/Components/BuildDisplayItem\"\r\n\r\nexport default function CompareBuildButton({ artId, weaponId }: { artId?: string, weaponId?: string }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const [show, onShow, onHide] = useBoolState(false)\r\n\r\n  return <>\r\n    <ModalWrapper open={show} onClose={onHide} containerProps={{ maxWidth: \"xl\" }}>\r\n      <CompareContent artId={artId} weaponId={weaponId} onHide={onHide} />\r\n    </ModalWrapper>\r\n    <Tooltip title={<Typography>{t`tabEquip.compare`}</Typography>} placement=\"top\" arrow>\r\n      <Button color=\"info\" size=\"small\" onClick={onShow} ><Difference /></Button>\r\n    </Tooltip>\r\n  </>\r\n}\r\nfunction CompareContent({ artId, weaponId, onHide }: { artId?: string, weaponId?: string, onHide: () => void }) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\r\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\r\n  const { data: oldData } = useContext(DataContext)\r\n  const build = useMemo(() => {\r\n    const newArt = database.arts.get(artId ?? \"\")\r\n    const artmap = objectMap(equippedArtifacts, (id, slot) => slot === newArt?.slotKey ? newArt : database.arts.get(id))\r\n    return Object.values(artmap).filter(a => a)\r\n  }, [database, equippedArtifacts, artId])\r\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, build, weaponId ? database.weapons.get(weaponId) : undefined)\r\n  const dataProviderValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [characterKey, teamData, oldData])\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\r\n    {dataProviderValue && <DataContext.Provider value={dataProviderValue}>\r\n      <BuildDisplayItem compareBuild={true} extraButtons={<><HitModeToggle size=\"small\" /><ReactionToggle size=\"small\" /><Button size='small' color=\"error\" onClick={onHide} ><Close /></Button></>} />\r\n    </DataContext.Provider>}\r\n  </Suspense>\r\n}\r\n","import { Box, CardContent, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\r\nimport { lazy, Suspense, useCallback, useContext, useEffect, useMemo, useReducer } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Assets from \"../../../../Assets/Assets\"\r\nimport CardDark from \"../../../../Components/Card/CardDark\"\r\nimport CloseButton from \"../../../../Components/CloseButton\"\r\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\r\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\r\nimport { DatabaseContext } from \"../../../../Database/Database\"\r\nimport ArtifactCard from \"../../../../PageArtifact/ArtifactCard\"\r\nimport { artifactFilterConfigs, FilterOption, initialFilterOption } from \"../../../../PageArtifact/ArtifactSort\"\r\nimport useForceUpdate from \"../../../../ReactHooks/useForceUpdate\"\r\nimport useMediaQueryUp from \"../../../../ReactHooks/useMediaQueryUp\"\r\nimport { SlotKey } from \"../../../../Types/consts\"\r\nimport { filterFunction } from \"../../../../Util/SortByFilters\"\r\nimport CompareBuildButton from \"./CompareBuildButton\"\r\nconst numToShowMap = { xs: 6, sm: 6, md: 9, lg: 12, xl: 12 }\r\n\r\nconst ArtifactFilterDisplay = lazy(() => import('../../../../Components/Artifact/ArtifactFilterDisplay'))\r\n\r\nexport default function ArtifactSwapModal({ onChangeId, slotKey, show, onClose }:\r\n  { onChangeId: (id: string) => void, slotKey: SlotKey, show: boolean, onClose: () => void }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { database } = useContext(DatabaseContext)\r\n  const clickHandler = useCallback((id) => {\r\n    onChangeId(id)\r\n    onClose()\r\n  }, [onChangeId, onClose])\r\n  const filterOptionReducer = useCallback((state, action) => ({ ...state, ...action, slotKeys: [slotKey] }), [slotKey],)\r\n\r\n  const [filterOption, filterOptionDispatch]: [FilterOption, (action: any) => void] = useReducer(filterOptionReducer, { ...initialFilterOption(), slotKeys: [slotKey] })\r\n\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n  useEffect(() => { return database.arts.followAny(forceUpdate) }, [database, forceUpdate])\r\n\r\n  const brPt = useMediaQueryUp()\r\n\r\n  const filterConfigs = useMemo(() => artifactFilterConfigs(), [])\r\n  const artIdList = useMemo(() => {\r\n    const filterFunc = filterFunction(filterOption, filterConfigs)\r\n    return dbDirty && database.arts.values.filter(filterFunc).map(art => art.id).slice(0, numToShowMap[brPt])\r\n  }, [dbDirty, database, filterConfigs, filterOption, brPt])\r\n\r\n  return <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"xl\" }} >\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n        <Typography variant=\"h6\">{slotKey ? <ImgIcon src={Assets.slot[slotKey]} /> : null} {t`tabEquip.swapArt`}</Typography>\r\n        <CloseButton onClick={onClose} />\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent>\r\n        <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={200} />}>\r\n          <ArtifactFilterDisplay filterOption={filterOption} filterOptionDispatch={filterOptionDispatch} disableSlotFilter />\r\n        </Suspense>\r\n        <Box mt={1}>\r\n          <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={300} />}>\r\n            <Grid container spacing={1} columns={{ xs: 2, md: 3, lg: 4 }}>\r\n              {artIdList.map(id =>\r\n                <Grid item key={id} xs={1} >\r\n                  <ArtifactCard\r\n                    artifactId={id}\r\n                    extraButtons={<CompareBuildButton artId={id} />}\r\n                    onClick={clickHandler}\r\n                  />\r\n                </Grid>)}\r\n            </Grid>\r\n          </Suspense>\r\n        </Box>\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n","import { Box, CardContent, Divider, Grid, TextField, ToggleButton, Typography } from \"@mui/material\"\r\nimport { ChangeEvent, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Assets from \"../../../../Assets/Assets\"\r\nimport CardDark from \"../../../../Components/Card/CardDark\"\r\nimport CloseButton from \"../../../../Components/CloseButton\"\r\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\r\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\r\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\"\r\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\"\r\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\"\r\nimport { DatabaseContext } from \"../../../../Database/Database\"\r\nimport WeaponCard from \"../../../../PageWeapon/WeaponCard\"\r\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate'\r\nimport usePromise from \"../../../../ReactHooks/usePromise\"\r\nimport { allRarities, Rarity, WeaponTypeKey } from \"../../../../Types/consts\"\r\nimport { handleMultiSelect } from \"../../../../Util/MultiSelect\"\r\nimport { filterFunction, sortFunction } from '../../../../Util/SortByFilters'\r\nimport { weaponFilterConfigs, weaponSortConfigs, weaponSortMap } from '../../../../Util/WeaponSort'\r\nimport CompareBuildButton from \"./CompareBuildButton\"\r\n\r\nconst rarityHandler = handleMultiSelect([...allRarities])\r\n\r\nexport default function WeaponSwapModal({ onChangeId, weaponTypeKey, show, onClose }: { onChangeId: (id: string) => void, weaponTypeKey: WeaponTypeKey, show: boolean, onClose: () => void }) {\r\n  const { t } = useTranslation([\"page_character\", \"page_weapon\", \"weaponNames_gen\"])\r\n  const { database } = useContext(DatabaseContext)\r\n  const clickHandler = useCallback((id: string) => {\r\n    onChangeId(id)\r\n    onClose()\r\n  }, [onChangeId, onClose])\r\n\r\n  const [dbDirty, forceUpdate] = useForceUpdate()\r\n  useEffect(() => database.weapons.followAny(forceUpdate), [forceUpdate, database])\r\n\r\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\r\n\r\n  const [rarity, setRarity] = useState<Rarity[]>([5, 4, 3])\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const deferredSearchTerm = useDeferredValue(searchTerm)\r\n\r\n  const weaponIdList = useMemo(() => (weaponSheets && dbDirty && database.weapons.values\r\n    .filter(filterFunction({ weaponType: weaponTypeKey, rarity, name: deferredSearchTerm }, weaponFilterConfigs(weaponSheets)))\r\n    .sort(sortFunction(weaponSortMap[\"level\"] ?? [], false, weaponSortConfigs(weaponSheets)))\r\n    .map(weapon => weapon.id)) ?? []\r\n    , [dbDirty, database, weaponSheets, rarity, weaponTypeKey, deferredSearchTerm])\r\n\r\n  return <ModalWrapper open={show} onClose={onClose} >\r\n    <CardDark>\r\n      <CardContent sx={{ py: 1 }}>\r\n        <Grid container>\r\n          <Grid item flexGrow={1}>\r\n            <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} {t`page_character:tabEquip.swapWeapon`}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <CloseButton onClick={onClose} />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent>\r\n        <Grid container spacing={1} mb={1}>\r\n          <Grid item>\r\n            <SolidToggleButtonGroup sx={{ height: \"100%\" }} value={rarity} size=\"small\">\r\n              {allRarities.map(star => <ToggleButton key={star} value={star} onClick={() => setRarity(rarityHandler(rarity, star))}>\r\n                <Box display=\"flex\" gap={1}><strong>{star}</strong><StarsDisplay stars={1} /></Box>\r\n              </ToggleButton>)}\r\n            </SolidToggleButtonGroup>\r\n          </Grid>\r\n          <Grid item flexGrow={1}>\r\n            <TextField\r\n              autoFocus\r\n              size=\"small\"\r\n              value={searchTerm}\r\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\r\n              label={t(\"page_weapon:weaponName\")}\r\n              sx={{ height: \"100%\" }}\r\n              InputProps={{\r\n                sx: { height: \"100%\" }\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          {weaponIdList.map(weaponId =>\r\n            <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\r\n              <WeaponCard\r\n                weaponId={weaponId}\r\n                onClick={clickHandler}\r\n                extraButtons={<CompareBuildButton weaponId={weaponId} />}\r\n              />\r\n            </Grid>)}\r\n        </Grid>\r\n      </CardContent>\r\n    </CardDark>\r\n  </ModalWrapper>\r\n}\r\n","import { Settings, SwapHoriz } from '@mui/icons-material';\r\nimport { Box, Button, CardContent, Divider, Grid, ListItem, Stack, Tooltip, Typography, useMediaQuery } from '@mui/material';\r\nimport { useTheme } from \"@mui/system\";\r\nimport { lazy, Suspense, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport SetEffectDisplay from '../../../../Components/Artifact/SetEffectDisplay';\r\nimport SlotNameWithIcon from '../../../../Components/Artifact/SlotNameWIthIcon';\r\nimport SubstatToggle from '../../../../Components/Artifact/SubstatToggle';\r\nimport CardDark from '../../../../Components/Card/CardDark';\r\nimport CardLight from '../../../../Components/Card/CardLight';\r\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\r\nimport { BasicFieldDisplay, FieldDisplayList } from '../../../../Components/FieldDisplay';\r\nimport ModalWrapper from '../../../../Components/ModalWrapper';\r\nimport PercentBadge from '../../../../Components/PercentBadge';\r\nimport { CharacterContext } from '../../../../Context/CharacterContext';\r\nimport { DataContext } from '../../../../Context/DataContext';\r\nimport Artifact from '../../../../Data/Artifacts/Artifact';\r\nimport { ArtifactSheet } from '../../../../Data/Artifacts/ArtifactSheet';\r\nimport { initCharMeta } from '../../../../Database/Data/StateData';\r\nimport { DatabaseContext } from '../../../../Database/Database';\r\nimport { uiInput as input } from '../../../../Formula';\r\nimport ArtifactCard from '../../../../PageArtifact/ArtifactCard';\r\nimport WeaponCard from '../../../../PageWeapon/WeaponCard';\r\nimport useBoolState from '../../../../ReactHooks/useBoolState';\r\nimport useDBState from \"../../../../ReactHooks/useDBState\";\r\nimport usePromise from '../../../../ReactHooks/usePromise';\r\nimport { allSubstatKeys } from '../../../../Types/artifact';\r\nimport { allSlotKeys, charKeyToLocCharKey, SlotKey, WeaponTypeKey } from '../../../../Types/consts';\r\nimport { IFieldDisplay } from '../../../../Types/fieldDisplay';\r\nimport useBuildSetting from '../TabOptimize/useBuildSetting';\r\nimport ArtifactSwapModal from './ArtifactSwapModal';\r\nimport WeaponSwapModal from './WeaponSwapModal';\r\n\r\nconst WeaponEditor = lazy(() => import('../../../../PageWeapon/WeaponEditor'))\r\n\r\nexport default function EquipmentSection() {\r\n  const { character: { equippedWeapon, key: characterKey }, characterSheet } = useContext(CharacterContext)\r\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\r\n  const { teamData, data } = useContext(DataContext)\r\n  const weaponSheet = teamData[characterKey]?.weaponSheet\r\n  const [weaponId, setweaponId] = useState(\"\")\r\n  const showWeapon = useCallback(() => setweaponId(equippedWeapon), [equippedWeapon],)\r\n  const hideWeapon = useCallback(() => setweaponId(\"\"), [])\r\n\r\n  //triggers when character swap weapons\r\n  useEffect(() => {\r\n    if (weaponId && weaponId !== equippedWeapon)\r\n      setweaponId(equippedWeapon)\r\n  }, [weaponId, equippedWeapon])\r\n\r\n  const theme = useTheme();\r\n  const breakpoint = useMediaQuery(theme.breakpoints.up('lg'));\r\n\r\n  const weaponDoc = useMemo(() => weaponSheet && weaponSheet.document.length > 0 && <CardLight><CardContent><DocumentDisplay sections={weaponSheet.document} /></CardContent></CardLight>, [weaponSheet])\r\n  const [{ rvFilter }] = useDBState(`charMeta_${characterKey}`, initCharMeta)\r\n  const deferredRvFilter = useDeferredValue(rvFilter)\r\n  const deferredRvSet = useMemo(() => new Set(deferredRvFilter), [deferredRvFilter])\r\n  return <Box >\r\n    <Suspense fallback={false}>\r\n      <WeaponEditor\r\n        weaponId={weaponId}\r\n        footer\r\n        onClose={hideWeapon}\r\n        extraButtons={<LargeWeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />}\r\n      />\r\n    </Suspense>\r\n    <Grid container spacing={1}>\r\n      {breakpoint && <Grid item xs={12} md={12} lg={3} xl={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\r\n        {weaponDoc && weaponDoc}\r\n        <ArtifactSectionCard />\r\n      </Grid>}\r\n      <Grid item xs={12} md={12} lg={9} xl={9} container spacing={1}>\r\n        <Grid item xs={12} sm={6} md={4} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n          <WeaponCard weaponId={equippedWeapon} onEdit={showWeapon} canEquip extraButtons={<WeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />} />\r\n        </Grid>\r\n        {allSlotKeys.map(slotKey => <Grid item xs={12} sm={6} md={4} key={slotKey} >\r\n          {!!data.get(input.art[slotKey].id).value ?\r\n            <ArtifactCard artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} effFilter={deferredRvSet}\r\n              extraButtons={<ArtifactSwapButton slotKey={slotKey} />} editor canExclude canEquip /> :\r\n            <ArtSwapCard slotKey={slotKey} />}\r\n        </Grid>)}\r\n      </Grid>\r\n      {!breakpoint && <Grid item xs={12} md={12} xl={3} container spacing={1} >\r\n        {weaponDoc && <Grid item xs={12} md={6} lg={4}>{weaponDoc}</Grid>}\r\n        <Grid item xs={12} md={6} lg={4} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n          <ArtifactSectionCard />\r\n        </Grid>\r\n      </Grid>}\r\n    </Grid>\r\n  </Box>\r\n}\r\nfunction ArtSwapCard({ slotKey }: { slotKey: SlotKey }) {\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, onOpen, onClose] = useBoolState()\r\n  return <CardLight sx={{ height: \"100%\", width: \"100%\", minHeight: 300, display: \"flex\", flexDirection: \"column\" }}>\r\n    <CardContent>\r\n      <Typography><SlotNameWithIcon slotKey={slotKey} /></Typography>\r\n    </CardContent>\r\n    <Divider />\r\n    <Box sx={{\r\n      flexGrow: 1,\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\"\r\n    }}\r\n    >\r\n      <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: charKeyToLocCharKey(characterKey) })} />\r\n      <Button onClick={onOpen} color=\"info\" sx={{ borderRadius: \"1em\", }}>\r\n        <SwapHoriz sx={{ height: 100, width: 100 }} />\r\n      </Button>\r\n    </Box>\r\n  </CardLight>\r\n}\r\nfunction WeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, onOpen, onClose] = useBoolState()\r\n  return <>\r\n    <Tooltip title={<Typography>{t`tabEquip.swapWeapon`}</Typography>} placement=\"top\" arrow>\r\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\r\n    </Tooltip>\r\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: charKeyToLocCharKey(characterKey) })} show={show} onClose={onClose} />\r\n  </>\r\n}\r\nfunction LargeWeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, onOpen, onClose] = useBoolState()\r\n  return <>\r\n    <Button color=\"info\" onClick={onOpen} startIcon={<SwapHoriz />} >{t`tabEquip.swapWeapon`}</Button>\r\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: charKeyToLocCharKey(characterKey) })} show={show} onClose={onClose} />\r\n  </>\r\n}\r\nfunction ArtifactSwapButton({ slotKey }: { slotKey: SlotKey }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: { key: characterKey } } = useContext(CharacterContext)\r\n  const { database } = useContext(DatabaseContext)\r\n  const [show, onOpen, onClose] = useBoolState()\r\n  return <>\r\n    <Tooltip title={<Typography>{t`tabEquip.swapArt`}</Typography>} placement=\"top\" arrow>\r\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\r\n    </Tooltip>\r\n    <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: charKeyToLocCharKey(characterKey) })} />\r\n  </>\r\n}\r\nfunction ArtifactSectionCard() {\r\n  const { t } = useTranslation([\"page_character\", \"artifact\"])\r\n  const { database } = useContext(DatabaseContext)\r\n  const { character, character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\r\n  const hasEquipped = useMemo(() => !!Object.values(equippedArtifacts).filter(i => i).length, [equippedArtifacts])\r\n  const unequipArts = useCallback(() => {\r\n    if (!character) return\r\n    if (!window.confirm(\"Do you want to move all currently equipped artifacts to inventory?\")) return\r\n    Object.values(equippedArtifacts).forEach(aid => database.arts.set(aid, { location: \"\" }))\r\n  }, [character, database, equippedArtifacts])\r\n\r\n  const setEffects = useMemo(() => artifactSheets && ArtifactSheet.setEffects(artifactSheets, data), [artifactSheets, data])\r\n  const [{ rvFilter }, setCharMeta] = useDBState(`charMeta_${characterKey}`, initCharMeta)\r\n  const setRVFilter = useCallback(rvFilter => setCharMeta({ rvFilter }), [setCharMeta],)\r\n\r\n  const [show, onShow, onHide] = useBoolState()\r\n  const deferredrvFilter = useDeferredValue(rvFilter)\r\n  const { rvField, rvmField } = useMemo(() => {\r\n    const { currentEfficiency, currentEfficiency_, maxEfficiency, maxEfficiency_ } = Object.values(equippedArtifacts).reduce((a, artid) => {\r\n      const art = database.arts.get(artid)\r\n      if (art) {\r\n        const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, new Set(deferredrvFilter))\r\n        const { currentEfficiency: currentEfficiency_, maxEfficiency: maxEfficiency_ } = Artifact.getArtifactEfficiency(art, new Set(allSubstatKeys))\r\n        a.currentEfficiency = a.currentEfficiency + currentEfficiency\r\n        a.maxEfficiency = a.maxEfficiency + maxEfficiency\r\n\r\n        a.currentEfficiency_ = a.currentEfficiency_ + currentEfficiency_\r\n        a.maxEfficiency_ = a.maxEfficiency_ + maxEfficiency_\r\n      }\r\n      return a\r\n    }, { currentEfficiency: 0, currentEfficiency_: 0, maxEfficiency: 0, maxEfficiency_: 0 })\r\n    const rvField: IFieldDisplay = {\r\n      text: t`artifact:editor.curSubEff`,\r\n      value: !(currentEfficiency - currentEfficiency_) ? <PercentBadge value={currentEfficiency} max={4500} valid /> :\r\n        <span><PercentBadge value={currentEfficiency} max={4500} valid /> / <PercentBadge value={currentEfficiency_} max={4500} valid /></span>\r\n    }\r\n    const rvmField: IFieldDisplay = {\r\n      text: t`artifact:editor.maxSubEff`,\r\n      canShow: () => !!(currentEfficiency_ - maxEfficiency_),\r\n      value: !(maxEfficiency - maxEfficiency_) ? <PercentBadge value={maxEfficiency} max={4500} valid /> :\r\n        <span><PercentBadge value={maxEfficiency} max={4500} valid /> / <PercentBadge value={maxEfficiency_} max={4500} valid /></span>\r\n    }\r\n    return { rvField, rvmField }\r\n  }, [t, deferredrvFilter, equippedArtifacts, database])\r\n\r\n  return <CardLight>\r\n    {hasEquipped && <Button color=\"error\" onClick={unequipArts} fullWidth sx={{ borderBottomRightRadius: 0, borderBottomLeftRadius: 0 }}>{t`tabEquip.unequipArts`}</Button>}\r\n    <CardContent >\r\n      <Stack spacing={1}>\r\n        <CardDark >\r\n          <Button fullWidth color=\"info\" startIcon={<Settings />} sx={{ borderBottomLeftRadius: 0, borderBottomRightRadius: 0 }} onClick={onShow}>RV Filter</Button>\r\n          <ModalWrapper open={show} onClose={onHide}>\r\n            <CardDark>\r\n              <CardContent>\r\n                <SubstatToggle selectedKeys={rvFilter} onChange={setRVFilter} />\r\n              </CardContent>\r\n            </CardDark>\r\n          </ModalWrapper>\r\n          <FieldDisplayList >\r\n            <BasicFieldDisplay field={rvField} component={ListItem} />\r\n            {rvmField?.canShow?.(data) && <BasicFieldDisplay field={rvmField} component={ListItem} />}\r\n          </FieldDisplayList>\r\n        </CardDark>\r\n        {artifactSheets && setEffects && Object.entries(setEffects).flatMap(([setKey, setNumKeyArr]) =>\r\n          setNumKeyArr.map(setNumKey => <CardDark key={setKey + setNumKey} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\r\n            <SetEffectDisplay key={setKey + setNumKey} setKey={setKey} setNumKey={setNumKey} />\r\n          </CardDark>)\r\n        )}\r\n      </Stack>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n","import { Favorite, FavoriteBorder } from \"@mui/icons-material\";\r\nimport { Badge, Box, CardActionArea, Chip, Grid, IconButton, Stack, Typography } from \"@mui/material\";\r\nimport { useCallback, useContext, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Assets from \"../../../../Assets/Assets\";\r\nimport ArtifactCardNano from \"../../../../Components/Artifact/ArtifactCardNano\";\r\nimport CardLight from \"../../../../Components/Card/CardLight\";\r\nimport CharacterCardPico from \"../../../../Components/Character/CharacterCardPico\";\r\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\r\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\r\nimport SqBadge from \"../../../../Components/SqBadge\";\r\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\";\r\nimport StatIcon from \"../../../../Components/StatIcon\";\r\nimport WeaponCardNano from \"../../../../Components/Weapon/WeaponCardNano\";\r\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\r\nimport { DataContext } from \"../../../../Context/DataContext\";\r\nimport { TalentSheetElementKey } from \"../../../../Data/Characters/CharacterSheet\";\r\nimport { getLevelString } from \"../../../../Data/LevelData\";\r\nimport { initCharMeta } from \"../../../../Database/Data/StateData\";\r\nimport { uiInput as input } from \"../../../../Formula\";\r\nimport useCharacterReducer from \"../../../../ReactHooks/useCharacterReducer\";\r\nimport useDBState from \"../../../../ReactHooks/useDBState\";\r\nimport { allSlotKeys, Ascension, ElementKey } from \"../../../../Types/consts\";\r\nimport { range } from \"../../../../Util/Util\";\r\nimport EquipmentSection from \"./EquipmentSection\";\r\n\r\nexport default function TabOverview() {\r\n  const scrollRef = useRef<HTMLDivElement>()\r\n  const onScroll = useCallback(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), [scrollRef])\r\n\r\n  return <Stack spacing={1}>\r\n    <Grid container spacing={1} sx={{ justifyContent: \"center\" }}>\r\n      <Grid item xs={8} sm={5} md={4} lg={2.3}  >\r\n        <CharacterProfileCard />\r\n      </Grid>\r\n      <Grid item xs={12} sm={7} md={8} lg={9.7} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\r\n        <EquipmentRow onClick={onScroll} />\r\n        <CardLight sx={{ flexGrow: 1, p: 1 }}>\r\n          <StatDisplayComponent />\r\n        </CardLight>\r\n      </Grid>\r\n    </Grid >\r\n    <Box ref={scrollRef}>\r\n      <EquipmentSection />\r\n    </Box>\r\n  </Stack>\r\n}\r\nfunction EquipmentRow({ onClick }: { onClick: () => void }) {\r\n  const { character: { equippedWeapon } } = useContext(CharacterContext)\r\n  const { data, } = useContext(DataContext)\r\n\r\n  return <Grid container spacing={1} columns={{ xs: 2, sm: 2, md: 3, lg: 6, xl: 6 }}>\r\n    <Grid item xs={1}>\r\n      <WeaponCardNano weaponId={equippedWeapon} BGComponent={CardLight} onClick={onClick} />\r\n    </Grid>\r\n    {allSlotKeys.map(slotKey =>\r\n      <Grid item key={slotKey} xs={1} >\r\n        <ArtifactCardNano artifactId={data.get(input.art[slotKey].id).value} slotKey={slotKey} BGComponent={CardLight} onClick={onClick} />\r\n      </Grid>)}\r\n  </Grid>\r\n}\r\n/* Image card with star and name and level */\r\nfunction CharacterProfileCard() {\r\n  const { characterSheet, character: { key: characterKey, team } } = useContext(CharacterContext)\r\n  const { data, } = useContext(DataContext)\r\n  const characterDispatch = useCharacterReducer(characterKey)\r\n  const navigate = useNavigate()\r\n  const charEle = data.get(input.charEle).value as ElementKey\r\n  const weaponTypeKey = characterSheet.weaponTypeKey\r\n  const level = data.get(input.lvl).value\r\n  const ascension = data.get(input.asc).value as Ascension\r\n  const constellation = data.get(input.constellation).value\r\n  const tlvl = {\r\n    auto: data.get(input.total.auto).value,\r\n    skill: data.get(input.total.skill).value,\r\n    burst: data.get(input.total.burst).value,\r\n  }\r\n  const tBoost = {\r\n    auto: data.get(input.bonus.auto).value,\r\n    skill: data.get(input.bonus.skill).value,\r\n    burst: data.get(input.bonus.burst).value,\r\n  }\r\n  const [{ favorite }, setCharMeta] = useDBState(`charMeta_${characterKey}`, initCharMeta)\r\n  return <CardLight sx={{ height: \"100%\" }} >\r\n    <Box sx={{ position: \"relative\" }}>\r\n      <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\" }}>\r\n        <Typography variant=\"h6\" sx={{ position: \"absolute\", left: \"50%\", bottom: 0, transform: \"translate(-50%, -50%)\", opacity: 0.75 }}>\r\n          <StarsDisplay stars={characterSheet.rarity} colored />\r\n        </Typography>\r\n        <Box sx={{ position: \"absolute\", left: \"50%\", bottom: \"5%\", transform: \"translate(-50%, -50%)\", opacity: 0.85, width: \"100%\", display: \"flex\", justifyContent: \"center\", px: 1 }}>\r\n          <Chip color={charEle} sx={{ height: \"auto\" }}\r\n            label={<Typography variant=\"h6\" sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\r\n              {StatIcon[charEle]}\r\n              <Box sx={{ whiteSpace: \"normal\", textAlign: \"center\" }}>{characterSheet.name}</Box>\r\n              <ImgIcon src={Assets.weaponTypes?.[weaponTypeKey]} />\r\n            </Typography>} />\r\n        </Box>\r\n        <Box sx={{ position: \"absolute\", left: 0, top: 0 }}>\r\n          <IconButton sx={{ p: 1 }} color=\"error\" onClick={() => setCharMeta({ favorite: !favorite })}>\r\n            {favorite ? <Favorite /> : <FavoriteBorder />}\r\n          </IconButton>\r\n        </Box>\r\n        <Typography sx={{ p: 1, position: \"absolute\", right: 0, top: 0, opacity: 0.8 }}>\r\n          <SqBadge>{getLevelString(level, ascension)}</SqBadge>\r\n        </Typography>\r\n      </Box>\r\n      <Box src={characterSheet.cardImg} component=\"img\" width=\"100%\" height=\"auto\" />\r\n    </Box>\r\n    <Box>\r\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"talent\")}>\r\n        <Grid container spacing={1} mt={-1}>\r\n          {([\"auto\", \"skill\", \"burst\"] as TalentSheetElementKey[]).map(tKey =>\r\n            <Grid item xs={4} key={tKey}>\r\n              <Badge badgeContent={tlvl[tKey]} color={tBoost[tKey] ? \"info\" : \"secondary\"}\r\n                overlap=\"circular\"\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'right',\r\n                }}\r\n                sx={{\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  \"& > .MuiBadge-badge\": {\r\n                    fontSize: \"1.25em\",\r\n                    padding: \".25em .4em\",\r\n                    borderRadius: \".5em\",\r\n                    lineHeight: 1,\r\n                    height: \"1.25em\"\r\n                  }\r\n                }}>\r\n                <Box component=\"img\" src={characterSheet.getTalentOfKey(tKey)?.img} width=\"100%\" height=\"auto\" />\r\n              </Badge>\r\n            </Grid>)}\r\n        </Grid>\r\n      </CardActionArea>\r\n      <Typography sx={{ textAlign: \"center\", mt: 1 }} variant=\"h6\">{characterSheet.constellationName}</Typography>\r\n      <Grid container spacing={1}>\r\n        {range(1, 6).map(i =>\r\n          <Grid item xs={4} key={i}>\r\n            <CardActionArea onClick={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}>\r\n              <Box component=\"img\" src={characterSheet.getTalentOfKey(`constellation${i}` as TalentSheetElementKey)?.img}\r\n                sx={{\r\n                  ...(constellation >= i ? {} : { filter: \"brightness(50%)\" })\r\n                }}\r\n                width=\"100%\" height=\"auto\" />\r\n            </CardActionArea>\r\n          </Grid>)}\r\n      </Grid>\r\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"teambuffs\")}>\r\n        <Grid container columns={3} spacing={1}>\r\n          {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={team[i]} index={i} /></Grid>)}\r\n        </Grid>\r\n      </CardActionArea>\r\n    </Box>\r\n  </CardLight >\r\n}\r\n","import { Box, CardActionArea, CardContent, Grid, MenuItem, Typography, useMediaQuery } from \"@mui/material\";\r\nimport { useTheme } from \"@mui/system\";\r\nimport { useCallback, useContext, useMemo } from 'react';\r\nimport CardDark from \"../../../Components/Card/CardDark\";\r\nimport CardLight from \"../../../Components/Card/CardLight\";\r\nimport ConditionalWrapper from \"../../../Components/ConditionalWrapper\";\r\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\r\nimport DropdownButton from \"../../../Components/DropdownMenu/DropdownButton\";\r\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\r\nimport { CharacterContext } from \"../../../Context/CharacterContext\";\r\nimport { DataContext } from '../../../Context/DataContext';\r\nimport { TalentSheetElementKey } from \"../../../Data/Characters/CharacterSheet\";\r\nimport { uiInput as input } from \"../../../Formula\";\r\nimport { NumNode } from \"../../../Formula/type\";\r\nimport { NodeDisplay } from '../../../Formula/uiData';\r\nimport useCharacterReducer from \"../../../ReactHooks/useCharacterReducer\";\r\nimport { DocumentSection } from \"../../../Types/sheet\";\r\nimport { range } from \"../../../Util/Util\";\r\n\r\nconst talentSpacing = {\r\n  xs: 12,\r\n  sm: 6,\r\n  md: 4\r\n}\r\n\r\nexport default function CharacterTalentPane() {\r\n  const { character, characterSheet } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n  const characterDispatch = useCharacterReducer(character.key)\r\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]] as [TalentSheetElementKey, string][]\r\n  const passivesList: [tKey: TalentSheetElementKey, tText: string, asc: number][] = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\r\n  const ascension = data.get(input.asc).value\r\n  const constellation = data.get(input.constellation).value\r\n\r\n  const theme = useTheme();\r\n  const grlg = useMediaQuery(theme.breakpoints.up('lg'));\r\n  const constellationCards = useMemo(() => range(1, 6).map(i =>\r\n    <SkillDisplayCard\r\n      talentKey={`constellation${i}` as TalentSheetElementKey}\r\n      subtitle={`Constellation Lv. ${i}`}\r\n      onClickTitle={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}\r\n    />), [constellation, characterDispatch])\r\n  return <>\r\n    <ReactionDisplay />\r\n    <Grid container spacing={1}>\r\n      {/* constellations for 4column */}\r\n      {grlg && <Grid item xs={12} md={12} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\r\n        <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\r\n        {constellationCards.map((c, i) => <Box key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} >{c}</Box>)}\r\n      </Grid>}\r\n      <Grid item xs={12} md={12} lg={9} container spacing={1} >\r\n        {/* auto, skill, burst */}\r\n        {skillBurstList.map(([tKey, tText]) =>\r\n          <Grid item key={tKey} {...talentSpacing} >\r\n            <SkillDisplayCard\r\n              talentKey={tKey}\r\n              subtitle={tText}\r\n            />\r\n          </Grid>)}\r\n        {!!characterSheet.getTalentOfKey(\"sprint\",) && <Grid item {...talentSpacing} >\r\n          <SkillDisplayCard\r\n            talentKey=\"sprint\"\r\n            subtitle=\"Alternative Sprint\"\r\n          />\r\n        </Grid>}\r\n        {!!characterSheet.getTalentOfKey(\"passive\") && <Grid item {...talentSpacing} >\r\n          <SkillDisplayCard\r\n            talentKey=\"passive\"\r\n            subtitle=\"Passive\"\r\n          />\r\n        </Grid>}\r\n        {/* passives */}\r\n        {passivesList.map(([tKey, tText, asc]) => {\r\n          let enabled = ascension >= asc\r\n          if (!characterSheet.getTalentOfKey(tKey)) return null\r\n          return <Grid item key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} {...talentSpacing} >\r\n            <SkillDisplayCard\r\n              talentKey={tKey}\r\n              subtitle={tText}\r\n            />\r\n          </Grid>\r\n        })}\r\n      </Grid>\r\n      {/* constellations for < 4 columns */}\r\n      {!grlg && <Grid item xs={12} md={12} lg={3} container spacing={1} >\r\n        <Grid item xs={12}>\r\n          <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\r\n        </Grid>\r\n        {constellationCards.map((c, i) => <Grid item key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} {...talentSpacing} >{c}</Grid>)}\r\n      </Grid>}\r\n    </Grid>\r\n  </>\r\n}\r\nfunction ReactionDisplay() {\r\n  const { data } = useContext(DataContext)\r\n  const reaction = data.getDisplay().reaction as { [key: string]: NodeDisplay }\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Grid container spacing={1}>\r\n        {Object.entries(reaction).map(([key, node]) => {\r\n          return <Grid item key={key}>\r\n            <CardDark><CardContent sx={{ p: 1, \"&:last-child\": { pb: 1 } }}>\r\n              <NodeFieldDisplay node={node} />\r\n            </CardContent></CardDark>\r\n          </Grid>\r\n        })}\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n\r\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\r\ntype SkillDisplayCardProps = {\r\n  talentKey: TalentSheetElementKey,\r\n  subtitle: string,\r\n  onClickTitle?: (any) => any\r\n}\r\nfunction SkillDisplayCard({ talentKey, subtitle, onClickTitle }: SkillDisplayCardProps) {\r\n  const { character: { talent }, characterSheet, characterDispatch } = useContext(CharacterContext)\r\n  const { data } = useContext(DataContext)\r\n\r\n  const actionWrapeprFunc = useCallback(\r\n    children => <CardActionArea onClick={onClickTitle}>{children}</CardActionArea>,\r\n    [onClickTitle],\r\n  )\r\n\r\n  const setTalentLevel = useCallback((tKey: TalentSheetElementKey, newTalentLevelKey: number) =>\r\n    characterDispatch({ talent: { ...talent, [tKey]: newTalentLevelKey } }), [talent, characterDispatch])\r\n\r\n  let header: Displayable | null = null\r\n\r\n  if (talentKey in talent) {\r\n    const levelBoost = data.get(input.bonus[talentKey] as NumNode).value\r\n    const level = data.get(input.total[talentKey]).value\r\n    const asc = data.get(input.asc).value\r\n\r\n    header = <DropdownButton fullWidth title={`Talent Lv. ${level}`} color={levelBoost ? \"info\" : \"primary\"} sx={{ borderRadius: 0 }}>\r\n      {range(1, talentLimits[asc]).map(i =>\r\n        <MenuItem key={i} selected={talent[talentKey] === (i)} disabled={talent[talentKey] === (i)} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost}</MenuItem>)}\r\n    </DropdownButton>\r\n  }\r\n  const talentSheet = characterSheet.getTalentOfKey(talentKey)\r\n\r\n  // Hide header if the header matches the current talent\r\n  const hideHeader = (section: DocumentSection): boolean => {\r\n    let headerAction = section.header?.action\r\n    if (headerAction && (typeof headerAction !== \"string\")) {\r\n      const key: string = headerAction.props.children.props.key18\r\n      return key.includes(talentKey)\r\n    }\r\n    return false\r\n  }\r\n\r\n  return <CardLight sx={{ height: \"100%\" }}>\r\n    {header}\r\n    <CardContent>\r\n      <ConditionalWrapper condition={!!onClickTitle} wrapper={actionWrapeprFunc} >\r\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\r\n          <Grid item>\r\n            <Box component=\"img\" src={talentSheet?.img} sx={{ width: 60, height: \"auto\" }} />\r\n          </Grid>\r\n          <Grid item flexGrow={1} sx={{ pl: 1 }}>\r\n            <Typography variant=\"h6\">{talentSheet?.name}</Typography>\r\n            <Typography variant=\"subtitle1\">{subtitle}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </ConditionalWrapper>\r\n      {/* Display document sections */}\r\n      {talentSheet?.sections ? <DocumentDisplay sections={talentSheet.sections} hideDesc hideHeader={hideHeader} /> : null}\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\n","import { PersonAdd } from \"@mui/icons-material\";\r\nimport { CardContent, CardHeader, Divider, Grid, Skeleton, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CardLight from \"../../../Components/Card/CardLight\";\r\nimport CharacterCard from \"../../../Components/Character/CharacterCard\";\r\nimport ThumbSide from \"../../../Components/Character/ThumbSide\";\r\nimport ColorText from \"../../../Components/ColoredText\";\r\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\r\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\r\nimport GeneralAutocomplete, { GeneralAutocompleteOption } from \"../../../Components/GeneralAutocomplete\";\r\nimport InfoTooltip from \"../../../Components/InfoTooltip\";\r\nimport { CharacterContext, CharacterContextObj } from \"../../../Context/CharacterContext\";\r\nimport { DataContext, dataContextObj } from \"../../../Context/DataContext\";\r\nimport { ArtifactSheet } from \"../../../Data/Artifacts/ArtifactSheet\";\r\nimport CharacterSheet from \"../../../Data/Characters/CharacterSheet\";\r\nimport { resonanceSheets } from \"../../../Data/Resonance\";\r\nimport { initCharMeta } from \"../../../Database/Data/StateData\";\r\nimport { DatabaseContext } from \"../../../Database/Database\";\r\nimport { NodeDisplay } from \"../../../Formula/uiData\";\r\nimport useCharSelectionCallback from \"../../../ReactHooks/useCharSelectionCallback\";\r\nimport useGender from \"../../../ReactHooks/useGender\";\r\nimport usePromise from \"../../../ReactHooks/usePromise\";\r\nimport { CharacterKey, charKeyToCharName } from \"../../../Types/consts\";\r\nimport { objPathValue, range } from \"../../../Util/Util\";\r\n\r\nexport default function TabTeambuffs() {\r\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1} alignItems=\"stretch\">\r\n    <Grid container spacing={1}>\r\n      <Grid item xs={12} md={6} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n        <TeamBuffDisplay />\r\n        <ResonanceDisplay />\r\n      </Grid>\r\n      {range(0, 2).map(i => <Grid item xs={12} md={6} lg={3} key={i}>\r\n        <TeammateDisplay index={i} />\r\n      </Grid>)}\r\n    </Grid>\r\n  </Box>\r\n}\r\nexport function TeamBuffDisplay() {\r\n  const { data, oldData } = useContext(DataContext)\r\n  const teamBuffs = data.getTeamBuff()\r\n  const nodes: Array<[string[], NodeDisplay<number>]> = []\r\n  Object.entries(teamBuffs.total ?? {}).forEach(([key, node]) =>\r\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"total\", key], node]))\r\n  Object.entries(teamBuffs.premod ?? {}).forEach(([key, node]) =>\r\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"premod\", key], node]))\r\n  Object.entries(teamBuffs.enemy ?? {}).forEach(([key, node]) =>\r\n    !node.isEmpty && typeof node.value === \"number\" && node.value !== 0 && nodes.push([[\"enemy\", key], node as NodeDisplay<number>]))\r\n  if (!nodes.length) return null\r\n  return <CardLight>\r\n    <CardContent>\r\n      <Typography>Team Buffs</Typography>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardContent>\r\n      <Grid container>\r\n        {nodes.map(([path, n], i) => n && <Grid item xs={12} key={(n.info.key ?? \"\") + i} >\r\n          <NodeFieldDisplay node={n} oldValue={objPathValue(oldData?.getTeamBuff(), path)?.value} />\r\n        </Grid>)}\r\n      </Grid>\r\n    </CardContent>\r\n  </CardLight>\r\n}\r\nfunction ResonanceDisplay() {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { data } = useContext(DataContext)\r\n  const { character: { team } } = useContext(CharacterContext)\r\n  const teamCount = team.reduce((a, t) => a + (t ? 1 : 0), 1)\r\n  return <>\r\n    <CardLight>\r\n      <CardHeader title={<span>{t<string>(\"tabTeambuff.team_reso\")} <strong><ColorText color={teamCount >= 4 ? \"success\" : \"warning\"}>({teamCount}/4)</ColorText></strong> <InfoTooltip title={<Typography>{t`tabTeambuff.resonance_tip`}</Typography>} /></span>}\r\n        titleTypographyProps={{ variant: \"subtitle2\" }} />\r\n    </CardLight>\r\n    {resonanceSheets.map((res, i) => {\r\n      const icon = <InfoTooltip title={<Typography>{res.desc}</Typography>} />\r\n      const title = <span>{res.name} {icon}</span>\r\n      return <CardLight key={i} sx={{ opacity: res.canShow(data) ? 1 : 0.5, }}>\r\n        <CardHeader title={title} action={res.icon} titleTypographyProps={{ variant: \"subtitle2\" }} />\r\n        {res.canShow(data) && <Divider />}\r\n        {res.canShow(data) && <CardContent>\r\n          <DocumentDisplay sections={res.sections} teamBuffOnly hideDesc />\r\n        </CardContent>}\r\n      </CardLight>\r\n    })}\r\n  </>\r\n}\r\nfunction TeammateDisplay({ index }: { index: number }) {\r\n  const { teamData } = useContext(DataContext)\r\n  const { t } = useTranslation(\"page_character\")\r\n  const { character: active, character: { key: activeCharacterKey }, characterDispatch } = useContext(CharacterContext)\r\n  const teamMateKey = active.team[index]\r\n  const team = useMemo(() => [activeCharacterKey, ...active.team].filter((t, i) => (i - 1) !== index), [active.team, activeCharacterKey, index])\r\n  const onClickHandler = useCharSelectionCallback()\r\n  const setTeammate = useCallback((charKey: CharacterKey | \"\") => characterDispatch({ type: \"team\", index, charKey }), [index, characterDispatch])\r\n\r\n  const dataBundle = teamData[teamMateKey]\r\n  const teammateCharacterContext: CharacterContextObj | undefined = useMemo(() => dataBundle && {\r\n    character: { ...dataBundle.character, conditional: active.teamConditional[teamMateKey] ?? {} },\r\n    characterSheet: dataBundle.characterSheet,\r\n    characterDispatch: (state) => {\r\n      if (!teamMateKey) return\r\n      if (!(\"conditional\" in state)) return\r\n      const { conditional } = state\r\n      characterDispatch({ type: \"teamConditional\", teamMateKey: teamMateKey, conditional })\r\n    }\r\n  }, [active, teamMateKey, dataBundle, characterDispatch])\r\n  const teamMateDataContext: dataContextObj | undefined = useMemo(() => dataBundle && {\r\n    data: dataBundle.target,\r\n    teamData: teamData,\r\n  }, [dataBundle, teamData])\r\n  return <CardLight>\r\n    <TeammateAutocomplete characterKey={teamMateKey} team={team}\r\n      setChar={setTeammate}\r\n      label={t(\"teammate\", { count: index + 1 })}\r\n    />\r\n    {teamMateKey && teammateCharacterContext && <CharacterContext.Provider value={teammateCharacterContext}>\r\n      {teamMateDataContext && <DataContext.Provider value={teamMateDataContext}>\r\n        <CharacterCard characterKey={teamMateKey}\r\n          onClickHeader={onClickHandler}\r\n          // Need to wrap these elements with the providers for them to use the correct functions.\r\n          artifactChildren={<CharacterContext.Provider value={teammateCharacterContext}>\r\n            <DataContext.Provider value={teamMateDataContext}>\r\n              <CharArtifactCondDisplay />\r\n            </DataContext.Provider>\r\n          </CharacterContext.Provider>}\r\n          weaponChildren={<CharacterContext.Provider value={teammateCharacterContext}>\r\n            <DataContext.Provider value={teamMateDataContext}>\r\n              <CharWeaponCondDisplay />\r\n            </DataContext.Provider>\r\n          </CharacterContext.Provider>}\r\n          characterChildren={<CharacterContext.Provider value={teammateCharacterContext}>\r\n            <DataContext.Provider value={teamMateDataContext}>\r\n              <CharTalentCondDisplay />\r\n            </DataContext.Provider>\r\n          </CharacterContext.Provider>}\r\n          isTeammateCard\r\n        />\r\n      </DataContext.Provider>}\r\n    </CharacterContext.Provider>}\r\n  </CardLight>\r\n}\r\nfunction CharArtifactCondDisplay() {\r\n  const { data, } = useContext(DataContext)\r\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\r\n  const sections = useMemo(() => artifactSheets &&\r\n    Object.entries(ArtifactSheet.setEffects(artifactSheets, data))\r\n      .flatMap(([setKey, setNums]) =>\r\n        setNums.flatMap(sn => artifactSheets(setKey)!.setEffectDocument(sn)!))\r\n    , [artifactSheets, data])\r\n  if (!sections) return null\r\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\r\n}\r\nfunction CharWeaponCondDisplay() {\r\n  const { character: { key: charKey } } = useContext(CharacterContext)\r\n  const { teamData } = useContext(DataContext)\r\n  const weaponSheet = teamData[charKey]!.weaponSheet\r\n  if (!weaponSheet.document) return null\r\n  return <DocumentDisplay sections={weaponSheet.document} teamBuffOnly={true} />\r\n}\r\nfunction CharTalentCondDisplay() {\r\n  const { character: { key: charKey } } = useContext(CharacterContext)\r\n  const { teamData } = useContext(DataContext)\r\n  const characterSheet = teamData[charKey]!.characterSheet\r\n  const sections = Object.values(characterSheet.talent).flatMap(sts => sts.sections)\r\n  if (!sections) return null\r\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\r\n}\r\n\r\nfunction TeammateAutocomplete({ characterKey, team, label, setChar }: { characterKey, team: Array<CharacterKey | \"\">, label: string, setChar: (k: CharacterKey | \"\") => void }) {\r\n  const { t } = useTranslation([\"charNames_gen\", \"page_character\", \"sheet_gen\"])\r\n  const { database } = useContext(DatabaseContext)\r\n  const gender = useGender(database)\r\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\r\n  const toText = useCallback((key: CharacterKey): string => key.startsWith(\"Traveler\") ? `${t(`charNames_gen:${charKeyToCharName(key, gender)}`)} (${t(`sheet_gen:element.${characterSheets?.(key, gender)?.elementKey}`)})` : t(`charNames_gen:${key}`), [characterSheets, t, gender])\r\n  const toImg = useCallback((key: CharacterKey | \"\") => key === \"\" ? <PersonAdd /> : characterSheets ? <ThumbSide src={characterSheets(key, gender)?.thumbImgSide} sx={{ pr: 1 }} /> : <></>, [characterSheets, gender])//\r\n  const isFavorite = useCallback((key: CharacterKey) => database.states.getWithInit(`charMeta_${key}`, initCharMeta).favorite, [database])\r\n  const onDisable = useCallback((key: CharacterKey | \"\") => team.filter(t => t && t !== characterKey).includes(key) || (key.startsWith(\"Traveler\") && team.some((t, i) => t.startsWith(\"Traveler\"))), [team, characterKey])\r\n  const values: GeneralAutocompleteOption<CharacterKey | \"\">[] = useMemo(() => [{\r\n    key: \"\",\r\n    label: t`page_character:none`,\r\n  },\r\n  ...database.chars.keys\r\n    .map(v => ({ key: v, label: toText(v), favorite: isFavorite(v) }))\r\n    .sort((a, b) => {\r\n      if (a.favorite && !b.favorite) return -1\r\n      if (!a.favorite && b.favorite) return 1\r\n      return a.label.localeCompare(b.label)\r\n    })\r\n  ], [t, toText, isFavorite, database])\r\n  return <Suspense fallback={<Skeleton variant=\"text\" width={100} />}><GeneralAutocomplete size=\"small\" label={label} options={values} valueKey={characterKey} clearKey=\"\" onChange={setChar} disable={onDisable} toImg={toImg} /></Suspense>\r\n}\r\n","import { faStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { CopyAll, DeleteForever, Info, Refresh } from \"@mui/icons-material\";\r\nimport { Box, Button, ButtonGroup, CardHeader, Divider, Grid, ListItem, MenuItem, Skeleton, Stack, ToggleButton, Typography } from \"@mui/material\";\r\nimport { WeaponTypeKey } from \"pipeline\";\r\nimport { useCallback, useContext, useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ArtifactSetSingleAutocomplete } from \"../../../../Components/Artifact/ArtifactAutocomplete\";\r\nimport ArtifactSetTooltip from \"../../../../Components/Artifact/ArtifactSetTooltip\";\r\nimport SetEffectDisplay from \"../../../../Components/Artifact/SetEffectDisplay\";\r\nimport { slotIconSVG } from \"../../../../Components/Artifact/SlotNameWIthIcon\";\r\nimport BootstrapTooltip from \"../../../../Components/BootstrapTooltip\";\r\nimport CardDark from \"../../../../Components/Card/CardDark\";\r\nimport CardLight from \"../../../../Components/Card/CardLight\";\r\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\r\nimport ColorText from \"../../../../Components/ColoredText\";\r\nimport CustomNumberInput from \"../../../../Components/CustomNumberInput\";\r\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\r\nimport DropdownButton from \"../../../../Components/DropdownMenu/DropdownButton\";\r\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../../../Components/FieldDisplay\";\r\nimport FontAwesomeSvgIcon from \"../../../../Components/FontAwesomeSvgIcon\";\r\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\r\nimport LevelSelect from \"../../../../Components/LevelSelect\";\r\nimport RefinementDropdown from \"../../../../Components/RefinementDropdown\";\r\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\";\r\nimport { StatColoredWithUnit, StatWithUnit } from \"../../../../Components/StatDisplay\";\r\nimport StatIcon from \"../../../../Components/StatIcon\";\r\nimport WeaponSelectionModal from \"../../../../Components/Weapon/WeaponSelectionModal\";\r\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\r\nimport { DataContext, dataContextObj } from \"../../../../Context/DataContext\";\r\nimport Artifact, { maxArtifactLevel } from \"../../../../Data/Artifacts/Artifact\";\r\nimport { ArtifactSheet } from \"../../../../Data/Artifacts/ArtifactSheet\";\r\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\";\r\nimport { initCharTC } from \"../../../../Database/Data/CharacterTCData\";\r\nimport { DatabaseContext } from \"../../../../Database/Database\";\r\nimport { uiInput as input } from \"../../../../Formula\";\r\nimport { computeUIData, dataObjForWeapon } from \"../../../../Formula/api\";\r\nimport { constant, percent } from \"../../../../Formula/utils\";\r\nimport KeyMap, { cacheValueString } from \"../../../../KeyMap\";\r\nimport useBoolState from \"../../../../ReactHooks/useBoolState\";\r\nimport usePromise from \"../../../../ReactHooks/usePromise\";\r\nimport useTeamData from \"../../../../ReactHooks/useTeamData\";\r\nimport { MainStatKey, SubstatKey } from \"../../../../Types/artifact\";\r\nimport { ICharTC, ICharTCArtifactSlot } from \"../../../../Types/character\";\r\nimport { allSlotKeys, ArtifactRarity, ArtifactSetKey, SetNum, SlotKey, SubstatType, substatType } from \"../../../../Types/consts\";\r\nimport { ICachedWeapon } from \"../../../../Types/weapon\";\r\nimport { deepClone, objectMap } from \"../../../../Util/Util\";\r\nimport { defaultInitialWeaponKey } from \"../../../../Util/WeaponUtil\";\r\nimport useCharTC from \"./useCharTC\";\r\n\r\ntype ISet = Partial<Record<ArtifactSetKey, 1 | 2 | 4>>\r\nexport default function TabTheorycraft() {\r\n  const { database } = useContext(DatabaseContext)\r\n  const { data: oldData } = useContext(DataContext)\r\n  const { character, character: { key: characterKey, compareData }, characterSheet, characterDispatch } = useContext(CharacterContext)\r\n  const data = useCharTC(characterKey, defaultInitialWeaponKey(characterSheet.weaponTypeKey))\r\n  const setData = useCallback((data: ICharTC) => database.charTCs.set(characterKey, data), [characterKey, database])\r\n  const resetData = useCallback(() => {\r\n    setData(initCharTC(defaultInitialWeaponKey(characterSheet.weaponTypeKey)))\r\n  }, [setData, characterSheet])\r\n  const setWeapon = useCallback(\r\n    (action: Partial<ICharTC[\"weapon\"]>) => {\r\n      setData({ ...data, weapon: { ...data.weapon, ...action } })\r\n    },\r\n    [setData, data],\r\n  )\r\n  const copyFromEquipped = useCallback(\r\n    () => {\r\n      const eWeapon = database.weapons.get(character.equippedWeapon)!\r\n      const newData = initCharTC(eWeapon.key)\r\n      newData.artifact.substats.type = data.artifact.substats.type\r\n\r\n      newData.weapon.level = eWeapon.level\r\n      newData.weapon.ascension = eWeapon.ascension\r\n      newData.weapon.refinement = eWeapon.refinement\r\n\r\n      const sets = {}\r\n      Object.values(character.equippedArtifacts).forEach(a => {\r\n        const art = database.arts.get(a)\r\n        if (!art) return\r\n        const { slotKey, setKey, substats, mainStatKey, level, rarity } = art\r\n        newData.artifact.slots[slotKey].level = level\r\n        newData.artifact.slots[slotKey].statKey = mainStatKey\r\n        newData.artifact.slots[slotKey].rarity = rarity\r\n        sets[setKey] = (sets[setKey] ?? 0) + 1\r\n        substats.forEach(substat => {\r\n          if (substat.key) newData.artifact.substats.stats[substat.key] = (newData.artifact.substats.stats[substat.key] ?? 0) + substat.accurateValue\r\n        })\r\n      })\r\n      newData.artifact.sets = Object.fromEntries(Object.entries(sets).map(([key, value]) => [key,\r\n        value === 3 ? 2 :\r\n          value === 5 ? 4 :\r\n            value === 1 && !(key as string).startsWith(\"PrayersFor\") ? 0 : value\r\n      ]).filter(([key, value]) => value))\r\n\r\n      setData(newData)\r\n    },\r\n    [database, data, character.equippedArtifacts, character.equippedWeapon, setData],\r\n  )\r\n\r\n  const weapon: ICachedWeapon = useMemo(() => {\r\n    return {\r\n      ...data.weapon,\r\n      location: \"\",\r\n      lock: false,\r\n      id: \"\"\r\n    }\r\n  }, [data])\r\n  const setArtifact = useCallback((artifact: ICharTC[\"artifact\"]) => {\r\n    const data_ = deepClone(data)\r\n    data_.artifact = artifact\r\n    setData(data_)\r\n  }, [data, setData])\r\n\r\n  const setSubstatsType = useCallback((t: SubstatType) => {\r\n    const data_ = deepClone(data)\r\n    data_.artifact.substats.type = t\r\n    setData(data_)\r\n  }, [data, setData])\r\n\r\n  const setSubstats = useCallback((setSubstats: Record<SubstatKey, number>) => {\r\n    const data_ = deepClone(data)\r\n    data_.artifact.substats.stats = setSubstats\r\n    setData(data_)\r\n  }, [data, setData])\r\n\r\n  const overriderArtData = useMemo(() => {\r\n    const stats = { ...data.artifact.substats.stats }\r\n    Object.values(data.artifact.slots).forEach(({ statKey, rarity, level }) =>\r\n      stats[statKey] = (stats[statKey] ?? 0) + Artifact.mainStatValue(statKey, rarity, level))\r\n    return {\r\n      art: objectMap(stats, (v, k) => k.endsWith(\"_\") ? percent(v / 100) : constant(v)),\r\n      artSet: objectMap(data.artifact.sets, v => constant(v)),\r\n    }\r\n  }, [data])\r\n\r\n  const overrideWeapon: ICachedWeapon = useMemo(() => ({\r\n    id: \"\",\r\n    location: \"\",\r\n    key: data.weapon.key,\r\n    level: data.weapon.level,\r\n    ascension: data.weapon.ascension,\r\n    refinement: data.weapon.refinement,\r\n    lock: false\r\n  }), [data])\r\n  const teamData = useTeamData(characterKey, 0, overriderArtData, overrideWeapon)\r\n\r\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\r\n\r\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\r\n    if (!teamData || !charUIData) return undefined\r\n    return {\r\n      data: charUIData,\r\n      teamData,\r\n      oldData: compareData ? oldData : undefined,\r\n    }\r\n  }, [charUIData, teamData, compareData, oldData])\r\n\r\n  return <Stack spacing={1}>\r\n    {dataContextValue ? <DataContext.Provider value={dataContextValue}>\r\n      <Box>\r\n        <CardLight>\r\n          <Box sx={{ display: \"flex\", gap: 1, p: 1 }}>\r\n            <Box sx={{ flexGrow: 1, display: \"flex\", gap: 1 }}>\r\n              <Button color=\"info\" onClick={copyFromEquipped} startIcon={<CopyAll />}>Copy from equipped</Button>\r\n              <Button color=\"error\" onClick={resetData} startIcon={<Refresh />}>Reset</Button>\r\n            </Box>\r\n            <SolidToggleButtonGroup exclusive value={compareData} onChange={(e, v) => characterDispatch({ compareData: v })} size=\"small\">\r\n              <ToggleButton value={false} disabled={!compareData}>Show TC stats</ToggleButton>\r\n              <ToggleButton value={true} disabled={compareData}>Compare vs. equipped</ToggleButton>\r\n            </SolidToggleButtonGroup>\r\n          </Box>\r\n        </CardLight>\r\n      </Box>\r\n      <Box>\r\n        <Grid container spacing={1} sx={{ justifyContent: \"center\" }} columns={4}>\r\n          <Grid item sx={{ flexGrow: -1 }}  >\r\n            <WeaponEditorCard weapon={weapon} setWeapon={setWeapon} weaponTypeKey={characterSheet.weaponTypeKey} />\r\n          </Grid>\r\n          <Grid item sx={{ flexGrow: 1 }}  >\r\n            <ArtifactMainLevelCard artifactData={data.artifact} setArtifactData={setArtifact} />\r\n          </Grid>\r\n          <Grid item sx={{ flexGrow: 1 }}  >\r\n            <ArtifactSubCard substats={data.artifact.substats.stats} setSubstats={setSubstats} substatsType={data.artifact.substats.type} setSubstatsType={setSubstatsType} mainStatKeys={Object.values(data.artifact.slots).map(s => s.statKey)} />\r\n          </Grid>\r\n        </Grid >\r\n      </Box>\r\n      <CardLight sx={{ flexGrow: 1, p: 1 }}>\r\n        <StatDisplayComponent />\r\n      </CardLight>\r\n    </DataContext.Provider> : <Skeleton variant='rectangular' width='100%' height={1000} />}\r\n  </Stack>\r\n}\r\n\r\nfunction WeaponEditorCard({ weapon, setWeapon, weaponTypeKey }: { weapon: ICachedWeapon, weaponTypeKey: WeaponTypeKey, setWeapon: (action: Partial<ICharTC[\"weapon\"]>) => void }) {\r\n  const { key, level = 0, refinement = 1, ascension = 0 } = weapon\r\n  const weaponSheet = usePromise(() => WeaponSheet.get(key), [key])\r\n  const [show, onShow, onHide] = useBoolState()\r\n  const { data } = useContext(DataContext)\r\n  const weaponUIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n  return <CardLight sx={{ p: 1, height: \"100%\" }} >\r\n    <WeaponSelectionModal ascension={ascension} show={show} onHide={onHide} onSelect={k => setWeapon({ key: k })} weaponTypeFilter={weaponTypeKey} />\r\n    <Box display=\"flex\" flexDirection=\"column\" gap={1}>\r\n      <Box display=\"flex\" gap={1}>\r\n        {weaponSheet && <Box\r\n          className={`grad-${weaponSheet.rarity}star`}\r\n          component=\"img\"\r\n          src={weaponSheet.getImg(weapon.ascension)}\r\n          sx={{ flexshrink: 1, flexBasis: 0, maxWidth: \"30%\", borderRadius: 1 }}\r\n        />}\r\n        <Stack spacing={1} flexGrow={1}>\r\n          <Button fullWidth color=\"info\" sx={{ flexGrow: 1 }} onClick={onShow}><Box sx={{ maxWidth: \"10em\" }}>{weaponSheet?.name}</Box></Button>\r\n          {weaponSheet?.hasRefinement && <RefinementDropdown refinement={refinement} setRefinement={r => setWeapon({ refinement: r })} />}\r\n        </Stack>\r\n      </Box>\r\n      {weaponSheet && <LevelSelect level={level} ascension={ascension} setBoth={setWeapon} useLow={!weaponSheet.hasRefinement} />}\r\n      <CardDark >\r\n        <CardHeader title={\"Main Stats\"} titleTypographyProps={{ variant: \"subtitle2\" }} />\r\n        <Divider />\r\n        {weaponUIData && <FieldDisplayList>\r\n          {[input.weapon.main, input.weapon.sub, input.weapon.sub2].map((node, i) => {\r\n            const n = weaponUIData.get(node)\r\n            if (n.isEmpty || !n.value) return null\r\n            return <NodeFieldDisplay key={n.info.key} node={n} component={ListItem} />\r\n          })}\r\n        </FieldDisplayList>}\r\n      </CardDark>\r\n      {data && weaponSheet?.document && <DocumentDisplay sections={weaponSheet.document} />}\r\n    </Box>\r\n  </CardLight >\r\n}\r\n\r\nfunction ArtifactMainLevelCard({ artifactData, setArtifactData }:\r\n  { artifactData: ICharTC[\"artifact\"], setArtifactData: (a: ICharTC[\"artifact\"]) => void }) {\r\n  const setSlot = useCallback((slotKey: SlotKey) => (slot: ICharTCArtifactSlot) => {\r\n    const artifactData_ = deepClone(artifactData)\r\n    artifactData_.slots[slotKey] = slot\r\n    setArtifactData(artifactData_)\r\n  }, [artifactData, setArtifactData])\r\n\r\n  const setArtSet = useCallback((artSet: ISet) => {\r\n    const artifactData_ = deepClone(artifactData)\r\n    artifactData_.sets = artSet\r\n    setArtifactData(artifactData_)\r\n  }, [artifactData, setArtifactData])\r\n\r\n  return <Stack spacing={1} sx={{ height: \"100%\" }}>\r\n    <CardLight sx={{ p: 1 }}>\r\n      <Stack spacing={1}>\r\n        {allSlotKeys.map(s => <ArtifactMainLevelSlot key={s} slotKey={s} slot={artifactData.slots[s]} setSlot={setSlot(s)} />)}\r\n      </Stack>\r\n    </CardLight>\r\n    <ArtifactSetsEditor artSet={artifactData.sets} setArtSet={setArtSet} />\r\n  </Stack>\r\n}\r\nfunction ArtifactMainLevelSlot({ slotKey, slot, setSlot: setSlotProp }: { slotKey: SlotKey, slot: ICharTCArtifactSlot, setSlot: (s: ICharTCArtifactSlot) => void }) {\r\n  const { level, statKey, rarity } = slot\r\n  const keys = Artifact.slotMainStats(slotKey)\r\n  const setSlot = useCallback((action: Partial<ICharTCArtifactSlot>) => {\r\n    setSlotProp({ ...slot, ...action })\r\n  }, [slot, setSlotProp])\r\n  const setRarity = useCallback(\r\n    (r: ArtifactRarity) => {\r\n      const mLvl = maxArtifactLevel[r] ?? 0\r\n      if (level > mLvl) setSlot({ rarity: r, level: mLvl })\r\n      else setSlot({ rarity: r })\r\n    }, [level, setSlot])\r\n\r\n  return <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\r\n    <FontAwesomeSvgIcon icon={slotIconSVG[slotKey]} />\r\n    <CardDark sx={{ height: \"100%\", minWidth: \"5em\", flexGrow: 1, display: \"flex\" }}>\r\n      {keys.length === 1 ?\r\n        <Box p={1} justifyContent=\"center\" alignItems=\"center\" width=\"100%\" display=\"flex\" gap={1}>{StatIcon[keys[0]]}{KeyMap.getStr(keys[0])}</Box> :\r\n        <DropdownButton sx={{ px: 0 }} fullWidth title={<StatWithUnit statKey={statKey} />} color={KeyMap.getVariant(statKey) ?? \"success\"}>\r\n          {keys.map(msk =>\r\n            <MenuItem key={msk} disabled={statKey === msk} onClick={() => setSlot({ statKey: msk })}>\r\n              <StatColoredWithUnit statKey={msk} />\r\n            </MenuItem>)}\r\n        </DropdownButton>}\r\n    </CardDark>\r\n    <DropdownButton sx={{ px: 0 }} title={<span>{rarity} <FontAwesomeIcon icon={faStar} /></span>} >\r\n      {[5, 4, 3].map(r =>\r\n        <MenuItem key={r} disabled={rarity === r} onClick={() => setRarity(r as ArtifactRarity)}>\r\n          <span>{r} <FontAwesomeIcon icon={faStar} /></span>\r\n        </MenuItem>)}\r\n    </DropdownButton>\r\n    <CustomNumberInput startAdornment=\"+\" value={level} color={Artifact.levelVariant(level)} onChange={l => l !== undefined && setSlot({ level: l })} sx={{ borderRadius: 1, pl: 1, my: 0, height: \"100%\" }} inputProps={{ sx: { pl: 0.5, width: \"2em\" }, max: 20, min: 0 }} />\r\n    <CardDark sx={{ height: \"100%\", minWidth: \"4em\" }}>\r\n      <Box p={1} textAlign=\"center\">{`${cacheValueString(Artifact.mainStatValue(statKey, rarity, level), KeyMap.unit(statKey))}${KeyMap.unit(statKey)}`}</Box>\r\n    </CardDark>\r\n  </Box>\r\n}\r\n\r\nfunction ArtifactSetsEditor({ artSet, setArtSet }: { artSet: ISet, setArtSet(artSet: ISet) }) {\r\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\r\n  const setSet = useCallback((setKey: ArtifactSetKey | \"\") => {\r\n    if (!setKey || !artifactSheets) return\r\n    setArtSet({ ...artSet, [setKey]: parseInt(Object.keys(artifactSheets(setKey).setEffects)[0]) })\r\n  }, [artSet, setArtSet, artifactSheets])\r\n\r\n  const setValue = useCallback((setKey: ArtifactSetKey) => (value: 1 | 2 | 4) => setArtSet({ ...artSet, [setKey]: value }), [artSet, setArtSet])\r\n  const deleteValue = useCallback((setKey: ArtifactSetKey) => () => {\r\n    const { [setKey]: _, ...rest } = artSet\r\n    setArtSet({ ...rest })\r\n  }, [artSet, setArtSet])\r\n\r\n  const remaining = 5 - Object.values(artSet).reduce((a, b) => a + b, 0)\r\n\r\n  return <Stack spacing={1} sx={{ flexGrow: 1 }}>\r\n    {Object.entries(artSet).map(([setKey, value]) => <ArtifactSetEditor key={setKey} setKey={setKey} value={value} setValue={setValue(setKey)} deleteValue={deleteValue(setKey)} remaining={remaining} />)}\r\n    <CardLight sx={{ flexGrow: 1 }}>\r\n      <ArtifactSetSingleAutocomplete\r\n        showDefault\r\n        disableClearable\r\n        size=\"small\"\r\n        artSetKey={\"\"}\r\n        setArtSetKey={setSet}\r\n        sx={(theme) => ({\r\n          flexGrow: 1,\r\n          \".MuiFilledInput-root\": {\r\n            borderBottomRightRadius: theme.shape.borderRadius,\r\n            borderBottomLeftRadius: theme.shape.borderRadius\r\n          }\r\n        })}\r\n        defaultText={\"New Artifact Set\"}\r\n        disable={(setKey) => Object.keys(artSet).includes(setKey) || !artifactSheets?.(setKey) || Object.keys(artifactSheets(setKey).setEffects).every(n => parseInt(n) > remaining)}\r\n      />\r\n    </CardLight>\r\n\r\n  </Stack>\r\n}\r\nfunction ArtifactSetEditor({ setKey, value, setValue, deleteValue, remaining }: { setKey: ArtifactSetKey, value: 1 | 2 | 4, setValue: (v: 1 | 2 | 4) => void, deleteValue: () => void, remaining: number }) {\r\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\r\n\r\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\r\n  const set4CondNums = useMemo(() => {\r\n    if (value < 4 || !artifactSheet) return []\r\n    return Object.keys(artifactSheet.setEffects).filter(setNumKey => artifactSheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\r\n  }, [artifactSheet, value])\r\n\r\n  if (!artifactSheet) return null\r\n  return <CardLight>\r\n    <Box display=\"flex\">\r\n      <ArtifactSetTooltip artifactSheet={artifactSheet} numInSet={value}>\r\n        <Box flexGrow={1} p={1} display=\"flex\" gap={1} alignItems=\"center\">\r\n          <ImgIcon size={2} sx={{ m: -1 }} src={artifactSheet.defIconSrc} />\r\n          <Box >{artifactSheet.setName}</Box>\r\n          <Info />\r\n        </Box>\r\n      </ArtifactSetTooltip>\r\n      <ButtonGroup>\r\n        <DropdownButton size=\"small\" title={<Box whiteSpace=\"nowrap\">{value}-set</Box>}>\r\n          {Object.keys(artifactSheet.setEffects).map(setKey => parseInt(setKey)).map(setKey =>\r\n            <MenuItem key={setKey} disabled={value === setKey || setKey > (remaining + value)} onClick={() => setValue(setKey as 1 | 2 | 4)}>{setKey}-set</MenuItem>\r\n          )}\r\n        </DropdownButton>\r\n        <Button color=\"error\" size=\"small\" onClick={deleteValue}>\r\n          <DeleteForever />\r\n        </Button>\r\n      </ButtonGroup>\r\n    </Box>\r\n    {!!set4CondNums.length && <Stack spacing={1} sx={{ p: 1 }}>\r\n      {set4CondNums.map(setNumKey =>\r\n        <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\r\n      )}\r\n    </Stack>}\r\n  </CardLight>\r\n}\r\nfunction ArtifactSubCard({ substats, setSubstats, substatsType, setSubstatsType, mainStatKeys }: { substats: Record<SubstatKey, number>, setSubstats: (substats: Record<SubstatKey, number>) => void, substatsType: SubstatType, setSubstatsType: (t: SubstatType) => void, mainStatKeys: MainStatKey[] }) {\r\n  const setValue = useCallback((key: SubstatKey) => (v: number) => setSubstats({ ...substats, [key]: v }), [substats, setSubstats])\r\n  const { t } = useTranslation(\"page_character\")\r\n  const rv = Object.entries(substats).reduce((t, [k, v]) => t + (v / Artifact.substatValue(k)), 0) * 100\r\n  const rolls = Object.entries(substats).reduce((t, [k, v]) => t + (v / Artifact.substatValue(k, undefined, substatsType)), 0)\r\n  return <CardLight sx={{ p: 1, height: \"100%\" }}>\r\n    <Box sx={{ mb: 1, display: \"flex\", gap: 1 }}>\r\n      <DropdownButton fullWidth title={t(`tabTheorycraft.substatType.${substatsType}`)}>\r\n        {substatType.map(st => <MenuItem key={st} disabled={substatsType === st} onClick={() => setSubstatsType(st)}>{t(`tabTheorycraft.substatType.${st}`)}</MenuItem>)}\r\n      </DropdownButton>\r\n      <BootstrapTooltip title={<Typography>{t`tabTheorycraft.maxTotalRolls`}</Typography>} placement=\"top\">\r\n        <CardDark sx={{ textAlign: \"center\", py: 0.5, px: 1, minWidth: \"15em\", whiteSpace: \"nowrap\", display: \"flex\", gap: 2, justifyContent: \"flex-end\", alignItems: \"center\" }}>\r\n          <ColorText color={rolls > 45 ? \"warning\" : undefined} >Rolls: <strong>{rolls.toFixed(0)}</strong></ColorText>\r\n          <ColorText color={rolls > 45 ? \"warning\" : undefined} >RV: <strong>{rv.toFixed(1)}%</strong></ColorText>\r\n        </CardDark>\r\n      </BootstrapTooltip>\r\n    </Box>\r\n    <Stack spacing={1}>\r\n      {Object.entries(substats).map(([k, v]) => <ArtifactSubstatEditor key={k} statKey={k} value={v} setValue={setValue(k)} substatsType={substatsType} mainStatKeys={mainStatKeys} />)}\r\n    </Stack>\r\n  </CardLight>\r\n}\r\nfunction ArtifactSubstatEditor({ statKey, value, setValue, substatsType, mainStatKeys }: { statKey: SubstatKey, value: number, setValue: (v: number) => void, substatsType: SubstatType, mainStatKeys: MainStatKey[] }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const unit = KeyMap.unit(statKey)\r\n  const substatValue = Artifact.substatValue(statKey, 5, substatsType)\r\n  const rv = value / Artifact.substatValue(statKey) * 100\r\n  const rolls = value / substatValue\r\n  const numMains = mainStatKeys.reduce((t, ms) => t + (ms === statKey ? 1 : 0), 0)\r\n  const maxRolls = (5 - numMains) * 6\r\n  const invalid = rolls > maxRolls\r\n  return <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\r\n    <CardDark sx={{ p: 0.5, minWidth: \"11em\", flexGrow: 1, display: \"flex\", gap: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n      {StatIcon[statKey]}{KeyMap.getStr(statKey)}{KeyMap.unit(statKey)}\r\n    </CardDark>\r\n    <CustomNumberInput\r\n      color={value ? \"success\" : \"primary\"}\r\n      float={KeyMap.unit(statKey) === \"%\"}\r\n      endAdornment={KeyMap.unit(statKey) || <Box width=\"1em\" component=\"span\" />}\r\n      value={parseFloat(value.toFixed(2))}\r\n      onChange={v => v !== undefined && setValue(v)}\r\n      sx={{ borderRadius: 1, px: 1, height: \"100%\", width: \"6em\" }}\r\n      inputProps={{ sx: { textAlign: \"right\" }, min: 0 }} />\r\n    <CustomNumberInput\r\n      color={value ? (invalid ? \"warning\" : \"success\") : \"primary\"}\r\n      float\r\n      startAdornment={<Box sx={{ whiteSpace: \"nowrap\", width: \"7em\", display: \"flex\", justifyContent: \"space-between\" }}><span>{cacheValueString(substatValue, unit)}{unit}</span><span>x</span></Box>}\r\n      value={parseFloat(rolls.toFixed(2))}\r\n      onChange={v => v !== undefined && setValue(v * substatValue)}\r\n      sx={{ borderRadius: 1, px: 1, my: 0, height: \"100%\", width: \"7em\" }}\r\n      inputProps={{ sx: { textAlign: \"right\", pr: 0.5, }, min: 0, step: 1 }} />\r\n    <BootstrapTooltip title={<Typography>{t(numMains ? `tabTheorycraft.maxRollsMain` : `tabTheorycraft.maxRolls`, { value: maxRolls })}</Typography>} placement=\"top\">\r\n      <CardDark sx={{ textAlign: \"center\", p: 0.5, minWidth: \"8em\" }}>\r\n        <ColorText color={invalid ? \"warning\" : undefined}>RV: <strong>{rv.toFixed(1)}%</strong></ColorText>\r\n      </CardDark>\r\n    </BootstrapTooltip>\r\n  </Box>\r\n\r\n}\r\n","import { useContext, useEffect, useState } from \"react\"\r\nimport { DatabaseContext } from \"../../../../Database/Database\"\r\nimport { CharacterKey, WeaponKey } from \"../../../../Types/consts\"\r\n\r\nexport default function useCharTC(characterKey: CharacterKey, defWeapon: WeaponKey) {\r\n  const { database } = useContext(DatabaseContext)\r\n  const [charTC, setCharTC] = useState(database.charTCs.getWithInit(characterKey, defWeapon))\r\n  useEffect(() => setCharTC(database.charTCs.getWithInit(characterKey, defWeapon)), [database, characterKey, defWeapon])\r\n  useEffect(() =>\r\n    characterKey ? database.charTCs.follow(characterKey, (k, r, v) => r === \"update\" && setCharTC(v)) : undefined,\r\n    [characterKey, setCharTC, database])\r\n  return charTC\r\n}\r\n","import { MenuItem } from '@mui/material';\r\nimport { useContext } from 'react';\r\nimport ColorText from '../../Components/ColoredText';\r\nimport DropdownButton from '../../Components/DropdownMenu/DropdownButton';\r\nimport { CharacterContext } from '../../Context/CharacterContext';\r\nimport { sgt } from '../../Data/SheetUtil';\r\nimport useCharSelectionCallback from '../../ReactHooks/useCharSelectionCallback';\r\nimport { allElements, travelerElements, TravelerKey, TravelerToElement } from '../../Types/consts';\r\n\r\nexport default function TravelerElementSelect() {\r\n  const { character } = useContext(CharacterContext)\r\n  const { key } = character\r\n  const setCharacter = useCharSelectionCallback()\r\n  if (!(key.startsWith(\"Traveler\"))) return null\r\n\r\n  const elementKey = allElements.find(e => key.toLowerCase().includes(e))!\r\n\r\n  return <DropdownButton color={elementKey} title={<strong>{sgt(`element.${elementKey}`)}</strong>}>\r\n    {travelerElements.map(eleKey =>\r\n      <MenuItem key={eleKey} selected={elementKey === eleKey} disabled={elementKey === eleKey} onClick={() => setCharacter(TravelerToElement(key as TravelerKey, eleKey))}>\r\n        <strong><ColorText color={eleKey}>{sgt(`element.${eleKey}`)}</ColorText></strong></MenuItem>)}\r\n  </DropdownButton>\r\n}\r\n","import { Female, Male } from '@mui/icons-material';\r\nimport { Button } from '@mui/material';\r\nimport { useCallback, useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { CharacterContext } from '../../Context/CharacterContext';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport useGender from '../../ReactHooks/useGender';\r\n\r\nexport default function TravelerGenderSelect() {\r\n  const { t } = useTranslation(\"ui\")\r\n  const { database } = useContext(DatabaseContext)\r\n  const { character } = useContext(CharacterContext)\r\n  const { key } = character\r\n  const gender = useGender(database)\r\n  const toggleGender = useCallback(() => database.states.set(\"dbMeta\", { gender: gender === \"F\" ? \"M\" : \"F\" }), [gender, database])\r\n  if (!(key.startsWith(\"Traveler\"))) return null\r\n  return <Button onClick={toggleGender} startIcon={gender === \"F\" ? <Female /> : <Male />}><strong>{t(`gender.${gender}`)}</strong>  </Button>\r\n}\r\n","import { BarChart, Calculate, FactCheck, Groups, Person, Science, TrendingUp } from '@mui/icons-material';\r\nimport { Box, Button, CardContent, Skeleton, Tab, Tabs } from '@mui/material';\r\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link as RouterLink, Navigate, Route, Routes, useMatch, useNavigate, useParams } from 'react-router-dom';\r\nimport CardDark from '../../Components/Card/CardDark';\r\nimport CardLight from '../../Components/Card/CardLight';\r\nimport CloseButton from '../../Components/CloseButton';\r\nimport { HitModeToggle, InfusionAuraDropdown, ReactionToggle } from '../../Components/HitModeEditor';\r\nimport LevelSelect from '../../Components/LevelSelect';\r\nimport SqBadge from '../../Components/SqBadge';\r\nimport { CharacterContext, CharacterContextObj } from '../../Context/CharacterContext';\r\nimport { DataContext, dataContextObj } from '../../Context/DataContext';\r\nimport { FormulaDataContext, FormulaDataWrapper } from '../../Context/FormulaDataContext';\r\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\r\nimport { DatabaseContext } from '../../Database/Database';\r\nimport useBoolState from '../../ReactHooks/useBoolState';\r\nimport useCharacter from '../../ReactHooks/useCharacter';\r\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\r\nimport useGender from '../../ReactHooks/useGender';\r\nimport usePromise from '../../ReactHooks/usePromise';\r\nimport useTeamData from '../../ReactHooks/useTeamData';\r\nimport useTitle from '../../ReactHooks/useTitle';\r\nimport { CharacterKey, charKeyToCharName } from '../../Types/consts';\r\nimport { CustomMultiTargetButton } from '../CustomMultiTarget';\r\nimport CharSelectDropdown from './CharSelectDropdown';\r\nimport FormulaModal from './FormulaModal';\r\nimport StatModal from './StatModal';\r\nimport TabBuild from './Tabs/TabOptimize';\r\nimport TabOverview from './Tabs/TabOverview';\r\nimport TabTalent from './Tabs/TabTalent';\r\nimport TabTeambuffs from './Tabs/TabTeambuffs';\r\nimport TabTheorycraft from './Tabs/TabTheorycraft';\r\nimport TravelerElementSelect from './TravelerElementSelect';\r\nimport TravelerGenderSelect from './TravelerGenderSelect';\r\n\r\nexport default function CharacterDisplay() {\r\n  const navigate = useNavigate();\r\n  const { database } = useContext(DatabaseContext)\r\n  const onClose = useCallback(() => navigate(\"/characters\"), [navigate])\r\n  let { characterKey } = useParams<{ characterKey?: CharacterKey }>();\r\n  const invalidKey = !database.chars.keys.includes(characterKey as CharacterKey)\r\n  if (invalidKey)\r\n    return <Navigate to=\"/characters\" />\r\n\r\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\r\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\r\n      {characterKey && <CharacterDisplayCard characterKey={characterKey} onClose={onClose} />}\r\n    </Suspense>\r\n  </Box>\r\n}\r\n\r\ntype CharacterDisplayCardProps = {\r\n  characterKey: CharacterKey,\r\n  onClose?: () => void,\r\n}\r\nfunction CharacterDisplayCard({ characterKey, onClose }: CharacterDisplayCardProps) {\r\n  const character = useCharacter(characterKey)\r\n  const { database } = useContext(DatabaseContext)\r\n  const gender = useGender(database)\r\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\r\n  const teamData = useTeamData(characterKey)\r\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\r\n  let { params: { tab = \"overview\" } } = useMatch({ path: \"/characters/:charKey/:tab\", end: false }) ?? { params: { tab: \"overview\" } }\r\n  const { t } = useTranslation([\"charNames_gen\", \"page_character\"])\r\n\r\n  useTitle(useMemo(() => `${t(`charNames_gen:${charKeyToCharName(characterKey, gender)}`)} - ${t(`page_character:tabs.${tab}`)}`, [t, characterKey, gender, tab]))\r\n\r\n  const characterDispatch = useCharacterReducer(character?.key ?? \"\")\r\n\r\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\r\n    if (!teamData || !charUIData) return undefined\r\n    return {\r\n      data: charUIData,\r\n      teamData,\r\n      oldData: undefined,\r\n    }\r\n  }, [charUIData, teamData])\r\n\r\n  const characterContextValue: CharacterContextObj | undefined = useMemo(() => {\r\n    if (!character || !characterSheet) return undefined\r\n    return {\r\n      character,\r\n      characterSheet,\r\n      characterDispatch\r\n    }\r\n  }, [character, characterSheet, characterDispatch])\r\n  return <CardDark >\r\n    {dataContextValue && characterContextValue ? <CharacterContext.Provider value={characterContextValue}><DataContext.Provider value={dataContextValue}>\r\n      <FormulaDataWrapper><CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\r\n        <Box display=\"flex\" >\r\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" flexGrow={1}>\r\n            <CharSelectDropdown />\r\n            <TravelerElementSelect />\r\n            <TravelerGenderSelect />\r\n            <DetailStatButton />\r\n            <CustomMultiTargetButton />\r\n            <FormulasButton />\r\n          </Box>\r\n          {!!onClose && <CloseButton onClick={onClose} />}\r\n        </Box>\r\n        <Box display=\"flex\" gap={1} flexWrap=\"wrap\">\r\n          {character && <LevelSelect level={character.level} ascension={character.ascension} setBoth={characterDispatch} />}\r\n          <HitModeToggle size=\"small\" />\r\n          <InfusionAuraDropdown />\r\n          <ReactionToggle size=\"small\" />\r\n        </Box>\r\n        <CardLight>\r\n          <TabNav tab={tab} />\r\n        </CardLight>\r\n        <CharacterPanel />\r\n        <CardLight>\r\n          <TabNav tab={tab} />\r\n        </CardLight>\r\n      </CardContent></FormulaDataWrapper>\r\n    </DataContext.Provider></CharacterContext.Provider> : <Skeleton variant='rectangular' width='100%' height={1000} />\r\n    }\r\n  </CardDark >\r\n}\r\nfunction CharacterPanel() {\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={500} />}>\r\n    <Routes>\r\n      {/* Character Panel */}\r\n      <Route index element={<TabOverview />} />\r\n      <Route path=\"/talent\" element={<TabTalent />} />\r\n      <Route path=\"/teambuffs\" element={<TabTeambuffs />} />\r\n      <Route path=\"/optimize\" element={<TabBuild />} />\r\n      <Route path=\"/theorycraft\" element={<TabTheorycraft />} />\r\n    </Routes>\r\n  </Suspense>\r\n}\r\nfunction TabNav({ tab }: { tab: string }) {\r\n  const { t } = useTranslation(\"page_character\")\r\n  return <Tabs\r\n    value={tab}\r\n    variant=\"scrollable\"\r\n    allowScrollButtonsMobile\r\n    sx={{\r\n      \"& .MuiTab-root:hover\": {\r\n        transition: \"background-color 0.25s ease\",\r\n        backgroundColor: \"rgba(255,255,255,0.1)\"\r\n      },\r\n    }}\r\n  >\r\n    <Tab sx={{ minWidth: \"20%\" }} value=\"overview\" label={t(\"tabs.overview\")} icon={<Person />} component={RouterLink} to=\"\" />\r\n    <Tab sx={{ minWidth: \"20%\" }} value=\"talent\" label={t(\"tabs.talent\")} icon={<FactCheck />} component={RouterLink} to=\"talent\" />\r\n    <Tab sx={{ minWidth: \"20%\" }} value=\"teambuffs\" label={t(\"tabs.teambuffs\")} icon={<Groups />} component={RouterLink} to=\"teambuffs\" />\r\n    <Tab sx={{ minWidth: \"20%\" }} value=\"optimize\" label={t(\"tabs.optimize\")} icon={<TrendingUp />} component={RouterLink} to=\"optimize\" />\r\n    <Tab sx={{ minWidth: \"20%\" }} value=\"theorycraft\" label={t(\"tabs.theorycraft\")} icon={<Science />} component={RouterLink} to=\"theorycraft\" />\r\n  </Tabs>\r\n}\r\n\r\n\r\nfunction DetailStatButton() {\r\n  const { t } = useTranslation(\"page_character\")\r\n  const [open, onOpen, onClose] = useBoolState()\r\n  const { character: { bonusStats } } = useContext(CharacterContext)\r\n  const bStatsNum = Object.keys(bonusStats).length\r\n  return <>\r\n    <Button color=\"info\" startIcon={<BarChart />} onClick={onOpen}>\r\n      {t`addStats.title`}{!!bStatsNum && <SqBadge sx={{ ml: 1 }} color=\"success\" >{bStatsNum}</SqBadge>}\r\n    </Button>\r\n    <StatModal open={open} onClose={onClose} />\r\n  </>\r\n}\r\nfunction FormulasButton() {\r\n  const { onModalOpen } = useContext(FormulaDataContext)\r\n  return <>\r\n    <Button color=\"info\" startIcon={<Calculate />} onClick={onModalOpen}>Formulas {\"&\"} Calcs</Button>\r\n    <FormulaModal />\r\n  </>\r\n}\r\n","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { Lock, LockOpen } from \"@mui/icons-material\"\r\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, IconButton, Skeleton, Tooltip, Typography } from \"@mui/material\"\r\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Assets from \"../Assets/Assets\"\r\nimport CardLight from \"../Components/Card/CardLight\"\r\nimport { LocationAutocomplete } from \"../Components/Character/LocationAutocomplete\"\r\nimport LocationName from \"../Components/Character/LocationName\"\r\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\r\nimport ImgIcon from \"../Components/Image/ImgIcon\"\r\nimport { StarsDisplay } from \"../Components/StarDisplay\"\r\nimport StatIcon from \"../Components/StatIcon\"\r\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\r\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\r\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\r\nimport { DatabaseContext } from \"../Database/Database\"\r\nimport { uiInput as input } from \"../Formula\"\r\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\r\nimport KeyMap, { valueString } from \"../KeyMap\"\r\nimport usePromise from \"../ReactHooks/usePromise\"\r\nimport useWeapon from \"../ReactHooks/useWeapon\"\r\nimport { LocationKey } from \"../Types/consts\"\r\n\r\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean, extraButtons?: JSX.Element }\r\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false, extraButtons }: WeaponCardProps) {\r\n  const { t } = useTranslation([\"page_weapon\", \"ui\"]);\r\n  const { database } = useContext(DatabaseContext)\r\n  const databaseWeapon = useWeapon(weaponId)\r\n  const weapon = databaseWeapon\r\n  const weaponSheet = usePromise(() => weapon?.key ? WeaponSheet.get(weapon.key) : undefined, [weapon?.key])\r\n\r\n  const filter = useCallback((cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType, [weaponSheet])\r\n\r\n  const wrapperFunc = useCallback(children => <CardActionArea onClick={() => onClick?.(weaponId)} >{children}</CardActionArea>, [onClick, weaponId],)\r\n  const falseWrapperFunc = useCallback(children => <Box >{children}</Box>, [])\r\n  const setLocation = useCallback((k: LocationKey) => weaponId && database.weapons.set(weaponId, { location: k }), [database, weaponId])\r\n\r\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\r\n\r\n  if (!weapon || !weaponSheet || !UIData) return null;\r\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\r\n  const weaponTypeKey = UIData.get(input.weapon.type).value!\r\n  const stats = [input.weapon.main, input.weapon.sub, input.weapon.sub2].map(x => UIData.get(x))\r\n  const img = weaponSheet.getImg(ascension)\r\n\r\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\r\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\" }}>\r\n      <ConditionalWrapper condition={!!onClick} wrapper={wrapperFunc} falseWrapper={falseWrapperFunc}>\r\n        <Box className={`grad-${weaponSheet.rarity}star`} sx={{ position: \"relative\", pt: 2, px: 2, }}>\r\n          {!onClick && <IconButton color=\"primary\" onClick={() => database.weapons.set(id, { lock: !lock })} sx={{ position: \"absolute\", right: 0, bottom: 0, zIndex: 2 }}>\r\n            {lock ? <Lock /> : <LockOpen />}\r\n          </IconButton>}\r\n          <Box sx={{ position: \"relative\", zIndex: 1 }}>\r\n            <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mb: 1 }}>\r\n              <ImgIcon sx={{ fontSize: \"1.5em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />\r\n              <Typography noWrap sx={{ textAlign: \"center\", backgroundColor: \"rgba(100,100,100,0.35)\", borderRadius: \"1em\", px: 1 }}><strong>{weaponSheet.name}</strong></Typography>\r\n            </Box>\r\n            <Typography component=\"span\" variant=\"h5\">Lv. {level}</Typography>\r\n            <Typography component=\"span\" variant=\"h5\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\r\n            <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\r\n            <Typography><StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\r\n          </Box>\r\n          <Box sx={{ height: \"100%\", position: \"absolute\", right: 0, top: 0 }}>\r\n            <Box\r\n              component=\"img\"\r\n              src={img ?? \"\"}\r\n              width=\"auto\"\r\n              height=\"100%\"\r\n              sx={{ float: \"right\" }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <CardContent>\r\n          {stats.map(node => {\r\n            if (!node.info.key) return null\r\n            const displayVal = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\r\n            return <Box key={node.info.key} sx={{ display: \"flex\" }}>\r\n              <Typography flexGrow={1}>{StatIcon[node.info.key!]} {KeyMap.get(node.info.key)}</Typography>\r\n              <Typography>{displayVal}</Typography>\r\n            </Box>\r\n          })}\r\n        </CardContent>\r\n      </ConditionalWrapper>\r\n      <Box sx={{ p: 1, display: \"flex\", gap: 1, justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          {canEquip\r\n            ? <LocationAutocomplete location={location} setLocation={setLocation} filter={filter} />\r\n            : <LocationName location={location} />}\r\n        </Box>\r\n        <ButtonGroup sx={{ height: \"100%\" }}>\r\n          {!!onEdit && <Tooltip title={<Typography>{t`page_weapon:edit`}</Typography>} placement=\"top\" arrow>\r\n            <Button color=\"info\" onClick={() => onEdit(id)} >\r\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\r\n            </Button>\r\n          </Tooltip>}\r\n          {!!onDelete && <Button color=\"error\" onClick={() => onDelete(id)} disabled={!!location || lock} >\r\n            <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\r\n          </Button>}\r\n          {extraButtons}\r\n        </ButtonGroup>\r\n      </Box>\r\n    </CardLight>\r\n  </Suspense>\r\n}\r\n","import { strPadLeft } from \"./Util\"\r\n\r\nexport const SECOND_MS = 1000\r\nexport const MINUTE_MS = 60 * SECOND_MS\r\nexport const HOUR_MS = 60 * MINUTE_MS\r\nexport const DAY_MS = 24 * HOUR_MS\r\n\r\nexport function msToUnits(ms: number) {\r\n  let milliseconds = ms % 1000\r\n  let seconds = Math.floor((ms / 1000) % 60)\r\n  let minutes = Math.floor((ms / (1000 * 60)) % 60)\r\n  let hours = Math.floor((ms / (1000 * 60 * 60)))\r\n  return { hours, minutes, seconds, milliseconds }\r\n}\r\nexport function timeString(ms: number) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds } = msToUnits(ms)\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)} ${timeText}`;\r\n}\r\nexport function timeStringMs(ms: number) {\r\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\r\n  let { hours, minutes, seconds, milliseconds } = msToUnits(ms)\r\n  let timeText = \"Minutes\"\r\n  if (hours) timeText = \"Hours\"\r\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)}.${strPadLeft(milliseconds, '0', 3)} ${timeText}`;\r\n}\r\n","import { AllWeaponSheets } from \"../Data/Weapons/WeaponSheet\";\r\nimport i18n from \"../i18n\";\r\nimport { ICachedWeapon } from \"../Types/weapon\";\r\nimport { FilterConfigs, SortConfigs } from \"./SortByFilters\";\r\nexport const weaponSortKeys = [\"level\", \"rarity\", \"name\"] as const\r\nexport type WeaponSortKey = typeof weaponSortKeys[number]\r\nexport function weaponSortConfigs(weaponSheets: AllWeaponSheets): SortConfigs<WeaponSortKey, ICachedWeapon> {\r\n  return {\r\n    level: wp => wp.level * (wp.ascension + 1) ?? 0,\r\n    rarity: wp => weaponSheets(wp.key).rarity,\r\n    name: wp => i18n.t(`weaponNames_gen:${wp.key}`) as string\r\n  }\r\n}\r\nexport function weaponFilterConfigs(weaponSheets: AllWeaponSheets): FilterConfigs<\"rarity\" | \"weaponType\" | \"name\", ICachedWeapon> {\r\n  return {\r\n    rarity: (wp, filter) => filter.includes(weaponSheets(wp.key).rarity),\r\n    weaponType: (wp, filter) => filter.includes(weaponSheets(wp.key).weaponType),\r\n    name: (wp, filter) => i18n.t(`weaponNames_gen:${wp.key}`).toLowerCase().includes(filter.toLowerCase()),\r\n  }\r\n}\r\n\r\nexport const weaponSortMap: Partial<Record<WeaponSortKey, WeaponSortKey[]>> = {\r\n  name: [\"name\"],\r\n  level: [\"level\", \"rarity\", \"name\"],\r\n  rarity: [\"rarity\", \"level\", \"name\"],\r\n}\r\n"],"names":["MenuItemWithImage","value","image","text","theme","isSelected","addlElement","props","MenuItem","ListItemIcon","ListItemText","primaryTypographyProps","style","fontWeight","typography","fontWeightMedium","fontWeightRegular","ArtifactMultiAutocomplete","allArtifactKeysWithGrouper","selectedArtifactKeys","setArtifactKeys","getName","getImage","label","useTheme","options","useMemo","map","key","grouper","Autocomplete","autoHighlight","multiple","disableCloseOnSelect","onChange","_","v","getOptionLabel","option","isOptionEqualToValue","renderInput","params","TextField","variant","InputLabelProps","color","palette","primary","length","type","renderOption","includes","renderTags","selected","getTagProps","index","element","allElementsWithPhy","ele","undefined","Chip","icon","ArtifactSetMultiAutocomplete","artSetKeys","setArtSetKeys","artifactSheets","usePromise","ArtifactSheet","t","useTranslation","allArtifactSetsAndRarities","Object","entries","flatMap","rarity","set","sort","sortByRarityAndName","nameRaw","defIcon","groupBy","toString","renderGroup","group","List","component","Box","ListSubheader","sx","top","stars","children","ArtifactMainStatMultiAutocomplete","mainStatKeys","setMainStatKeys","allMainStatKeys","KeyMap","StatIcon","ArtifactSubstatMultiAutocomplete","substatKeys","setSubstatKeys","allSubstatKeys","ArtifactSingleAutocomplete","selectedArtifactKey","setArtifactKey","disable","showDefault","defaultText","defaultIcon","concat","clearIcon","event","newValue","reason","getOptionDisabled","startAdornment","hasValue","ArtifactSetSingleAutocomplete","artSetKey","setArtSetKey","a","b","aName","i18n","bName","ArtifactLevelSlider","levelLow","levelHigh","setLow","setHigh","setBoth","dark","disabled","showLevelText","useState","sliderLow","setsliderLow","sliderHigh","setsliderHigh","setSlider","useCallback","e","TypeError","l","h","useEffect","width","display","alignItems","bgcolor","val","clamp","px","pl","inputProps","textAlign","flexGrow","mx","getAriaLabel","onChangeCommitted","valueLabelDisplay","min","max","step","marks","CardHeaderCustom","avatar","title","action","gap","p","ConditionalSelector","conditional","keys","states","SimpleConditionalSelector","ExclusiveConditionalSelector","MultipleConditionalSelector","useContext","CharacterContext","character","characterDispatch","data","DataContext","setConditional","conditionalValues","deepClone","layeredAssignment","path","deletePropPath","conditionalValue","get","stateKey","badge","getStateBadge","name","condName","getCondName","Button","fullWidth","size","borderRadius","onClick","startIcon","CheckBox","CheckBoxOutlineBlank","state","SqBadge","DropdownButton","Divider","st","ButtonGroup","orientation","disableElevation","isElement","disp","stateName","badgeColor","badgeText","ml","key18","ns","values","Translate","useBadge","ConditionalDisplay","fields","hideHeader","hideDesc","condVal","CardDark","evalIfFunc","HeaderDisplay","header","CardContent","pb","DocumentDisplay","sections","teamBuffOnly","sectionDisplays","s","i","canShow","teamBuff","SectionDisplay","section","filter","flexDirection","FieldsSectionDisplay","TextSectionDisplay","hideDivider","description","displayTitle","InfoTooltip","Typography","LevelSelect","level","ascension","useLow","ascensionMaxLevels","ascensionMaxLevelLow","ascensionMaxLevel","setLevel","maxLevelLow","maxLevel","findIndex","ascenML","setAscension","lowerAscension","contentDark","main","height","whiteSpace","ambiguousLevelLow","ambiguousLevel","milestoneLevelsLow","milestoneLevels","lv","as","RefinementDropdown","refinement","setRefinement","allRefinement","r","DisabledButton","styled","backgroundColor","secondary","TextButton","WeaponSelectionModal","show","onHide","onSelect","weaponTypeFilter","weaponSheets","WeaponSheet","allWeaponTypeKeys","weaponFilter","setWeaponfilter","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","weaponIdList","allWeaponKeys","wKey","weaponType","toLowerCase","open","onClose","py","container","spacing","item","autoFocus","target","InputProps","weaponKey","weaponSheet","lg","md","src","getImg","className","Assets","colored","large","CharSelectDropdown","characterSheet","showModal","setshowModal","setCharacter","useCharSelectionCallback","CharacterSelectionModal","ThumbSide","thumbImgSide","FormulaModal","modalOpen","FormulaDataContext","setFormulaData","onCloseHandler","ModalWrapper","CardHeader","CloseButton","pt","CalculationDisplay","contextData","getDisplaySections","Suspense","fallback","Skeleton","mr","mb","Nodes","FormulaCalc","displayNs","sectionKey","database","DatabaseContext","getDisplayHeader","every","isEmpty","CardLight","ImgIcon","m","node","FormulaAccordian","contextNode","expanded","setExpanded","handleChange","isExpanded","scrollRef","useRef","setTimeout","current","scrollIntoView","behavior","Accordion","ref","AccordionSummary","expandIcon","ExpandMore","info","valueString","unit","allAmpReactions","AmpReactionModeText","reaction","trigger","subVariant","AccordionDetails","formulas","subform","expand","other","IconButton","transform","marginLeft","transition","transitions","create","duration","shortest","FlexButtonGroup","StatInput","placeholder","defaultValue","onValueChange","percent","onReset","restProps","CustomNumberInput","flexBasis","float","endAdornment","flexShrink","Replay","EnemyExpandCard","setexpanded","toggle","eLvlNode","input","eDefRed","eDefIgn","Grid","EnemyResText","Collapse","in","timeout","unmountOnExit","EnemyEditor","content","isFinite","bsProps","xs","enemyOverride","eLvl","enemyLevel","enemyDefIgn_","enemyDefRed_","href","rel","contentLight","statKey","eleKey","elementImmunity","Number","MAX_VALUE","Infinity","cols","StatModal","Stack","BonusStatsEditor","MainStatsCards","allInputPremodKeys","wrapperFunc","bonusStats","setFilter","columns","StatEditorList","statKeys","statFilters","setStatFilters","mainSubKeys","mainReadNodes","k","mainEditKeys","otherStatKeys","allEleDmgKeys","allEleResKeys","miscStatkeys","StatDisplayContent","nodes","extra","oldData","FieldDisplay","rn","ListItem","oldValue","specialNode","charEle","elementKey","isMelee","otherStatReadNodes","eles","allElements","n","some","miscStatReadNodes","StatDisplayCard","justifyContent","OptimizationTargetContext","createContext","filterFeasiblePerm","artSetPerm","pruneAll","minimum","arts","numTop","exclusion","forced","should","deps","pruneNodeRange","reaffine","pruneOrder","pruneArtRange","count","x","newArts","newNodes","forceRename","affineNodes","Set","topLevelAffine","visit","isAffine","add","operands","forEach","_op","op","has","dynKeys","forEachNodes","f","operation","accu","Error","nonConst","assertUnreachable","base","nextDynKey","affine","affineMap","Map","customRead","reaffineArt","stat","constantFold","dyn","objectMap","constant","fromEntries","result","mapFormulas","objectKeyMap","allSlotKeys","slot","id","offsets","baseValue","progress","noRainbow","rainbow","noSwitchIn","noSwitchOut","list","newList","art","greaterEqual","greater","baseRange","wrap","artRanges","computeArtRange","otherArtRanges","addArtRange","read","newRange","computeNodeRange","nodeRange","operandRanges","threshold","pass","fail","newOperands","op1","op2","j","ranges","range","reads","_f","computeMinMax","allOperations","reduce","c","sum","NaN","minMaxes","Math","mergeBuilds","builds","maxNum","slice","mergePlot","plots","scale","round","plot","build","filters","_artSets","artSets","available","kind","sets","exclusionToAllowed","populateShapes","indexOfShape","check","shape","check_free","remaining","rainbows","isolated","missing","rejected","required","allowedSet","allowedCounts","counts","push","find","groupped","used","requiredRainbows","usableRainbows","delete","replacing","allowedRainbows","shapes","noFilter","SetEffectDisplay","setKey","setNumKey","conditionalsOnly","sheet","document","setEffectDocument","useBuildSetting","characterKey","buildSettings","buildSetting","setBuildSetting","follow","buildSettingDispatch","ArtifactSetConfig","dataContext","artSetExclusion","setOpen","onOpen","artSetKeyList","reverse","useForceUpdate","dbDirty","forceUpdate","followAny","artSlotCount","sk","slotKey","allowRainbow2","allowRainbow4","allow2","allow4","exclude2","exclude4","artifactCondCount","allArtifactSets","fakeDataContextObj","UIData","artSet","resetArtConds","tconditional","setAllExclusion","setnum","exclude","artSetExclusion_","faChartLine","faBan","Settings","Trans","i18nKey","AllSetAllowExcludeCard","setNum","numAllow","numExclude","gutterBottom","num","endIcon","ArtifactSetCard","slotCount","setExclusionSet","slots","tot","set4CondNums","setEffects","doc","defIconSrc","paddingTop","opacity","artifactSlotIcon","parseInt","levels","AssumeFullLevelToggle","mainStatAssumptionLevel","setmainStatAssumptionLevel","lvl","BonusStatsCard","bonusStatsKeys","Monospace","fontFamily","BorderLinearProgress","LinearProgress","BuildAlert","status","tested","skipped","failed","total","startTime","finishTime","characterName","hasTotal","generatingBuilds","unskipped","testedString","toLocaleString","unskippedString","skippedText","durationString","timeStringMs","performance","now","subtitle","Alert","severity","toFixed","ArtifactCardNano","artifactId","pSlotKey","showLocation","BGComponent","useArtifact","actionWrapperFunc","CardActionArea","mainStatKey","substats","location","mainStatLevel","mainStatUnit","alpha","ConditionalWrapper","condition","wrapper","position","ArtifactTooltip","slotIcons","maxHeight","maxWidth","pointerEvents","Artifact","LocationIcon","charKey","chars","LocationToCharacterKey","overflow","bottom","zIndex","BootstrapTooltip","placement","disableInteractive","cacheValueString","SubstatDisplay","numRolls","rolls","rollColor","alignContent","gender","useGender","CharacterSheet","marginTop","BusinessCenter","StatDisplayComponent","Masonry","sm","xl","Section","optimizationTarget","displayNsReads","nodeKey","emphasize","JSON","stringify","WeaponCardNano","weaponId","weapon","useWeapon","computeUIData","dataObjForWeapon","WeaponNameTooltip","hasRefinement","WeaponStat","BuildDisplayItem","compareBuild","extraButtons","equippedArtifacts","newOld","setNewOld","close","equipBuild","window","confirm","aid","charKeyToLocCharKey","weapons","statProviderContext","dataContext_","artNanos","oldId","newId","currentlyEquipped","CompareArtifactModal","flexWrap","SetBadges","setToSlots","slotarr1","slotarr","SetBadge","artifactSheet","numInSet","setActive","ArtifactSetTooltip","onEquip","containerProps","minWidth","ArtifactCard","canExclude","canEquip","ChevronRight","fontSize","ChartCard","chartData","plotBase","setPlotBase","showDownload","setshowDownload","showMin","setshowMin","displayData","downloadData","increasingX","y","minimumData","point","last","pop","allData","sKey","Tooltip","Info","Download","DataDisplay","Chart","plotNode","valueNode","TextArea","resize","minHeight","readOnly","selectionStart","selectionEnd","plotBaseUnit","valueUnit","ResponsiveContainer","ComposedChart","CartesianGrid","strokeDasharray","XAxis","dataKey","domain","tick","fill","tickFormatter","YAxis","allowDecimals","ZAxis","Legend","Scatter","line","lineType","isAnimationActive","Line","stroke","connectNulls","strokeWidth","artifactsSlotsToSelectMainStats","MainStatSelectionCard","numSel","mt","cursor","StatFilterCard","UseEquipped","useEquippedArts","useBoolState","useDBState","initialTabOptimizeDBState","tempEquipmentPriority","equipmentPriority","setOptimizeDBState","ck","setPrio","setPrioRank","fromIndex","toIndex","arr","splice","removePrio","addPrio","resetPrio","numAbove","indexOf","numUseEquippedChar","numUnlisted","SelectItem","rank","maxRank","setRank","onRemove","NewItem","onAdd","useCharacter","equippedWeapon","KeyboardDoubleArrowUp","KeyboardArrowUp","KeyboardArrowDown","KeyboardDoubleArrowDown","Close","CharacterCardPico","WeaponCardPico","aId","ArtifactCardPico","artifactObj","char","Add","UseExcluded","artsDirty","useExcludedArts","numExcludedArt","dynamic","setReadNodeKeys","dynamicData","compactArtifacts","allowPartial","flower","plume","goblet","circlet","sands","mainStatVal","endsWith","substat","accurateValue","TabBuild","compareData","buildStatus","setBuildStatus","setchartData","setArtsDirty","threads","defThreads","maxWorkers","setMaxWorkers","useCharacterReducer","onClickTeammate","noArtifact","buildDate","maxBuildsToShow","teamData","useTeamData","buildsArts","cancelToken","generateBuilds","getThreshold","fetchContinueWork","fetchPruningWork","fetchRequestWork","requestFilters","command","unprunedFilters","next","done","minCount","minFilterCount","buildValues","cantTakeList","ek","filteredArts","mainStats","split","getTeamData","workerData","uiDataForTeam","assign","mergeData","optimizationTargetNode","objPathValue","targetNode","valueFilter","cancelled","Promise","setPerms","prepruneArts","optimize","plotBaseNode","Array","maxRequestFilterInFlight","Symbol","iterator","idleWorkers","splittingWorkers","workers","finalizedList","worker","Worker","URL","setup","maxBuilds","postMessage","countCommand","finalize","finalized","onmessage","source","terminate","pruned","prepruned","console","log","work","then","buildTimer","setInterval","any","all","results","clearInterval","plotData","artifactIds","Date","Link","RouterLink","to","CharacterCard","getDisplay","TrendingUp","maxBuildsToShowList","OptimizationTargetSelector","setTarget","SolidToggleButtonGroup","exclusive","ToggleButton","Provider","BuildList","DataContextWrapper","join","providerValue","CompareBuildButton","artId","onShow","CompareContent","arrow","Difference","newArt","artmap","dataProviderValue","numToShowMap","ArtifactFilterDisplay","lazy","ArtifactSwapModal","onChangeId","clickHandler","filterOptionReducer","slotKeys","useReducer","initialFilterOption","filterOption","filterOptionDispatch","brPt","useMediaQueryUp","filterConfigs","artifactFilterConfigs","artIdList","filterFunc","filterFunction","disableSlotFilter","rarityHandler","handleMultiSelect","allRarities","WeaponSwapModal","weaponTypeKey","setRarity","weaponFilterConfigs","sortFunction","weaponSortMap","weaponSortConfigs","star","WeaponCard","WeaponEditor","EquipmentSection","setweaponId","showWeapon","hideWeapon","breakpoint","useMediaQuery","breakpoints","up","weaponDoc","initCharMeta","rvFilter","deferredRvFilter","deferredRvSet","footer","LargeWeaponSwapButton","ArtifactSectionCard","onEdit","WeaponSwapButton","effFilter","ArtifactSwapButton","editor","ArtSwapCard","SwapHoriz","hasEquipped","unequipArts","setCharMeta","setRVFilter","deferredrvFilter","artid","currentEfficiency","maxEfficiency","currentEfficiency_","maxEfficiency_","rvField","PercentBadge","valid","rvmField","borderBottomRightRadius","borderBottomLeftRadius","SubstatToggle","selectedKeys","field","TabOverview","onScroll","CharacterProfileCard","EquipmentRow","team","navigate","useNavigate","constellation","tlvl","auto","skill","burst","tBoost","favorite","left","Favorite","FavoriteBorder","right","getLevelString","cardImg","tKey","Badge","badgeContent","overlap","anchorOrigin","vertical","horizontal","padding","lineHeight","getTalentOfKey","img","constellationName","talentSpacing","CharacterTalentPane","grlg","constellationCards","SkillDisplayCard","talentKey","onClickTitle","ReactionDisplay","tText","asc","enabled","talentLimits","talent","actionWrapeprFunc","setTalentLevel","newTalentLevelKey","levelBoost","talentSheet","headerAction","TabTeambuffs","TeamBuffDisplay","ResonanceDisplay","TeammateDisplay","teamBuffs","getTeamBuff","premod","enemy","teamCount","titleTypographyProps","resonanceSheets","res","desc","active","activeCharacterKey","teamMateKey","onClickHandler","setTeammate","dataBundle","teammateCharacterContext","teamConditional","teamMateDataContext","TeammateAutocomplete","setChar","onClickHeader","artifactChildren","CharArtifactCondDisplay","weaponChildren","CharWeaponCondDisplay","characterChildren","CharTalentCondDisplay","isTeammateCard","sn","sts","characterSheets","toText","startsWith","charKeyToCharName","toImg","PersonAdd","pr","isFavorite","getWithInit","onDisable","localeCompare","GeneralAutocomplete","valueKey","clearKey","TabTheorycraft","defWeapon","charTCs","charTC","setCharTC","useCharTC","defaultInitialWeaponKey","setData","resetData","initCharTC","setWeapon","copyFromEquipped","eWeapon","newData","artifact","stats","lock","setArtifact","data_","setSubstatsType","setSubstats","overriderArtData","overrideWeapon","charUIData","dataContextValue","CopyAll","Refresh","WeaponEditorCard","ArtifactMainLevelCard","artifactData","setArtifactData","ArtifactSubCard","substatsType","weaponUIData","flexshrink","setSlot","artifactData_","setArtSet","ArtifactMainLevelSlot","ArtifactSetsEditor","setSlotProp","mLvl","maxArtifactLevel","FontAwesomeSvgIcon","slotIconSVG","msk","faStar","my","setSet","setValue","deleteValue","rest","ArtifactSetEditor","disableClearable","setName","DeleteForever","rv","substatType","ArtifactSubstatEditor","substatValue","numMains","ms","maxRolls","invalid","parseFloat","TravelerElementSelect","sgt","travelerElements","TravelerToElement","TravelerGenderSelect","toggleGender","Female","Male","CharacterDisplay","useParams","CharacterDisplayCard","useMatch","end","tab","useTitle","characterContextValue","DetailStatButton","CustomMultiTarget","FormulasButton","TabNav","CharacterPanel","Tabs","allowScrollButtonsMobile","Tab","Person","FactCheck","Groups","Science","bStatsNum","BarChart","onModalOpen","Calculate","onDelete","cs","falseWrapperFunc","setLocation","falseWrapper","noWrap","displayVal","faEdit","faTrashAlt","SECOND_MS","MINUTE_MS","HOUR_MS","DAY_MS","msToUnits","milliseconds","seconds","floor","minutes","hours","timeString","timeText","strPadLeft","weaponSortKeys","wp"],"sourceRoot":""}